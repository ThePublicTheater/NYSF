//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Nysf.Elmah.TessWebApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TessituraSoap", Namespace="http://tessiturasoftware.com/")]
    public partial class Tessitura : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSeatsBriefOperationCompleted;
        
        private LineItemHeader lineItemHeaderValueField;
        
        private System.Threading.SendOrPostCallback ReserveTicketsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SMTPListeningOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiftAidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLimitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailWithDiscountingSYOSExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesEx4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionDetailEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstituentsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DestroyCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAssociationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConstituentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRankingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConstituentInterestsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByZonesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByZonesBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsBySectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsBySectionsBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZonesPerSectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScreensOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectSessionSeatServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebSeatServerConnectionCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionCreditsOperationCompleted;
        
        private LoginAttemptHeader loginAttemptHeaderValueField;
        
        private System.Threading.SendOrPostCallback LoginExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubscriptionHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderCommentsEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromoCodeExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAPIDiagnosticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateTessituraUserOperationCompleted;
        
        private CheckoutStatusHeader checkoutStatusHeaderValueField;
        
        private System.Threading.SendOrPostCallback CheckoutEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailSYOSDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSpecialActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecialActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConstituencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveConstituencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHoldCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHoldCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveHoldCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderConfirmationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrderConfirmationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOrderConfirmationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlterTicketExpirationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketExpirationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxTicketAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalDataExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionsEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackagesEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteLocalProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeModeOfSaleExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSourceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaymentPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateTessituraUserExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermissionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckoutEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintAtHomeSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstituentInfoExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionsEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackagesEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailWithDiscountingExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailPurposesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGiftAidDeclarationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageDetailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageDetailWithDiscountingExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNFSPackageDetailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubLineItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOnAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyDiscountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSubLineItemPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAddressExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionDetailEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestReprintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailWithDiscountingSYOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePackageItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOrderCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckoutExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModeOfSaleRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseGiftCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyGiftCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGiftCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentPlanInstallmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePaymentPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizePaymentPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePaymentPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstituentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailWithDiscountingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageDetailWithDiscountingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountInfoExOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebSeatServerListeningOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPackageItemSeatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveTicketsSpecifiedSeatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePriceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCustomOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeywordsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByScreenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByScreenBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackagesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConstituentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketPrintInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConstituentAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConstituentInterestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersForDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewSessionKeyExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGiftAidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferCartOperationCompleted;
        
        private SubPackageLineItemHeader subPackageLineItemHeaderValueField;
        
        private System.Threading.SendOrPostCallback AddSubPackageItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSubPackageItemSeatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomOrderDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderCommentsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOrderCommentsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionDetailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLocalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromoCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateProvinceExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSuperPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TessituraSeatServerListeningViaWebSeatServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback TessituraCreditCardServerListeningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginConstituentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveSuperPackageItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsByZoneBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailSYOSOperationCompleted;
        
        private NFSPackageLineItemHeader nFSPackageLineItemHeaderValueField;
        
        private System.Threading.SendOrPostCallback AddNFSPackagePerformanceItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNFSPackageDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateNFSPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNFSPackageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsBySectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeatsBySectionBriefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiftCertificateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityStateProvinceByPostalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountInfoEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReturnTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeywordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPerformanceAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveTickets1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveTicketsUnseatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseTicketsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveContribuionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressAndShippingMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShippingMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetShippingInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterWithPromoCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginWithPromoCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLoginWithPromoCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewShippingAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoggedInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewSessionKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLastAccessTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVariablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVariableOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerServiceIssueOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateProvinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeModeOfSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistingOrdersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadExistingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPackageItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Tessitura() {
            this.Url = global::Nysf.Elmah.Properties.Settings.Default.Nysf_Elmah_TessWebApi_Tessitura;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public LineItemHeader LineItemHeaderValue {
            get {
                return this.lineItemHeaderValueField;
            }
            set {
                this.lineItemHeaderValueField = value;
            }
        }
        
        public LoginAttemptHeader LoginAttemptHeaderValue {
            get {
                return this.loginAttemptHeaderValueField;
            }
            set {
                this.loginAttemptHeaderValueField = value;
            }
        }
        
        public CheckoutStatusHeader CheckoutStatusHeaderValue {
            get {
                return this.checkoutStatusHeaderValueField;
            }
            set {
                this.checkoutStatusHeaderValueField = value;
            }
        }
        
        public SubPackageLineItemHeader SubPackageLineItemHeaderValue {
            get {
                return this.subPackageLineItemHeaderValueField;
            }
            set {
                this.subPackageLineItemHeaderValueField = value;
            }
        }
        
        public NFSPackageLineItemHeader NFSPackageLineItemHeaderValue {
            get {
                return this.nFSPackageLineItemHeaderValueField;
            }
            set {
                this.nFSPackageLineItemHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSeatsBriefCompletedEventHandler GetSeatsBriefCompleted;
        
        /// <remarks/>
        public event ReserveTicketsExCompletedEventHandler ReserveTicketsExCompleted;
        
        /// <remarks/>
        public event SMTPListeningCompletedEventHandler SMTPListeningCompleted;
        
        /// <remarks/>
        public event CalculateFeesCompletedEventHandler CalculateFeesCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventHandler GetPerformanceDetailWithDiscountingSYOSDataSetCompleted;
        
        /// <remarks/>
        public event GetGiftAidInfoCompletedEventHandler GetGiftAidInfoCompleted;
        
        /// <remarks/>
        public event ValidateLimitsCompletedEventHandler ValidateLimitsCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailWithDiscountingSYOSExCompletedEventHandler GetPerformanceDetailWithDiscountingSYOSExCompleted;
        
        /// <remarks/>
        public event GetPerformancesEx4CompletedEventHandler GetPerformancesEx4Completed;
        
        /// <remarks/>
        public event GetProductionDetailEx3CompletedEventHandler GetProductionDetailEx3Completed;
        
        /// <remarks/>
        public event GetConstituentsExCompletedEventHandler GetConstituentsExCompleted;
        
        /// <remarks/>
        public event PrintTicketsCompletedEventHandler PrintTicketsCompleted;
        
        /// <remarks/>
        public event DestroyCacheCompletedEventHandler DestroyCacheCompleted;
        
        /// <remarks/>
        public event UpdateAssociationCompletedEventHandler UpdateAssociationCompleted;
        
        /// <remarks/>
        public event RemoveAssociationCompletedEventHandler RemoveAssociationCompleted;
        
        /// <remarks/>
        public event AddConstituentCompletedEventHandler AddConstituentCompleted;
        
        /// <remarks/>
        public event UpdateRankingCompletedEventHandler UpdateRankingCompleted;
        
        /// <remarks/>
        public event UpdateConstituentInterestsExCompletedEventHandler UpdateConstituentInterestsExCompleted;
        
        /// <remarks/>
        public event UpdateEAddressCompletedEventHandler UpdateEAddressCompleted;
        
        /// <remarks/>
        public event GetSeatsByZonesCompletedEventHandler GetSeatsByZonesCompleted;
        
        /// <remarks/>
        public event GetSeatsByZonesBriefCompletedEventHandler GetSeatsByZonesBriefCompleted;
        
        /// <remarks/>
        public event GetSeatsBySectionsCompletedEventHandler GetSeatsBySectionsCompleted;
        
        /// <remarks/>
        public event GetSeatsBySectionsBriefCompletedEventHandler GetSeatsBySectionsBriefCompleted;
        
        /// <remarks/>
        public event GetZonesPerSectionCompletedEventHandler GetZonesPerSectionCompleted;
        
        /// <remarks/>
        public event GetScreensCompletedEventHandler GetScreensCompleted;
        
        /// <remarks/>
        public event DisconnectSessionSeatServerCompletedEventHandler DisconnectSessionSeatServerCompleted;
        
        /// <remarks/>
        public event WebSeatServerConnectionCountCompletedEventHandler WebSeatServerConnectionCountCompleted;
        
        /// <remarks/>
        public event GetProductionsCompletedEventHandler GetProductionsCompleted;
        
        /// <remarks/>
        public event GetProductionCreditsCompletedEventHandler GetProductionCreditsCompleted;
        
        /// <remarks/>
        public event LoginExCompletedEventHandler LoginExCompleted;
        
        /// <remarks/>
        public event GetTicketHistoryCompletedEventHandler GetTicketHistoryCompleted;
        
        /// <remarks/>
        public event GetSubscriptionHistoryCompletedEventHandler GetSubscriptionHistoryCompleted;
        
        /// <remarks/>
        public event AddOrderCommentsEx2CompletedEventHandler AddOrderCommentsEx2Completed;
        
        /// <remarks/>
        public event GetPromoCodeExCompletedEventHandler GetPromoCodeExCompleted;
        
        /// <remarks/>
        public event GetProductionsExCompletedEventHandler GetProductionsExCompleted;
        
        /// <remarks/>
        public event GetAPIDiagnosticsCompletedEventHandler GetAPIDiagnosticsCompleted;
        
        /// <remarks/>
        public event ValidateTessituraUserCompletedEventHandler ValidateTessituraUserCompleted;
        
        /// <remarks/>
        public event CheckoutEx2CompletedEventHandler CheckoutEx2Completed;
        
        /// <remarks/>
        public event GetPerformanceDetailSYOSDataSetCompletedEventHandler GetPerformanceDetailSYOSDataSetCompleted;
        
        /// <remarks/>
        public event UpdatePhoneCompletedEventHandler UpdatePhoneCompleted;
        
        /// <remarks/>
        public event RemovePhoneCompletedEventHandler RemovePhoneCompleted;
        
        /// <remarks/>
        public event UpdateSpecialActivityCompletedEventHandler UpdateSpecialActivityCompleted;
        
        /// <remarks/>
        public event GetSpecialActivitiesCompletedEventHandler GetSpecialActivitiesCompleted;
        
        /// <remarks/>
        public event UpdateConstituencyCompletedEventHandler UpdateConstituencyCompleted;
        
        /// <remarks/>
        public event RemoveConstituencyCompletedEventHandler RemoveConstituencyCompleted;
        
        /// <remarks/>
        public event GetHoldCodesCompletedEventHandler GetHoldCodesCompleted;
        
        /// <remarks/>
        public event UpdateHoldCodeCompletedEventHandler UpdateHoldCodeCompleted;
        
        /// <remarks/>
        public event RemoveHoldCodeCompletedEventHandler RemoveHoldCodeCompleted;
        
        /// <remarks/>
        public event GetOrderConfirmationEmailCompletedEventHandler GetOrderConfirmationEmailCompleted;
        
        /// <remarks/>
        public event SendOrderConfirmationEmailCompletedEventHandler SendOrderConfirmationEmailCompleted;
        
        /// <remarks/>
        public event TestOrderConfirmationEmailCompletedEventHandler TestOrderConfirmationEmailCompleted;
        
        /// <remarks/>
        public event AlterTicketExpirationCompletedEventHandler AlterTicketExpirationCompleted;
        
        /// <remarks/>
        public event GetTicketExpirationCompletedEventHandler GetTicketExpirationCompleted;
        
        /// <remarks/>
        public event GetMaxTicketAmountCompletedEventHandler GetMaxTicketAmountCompleted;
        
        /// <remarks/>
        public event GetLocalDataExCompletedEventHandler GetLocalDataExCompleted;
        
        /// <remarks/>
        public event GetPerformancesEx2CompletedEventHandler GetPerformancesEx2Completed;
        
        /// <remarks/>
        public event GetProductionsEx2CompletedEventHandler GetProductionsEx2Completed;
        
        /// <remarks/>
        public event GetPackagesEx2CompletedEventHandler GetPackagesEx2Completed;
        
        /// <remarks/>
        public event ExecuteLocalProcedureCompletedEventHandler ExecuteLocalProcedureCompleted;
        
        /// <remarks/>
        public event SendCredentialsCompletedEventHandler SendCredentialsCompleted;
        
        /// <remarks/>
        public event LoginEx2CompletedEventHandler LoginEx2Completed;
        
        /// <remarks/>
        public event ChangeModeOfSaleExCompletedEventHandler ChangeModeOfSaleExCompleted;
        
        /// <remarks/>
        public event UpdateSourceCodeCompletedEventHandler UpdateSourceCodeCompleted;
        
        /// <remarks/>
        public event CreatePaymentPlanCompletedEventHandler CreatePaymentPlanCompleted;
        
        /// <remarks/>
        public event ValidateTessituraUserExCompletedEventHandler ValidateTessituraUserExCompleted;
        
        /// <remarks/>
        public event GetPermissionsCompletedEventHandler GetPermissionsCompleted;
        
        /// <remarks/>
        public event GetSeatSummaryCompletedEventHandler GetSeatSummaryCompleted;
        
        /// <remarks/>
        public event CheckoutEx3CompletedEventHandler CheckoutEx3Completed;
        
        /// <remarks/>
        public event GetPrintAtHomeSettingsCompletedEventHandler GetPrintAtHomeSettingsCompleted;
        
        /// <remarks/>
        public event GetConstituentInfoExCompletedEventHandler GetConstituentInfoExCompleted;
        
        /// <remarks/>
        public event GetPerformancesEx3CompletedEventHandler GetPerformancesEx3Completed;
        
        /// <remarks/>
        public event GetProductionsEx3CompletedEventHandler GetProductionsEx3Completed;
        
        /// <remarks/>
        public event GetPackagesEx3CompletedEventHandler GetPackagesEx3Completed;
        
        /// <remarks/>
        public event GetPerformanceDetailExCompletedEventHandler GetPerformanceDetailExCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailWithDiscountingExCompletedEventHandler GetPerformanceDetailWithDiscountingExCompleted;
        
        /// <remarks/>
        public event GetContactOptionsCompletedEventHandler GetContactOptionsCompleted;
        
        /// <remarks/>
        public event GetMailPurposesCompletedEventHandler GetMailPurposesCompleted;
        
        /// <remarks/>
        public event UpdateGiftAidDeclarationCompletedEventHandler UpdateGiftAidDeclarationCompleted;
        
        /// <remarks/>
        public event GetBillingSchedulesCompletedEventHandler GetBillingSchedulesCompleted;
        
        /// <remarks/>
        public event GetPackageDetailExCompletedEventHandler GetPackageDetailExCompleted;
        
        /// <remarks/>
        public event GetPackageDetailWithDiscountingExCompletedEventHandler GetPackageDetailWithDiscountingExCompleted;
        
        /// <remarks/>
        public event GetNFSPackageDetailExCompletedEventHandler GetNFSPackageDetailExCompleted;
        
        /// <remarks/>
        public event ClearCartCompletedEventHandler ClearCartCompleted;
        
        /// <remarks/>
        public event GetSubLineItemsCompletedEventHandler GetSubLineItemsCompleted;
        
        /// <remarks/>
        public event ApplyOnAccountCompletedEventHandler ApplyOnAccountCompleted;
        
        /// <remarks/>
        public event GetOnAccountInfoCompletedEventHandler GetOnAccountInfoCompleted;
        
        /// <remarks/>
        public event ApplyDiscountCompletedEventHandler ApplyDiscountCompleted;
        
        /// <remarks/>
        public event UpdateSubLineItemPriceCompletedEventHandler UpdateSubLineItemPriceCompleted;
        
        /// <remarks/>
        public event UpdateAddressExCompletedEventHandler UpdateAddressExCompleted;
        
        /// <remarks/>
        public event GetProductionDetailEx2CompletedEventHandler GetProductionDetailEx2Completed;
        
        /// <remarks/>
        public event GetDefaultsCompletedEventHandler GetDefaultsCompleted;
        
        /// <remarks/>
        public event RequestReprintCompletedEventHandler RequestReprintCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailWithDiscountingSYOSCompletedEventHandler GetPerformanceDetailWithDiscountingSYOSCompleted;
        
        /// <remarks/>
        public event GetSeatsCompletedEventHandler GetSeatsCompleted;
        
        /// <remarks/>
        public event RemovePackageItemCompletedEventHandler RemovePackageItemCompleted;
        
        /// <remarks/>
        public event GetPackageItemCompletedEventHandler GetPackageItemCompleted;
        
        /// <remarks/>
        public event AddOrderCommentsCompletedEventHandler AddOrderCommentsCompleted;
        
        /// <remarks/>
        public event RemoveOrderCommentsCompletedEventHandler RemoveOrderCommentsCompleted;
        
        /// <remarks/>
        public event CheckoutExCompletedEventHandler CheckoutExCompleted;
        
        /// <remarks/>
        public event GetModeOfSaleRulesCompletedEventHandler GetModeOfSaleRulesCompleted;
        
        /// <remarks/>
        public event PurchaseGiftCertificateCompletedEventHandler PurchaseGiftCertificateCompleted;
        
        /// <remarks/>
        public event ApplyGiftCertificateCompletedEventHandler ApplyGiftCertificateCompleted;
        
        /// <remarks/>
        public event RemoveGiftCertificateCompletedEventHandler RemoveGiftCertificateCompleted;
        
        /// <remarks/>
        public event AddPaymentPlanInstallmentCompletedEventHandler AddPaymentPlanInstallmentCompleted;
        
        /// <remarks/>
        public event RemovePaymentPlanCompletedEventHandler RemovePaymentPlanCompleted;
        
        /// <remarks/>
        public event FinalizePaymentPlanCompletedEventHandler FinalizePaymentPlanCompleted;
        
        /// <remarks/>
        public event ValidatePaymentPlanCompletedEventHandler ValidatePaymentPlanCompleted;
        
        /// <remarks/>
        public event GetConstituentInfoCompletedEventHandler GetConstituentInfoCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailWithDiscountingCompletedEventHandler GetPerformanceDetailWithDiscountingCompleted;
        
        /// <remarks/>
        public event GetPackageDetailWithDiscountingCompletedEventHandler GetPackageDetailWithDiscountingCompleted;
        
        /// <remarks/>
        public event UpdateAccountInfoExCompletedEventHandler UpdateAccountInfoExCompleted;
        
        /// <remarks/>
        public event WebSeatServerListeningCompletedEventHandler WebSeatServerListeningCompleted;
        
        /// <remarks/>
        public event AddPackageItemSeatedCompletedEventHandler AddPackageItemSeatedCompleted;
        
        /// <remarks/>
        public event ReserveTicketsSpecifiedSeatsCompletedEventHandler ReserveTicketsSpecifiedSeatsCompleted;
        
        /// <remarks/>
        public event ForgotLoginCompletedEventHandler ForgotLoginCompleted;
        
        /// <remarks/>
        public event UpdatePriceTypeCompletedEventHandler UpdatePriceTypeCompleted;
        
        /// <remarks/>
        public event ValidateCustomOfferCompletedEventHandler ValidateCustomOfferCompleted;
        
        /// <remarks/>
        public event GetKeywordsExCompletedEventHandler GetKeywordsExCompleted;
        
        /// <remarks/>
        public event GetSeatsByScreenCompletedEventHandler GetSeatsByScreenCompleted;
        
        /// <remarks/>
        public event GetSeatsByScreenBriefCompletedEventHandler GetSeatsByScreenBriefCompleted;
        
        /// <remarks/>
        public event GetSeatStatusCompletedEventHandler GetSeatStatusCompleted;
        
        /// <remarks/>
        public event GetPerformancesExCompletedEventHandler GetPerformancesExCompleted;
        
        /// <remarks/>
        public event GetPackagesExCompletedEventHandler GetPackagesExCompleted;
        
        /// <remarks/>
        public event GetConstituentsCompletedEventHandler GetConstituentsCompleted;
        
        /// <remarks/>
        public event GetOrdersExCompletedEventHandler GetOrdersExCompleted;
        
        /// <remarks/>
        public event GetTicketPrintInformationCompletedEventHandler GetTicketPrintInformationCompleted;
        
        /// <remarks/>
        public event UpdateConstituentAttributesCompletedEventHandler UpdateConstituentAttributesCompleted;
        
        /// <remarks/>
        public event UpdateConstituentInterestsCompletedEventHandler UpdateConstituentInterestsCompleted;
        
        /// <remarks/>
        public event GetOrdersForDeliveryCompletedEventHandler GetOrdersForDeliveryCompleted;
        
        /// <remarks/>
        public event UpdateEmailStatusCompletedEventHandler UpdateEmailStatusCompleted;
        
        /// <remarks/>
        public event GetNewSessionKeyExCompletedEventHandler GetNewSessionKeyExCompleted;
        
        /// <remarks/>
        public event GetCartBriefCompletedEventHandler GetCartBriefCompleted;
        
        /// <remarks/>
        public event UpdateGiftAidInfoCompletedEventHandler UpdateGiftAidInfoCompleted;
        
        /// <remarks/>
        public event TransferCartCompletedEventHandler TransferCartCompleted;
        
        /// <remarks/>
        public event AddSubPackageItemCompletedEventHandler AddSubPackageItemCompleted;
        
        /// <remarks/>
        public event AddSubPackageItemSeatedCompletedEventHandler AddSubPackageItemSeatedCompleted;
        
        /// <remarks/>
        public event UpdateCustomOrderDataCompletedEventHandler UpdateCustomOrderDataCompleted;
        
        /// <remarks/>
        public event AddOrderCommentsExCompletedEventHandler AddOrderCommentsExCompleted;
        
        /// <remarks/>
        public event RemoveOrderCommentsExCompletedEventHandler RemoveOrderCommentsExCompleted;
        
        /// <remarks/>
        public event GetProductionDetailExCompletedEventHandler GetProductionDetailExCompleted;
        
        /// <remarks/>
        public event GetLocalDataCompletedEventHandler GetLocalDataCompleted;
        
        /// <remarks/>
        public event UpdateLocalDataCompletedEventHandler UpdateLocalDataCompleted;
        
        /// <remarks/>
        public event GetPromoCodeCompletedEventHandler GetPromoCodeCompleted;
        
        /// <remarks/>
        public event GetStateProvinceExCompletedEventHandler GetStateProvinceExCompleted;
        
        /// <remarks/>
        public event ValidateSuperPackagesCompletedEventHandler ValidateSuperPackagesCompleted;
        
        /// <remarks/>
        public event TessituraSeatServerListeningViaWebSeatServerCompletedEventHandler TessituraSeatServerListeningViaWebSeatServerCompleted;
        
        /// <remarks/>
        public event TessituraCreditCardServerListeningCompletedEventHandler TessituraCreditCardServerListeningCompleted;
        
        /// <remarks/>
        public event GetOrderDetailsCompletedEventHandler GetOrderDetailsCompleted;
        
        /// <remarks/>
        public event LoginConstituentCompletedEventHandler LoginConstituentCompleted;
        
        /// <remarks/>
        public event RemoveSuperPackageItemCompletedEventHandler RemoveSuperPackageItemCompleted;
        
        /// <remarks/>
        public event GetSeatsByZoneCompletedEventHandler GetSeatsByZoneCompleted;
        
        /// <remarks/>
        public event GetSeatsByZoneBriefCompletedEventHandler GetSeatsByZoneBriefCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailSYOSCompletedEventHandler GetPerformanceDetailSYOSCompleted;
        
        /// <remarks/>
        public event AddNFSPackagePerformanceItemCompletedEventHandler AddNFSPackagePerformanceItemCompleted;
        
        /// <remarks/>
        public event GetNFSPackageDetailCompletedEventHandler GetNFSPackageDetailCompleted;
        
        /// <remarks/>
        public event ValidateNFSPackagesCompletedEventHandler ValidateNFSPackagesCompleted;
        
        /// <remarks/>
        public event RemoveNFSPackageCompletedEventHandler RemoveNFSPackageCompleted;
        
        /// <remarks/>
        public event GetSeatsBySectionCompletedEventHandler GetSeatsBySectionCompleted;
        
        /// <remarks/>
        public event GetSeatsBySectionBriefCompletedEventHandler GetSeatsBySectionBriefCompleted;
        
        /// <remarks/>
        public event GetGiftCertificateInfoCompletedEventHandler GetGiftCertificateInfoCompleted;
        
        /// <remarks/>
        public event GetCityStateProvinceByPostalCodeCompletedEventHandler GetCityStateProvinceByPostalCodeCompleted;
        
        /// <remarks/>
        public event UpdateAddressCompletedEventHandler UpdateAddressCompleted;
        
        /// <remarks/>
        public event UpdateAccountInfoEx2CompletedEventHandler UpdateAccountInfoEx2Completed;
        
        /// <remarks/>
        public event UpdateOrderDetailsCompletedEventHandler UpdateOrderDetailsCompleted;
        
        /// <remarks/>
        public event GetWebContentCompletedEventHandler GetWebContentCompleted;
        
        /// <remarks/>
        public event GetFeesCompletedEventHandler GetFeesCompleted;
        
        /// <remarks/>
        public event UpdateFeeCompletedEventHandler UpdateFeeCompleted;
        
        /// <remarks/>
        public event RemoveFeeCompletedEventHandler RemoveFeeCompleted;
        
        /// <remarks/>
        public event GetReturnTicketsCompletedEventHandler GetReturnTicketsCompleted;
        
        /// <remarks/>
        public event ReturnTicketCompletedEventHandler ReturnTicketCompleted;
        
        /// <remarks/>
        public event GetAttributesCompletedEventHandler GetAttributesCompleted;
        
        /// <remarks/>
        public event GetProductionDetailCompletedEventHandler GetProductionDetailCompleted;
        
        /// <remarks/>
        public event GetPerformancesCompletedEventHandler GetPerformancesCompleted;
        
        /// <remarks/>
        public event GetPerformanceDetailCompletedEventHandler GetPerformanceDetailCompleted;
        
        /// <remarks/>
        public event GetKeywordsCompletedEventHandler GetKeywordsCompleted;
        
        /// <remarks/>
        public event GetVenueCompletedEventHandler GetVenueCompleted;
        
        /// <remarks/>
        public event GetPerformanceAvailabilityCompletedEventHandler GetPerformanceAvailabilityCompleted;
        
        /// <remarks/>
        public event ReserveTicketsCompletedEventHandler ReserveTicketsCompleted;
        
        /// <remarks/>
        public event ReserveTickets1CompletedEventHandler ReserveTickets1Completed;
        
        /// <remarks/>
        public event ReserveTicketsUnseatedCompletedEventHandler ReserveTicketsUnseatedCompleted;
        
        /// <remarks/>
        public event ReleaseTicketsCompletedEventHandler ReleaseTicketsCompleted;
        
        /// <remarks/>
        public event AddContributionCompletedEventHandler AddContributionCompleted;
        
        /// <remarks/>
        public event RemoveContribuionCompletedEventHandler RemoveContribuionCompleted;
        
        /// <remarks/>
        public event GetCartCompletedEventHandler GetCartCompleted;
        
        /// <remarks/>
        public event GetAddressAndShippingMethodCompletedEventHandler GetAddressAndShippingMethodCompleted;
        
        /// <remarks/>
        public event GetShippingMethodsCompletedEventHandler GetShippingMethodsCompleted;
        
        /// <remarks/>
        public event SetShippingInformationCompletedEventHandler SetShippingInformationCompleted;
        
        /// <remarks/>
        public event CheckoutCompletedEventHandler CheckoutCompleted;
        
        /// <remarks/>
        public event GetPaymentMethodCompletedEventHandler GetPaymentMethodCompleted;
        
        /// <remarks/>
        public event GetOrderCompletedEventHandler GetOrderCompleted;
        
        /// <remarks/>
        public event OrderExistsCompletedEventHandler OrderExistsCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event RegisterWithPromoCodeCompletedEventHandler RegisterWithPromoCodeCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginWithPromoCodeCompletedEventHandler LoginWithPromoCodeCompleted;
        
        /// <remarks/>
        public event UpdateLoginCompletedEventHandler UpdateLoginCompleted;
        
        /// <remarks/>
        public event UpdateLoginWithPromoCodeCompletedEventHandler UpdateLoginWithPromoCodeCompleted;
        
        /// <remarks/>
        public event LoginInfoCompletedEventHandler LoginInfoCompleted;
        
        /// <remarks/>
        public event GetAccountInfoCompletedEventHandler GetAccountInfoCompleted;
        
        /// <remarks/>
        public event UpdateAccountInfoCompletedEventHandler UpdateAccountInfoCompleted;
        
        /// <remarks/>
        public event InsertNewShippingAddressCompletedEventHandler InsertNewShippingAddressCompleted;
        
        /// <remarks/>
        public event LoggedInCompletedEventHandler LoggedInCompleted;
        
        /// <remarks/>
        public event GetNewSessionKeyCompletedEventHandler GetNewSessionKeyCompleted;
        
        /// <remarks/>
        public event UpdateLastAccessTimeCompletedEventHandler UpdateLastAccessTimeCompleted;
        
        /// <remarks/>
        public event GetVariablesCompletedEventHandler GetVariablesCompleted;
        
        /// <remarks/>
        public event SetVariableCompletedEventHandler SetVariableCompleted;
        
        /// <remarks/>
        public event DeleteVariableCompletedEventHandler DeleteVariableCompleted;
        
        /// <remarks/>
        public event TransferSessionCompletedEventHandler TransferSessionCompleted;
        
        /// <remarks/>
        public event AddCustomerServiceIssueCompletedEventHandler AddCustomerServiceIssueCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetStateProvinceCompletedEventHandler GetStateProvinceCompleted;
        
        /// <remarks/>
        public event ChangeModeOfSaleCompletedEventHandler ChangeModeOfSaleCompleted;
        
        /// <remarks/>
        public event GetPackagesCompletedEventHandler GetPackagesCompleted;
        
        /// <remarks/>
        public event GetPackageDetailCompletedEventHandler GetPackageDetailCompleted;
        
        /// <remarks/>
        public event GetExistingOrdersInfoCompletedEventHandler GetExistingOrdersInfoCompleted;
        
        /// <remarks/>
        public event LoadExistingOrderCompletedEventHandler LoadExistingOrderCompleted;
        
        /// <remarks/>
        public event AddPackageItemCompletedEventHandler AddPackageItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsBrief(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            object[] results = this.Invoke("GetSeatsBrief", new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsBriefAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            this.GetSeatsBriefAsync(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, null);
        }
        
        /// <remarks/>
        public void GetSeatsBriefAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, object userState) {
            if ((this.GetSeatsBriefOperationCompleted == null)) {
                this.GetSeatsBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsBrief", new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats}, this.GetSeatsBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsBriefOperationCompleted(object arg) {
            if ((this.GetSeatsBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsBriefCompleted(this, new GetSeatsBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReserveTicketsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveTicketsEx(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            object[] results = this.Invoke("ReserveTicketsEx", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveTicketsExAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTicketsExAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        /// <remarks/>
        public void ReserveTicketsExAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.ReserveTicketsExOperationCompleted == null)) {
                this.ReserveTicketsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveTicketsExOperationCompleted);
            }
            this.InvokeAsync("ReserveTicketsEx", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.ReserveTicketsExOperationCompleted, userState);
        }
        
        private void OnReserveTicketsExOperationCompleted(object arg) {
            if ((this.ReserveTicketsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveTicketsExCompleted(this, new ReserveTicketsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/SMTPListening", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SMTPListening(string sOrganizationName) {
            object[] results = this.Invoke("SMTPListening", new object[] {
                        sOrganizationName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SMTPListeningAsync(string sOrganizationName) {
            this.SMTPListeningAsync(sOrganizationName, null);
        }
        
        /// <remarks/>
        public void SMTPListeningAsync(string sOrganizationName, object userState) {
            if ((this.SMTPListeningOperationCompleted == null)) {
                this.SMTPListeningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMTPListeningOperationCompleted);
            }
            this.InvokeAsync("SMTPListening", new object[] {
                        sOrganizationName}, this.SMTPListeningOperationCompleted, userState);
        }
        
        private void OnSMTPListeningOperationCompleted(object arg) {
            if ((this.SMTPListeningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMTPListeningCompleted(this, new SMTPListeningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/CalculateFees", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CalculateFees(string sSessionKey, int iOrderNo) {
            this.Invoke("CalculateFees", new object[] {
                        sSessionKey,
                        iOrderNo});
        }
        
        /// <remarks/>
        public void CalculateFeesAsync(string sSessionKey, int iOrderNo) {
            this.CalculateFeesAsync(sSessionKey, iOrderNo, null);
        }
        
        /// <remarks/>
        public void CalculateFeesAsync(string sSessionKey, int iOrderNo, object userState) {
            if ((this.CalculateFeesOperationCompleted == null)) {
                this.CalculateFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateFeesOperationCompleted);
            }
            this.InvokeAsync("CalculateFees", new object[] {
                        sSessionKey,
                        iOrderNo}, this.CalculateFeesOperationCompleted, userState);
        }
        
        private void OnCalculateFeesOperationCompleted(object arg) {
            if ((this.CalculateFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateFeesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSDataSet", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetailWithDiscountingSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            object[] results = this.Invoke("GetPerformanceDetailWithDiscountingSYOSDataSet", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSDataSetAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted == null)) {
                this.GetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailWithDiscountingSYOSDataSet", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.GetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSDataSetOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailWithDiscountingSYOSDataSetCompleted(this, new GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetGiftAidInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiftAidInfo(string SessionKey, int iGiftaid_type, char cActive_only) {
            object[] results = this.Invoke("GetGiftAidInfo", new object[] {
                        SessionKey,
                        iGiftaid_type,
                        cActive_only});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiftAidInfoAsync(string SessionKey, int iGiftaid_type, char cActive_only) {
            this.GetGiftAidInfoAsync(SessionKey, iGiftaid_type, cActive_only, null);
        }
        
        /// <remarks/>
        public void GetGiftAidInfoAsync(string SessionKey, int iGiftaid_type, char cActive_only, object userState) {
            if ((this.GetGiftAidInfoOperationCompleted == null)) {
                this.GetGiftAidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiftAidInfoOperationCompleted);
            }
            this.InvokeAsync("GetGiftAidInfo", new object[] {
                        SessionKey,
                        iGiftaid_type,
                        cActive_only}, this.GetGiftAidInfoOperationCompleted, userState);
        }
        
        private void OnGetGiftAidInfoOperationCompleted(object arg) {
            if ((this.GetGiftAidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiftAidInfoCompleted(this, new GetGiftAidInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateLimits", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateLimits(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req) {
            this.Invoke("ValidateLimits", new object[] {
                        SessionKey,
                        iPerf_no,
                        iPkg_no,
                        iPrice_type,
                        iNo_seats_req});
        }
        
        /// <remarks/>
        public void ValidateLimitsAsync(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req) {
            this.ValidateLimitsAsync(SessionKey, iPerf_no, iPkg_no, iPrice_type, iNo_seats_req, null);
        }
        
        /// <remarks/>
        public void ValidateLimitsAsync(string SessionKey, int iPerf_no, int iPkg_no, int iPrice_type, int iNo_seats_req, object userState) {
            if ((this.ValidateLimitsOperationCompleted == null)) {
                this.ValidateLimitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLimitsOperationCompleted);
            }
            this.InvokeAsync("ValidateLimits", new object[] {
                        SessionKey,
                        iPerf_no,
                        iPkg_no,
                        iPrice_type,
                        iNo_seats_req}, this.ValidateLimitsOperationCompleted, userState);
        }
        
        private void OnValidateLimitsOperationCompleted(object arg) {
            if ((this.ValidateLimitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLimitsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOSEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PerformanceEx2 GetPerformanceDetailWithDiscountingSYOSEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            object[] results = this.Invoke("GetPerformanceDetailWithDiscountingSYOSEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType});
            return ((PerformanceEx2)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSExAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSExOperationCompleted == null)) {
                this.GetPerformanceDetailWithDiscountingSYOSExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSExOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailWithDiscountingSYOSEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.GetPerformanceDetailWithDiscountingSYOSExOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSExOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailWithDiscountingSYOSExCompleted(this, new GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformancesEx4", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformancesEx4(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts) {
            object[] results = this.Invoke("GetPerformancesEx4", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds,
                        bIncludeSeatCounts});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesEx4Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts) {
            this.GetPerformancesEx4Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, bIncludeSeatCounts, null);
        }
        
        /// <remarks/>
        public void GetPerformancesEx4Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    bool bIncludeSeatCounts, 
                    object userState) {
            if ((this.GetPerformancesEx4OperationCompleted == null)) {
                this.GetPerformancesEx4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx4OperationCompleted);
            }
            this.InvokeAsync("GetPerformancesEx4", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds,
                        bIncludeSeatCounts}, this.GetPerformancesEx4OperationCompleted, userState);
        }
        
        private void OnGetPerformancesEx4OperationCompleted(object arg) {
            if ((this.GetPerformancesEx4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesEx4Completed(this, new GetPerformancesEx4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionDetailEx3", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionDetailEx3(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts) {
            object[] results = this.Invoke("GetProductionDetailEx3", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes,
                        bIncludeSeatCounts});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionDetailEx3Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts) {
            this.GetProductionDetailEx3Async(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, bIncludeSeatCounts, null);
        }
        
        /// <remarks/>
        public void GetProductionDetailEx3Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, bool bIncludeSeatCounts, object userState) {
            if ((this.GetProductionDetailEx3OperationCompleted == null)) {
                this.GetProductionDetailEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailEx3OperationCompleted);
            }
            this.InvokeAsync("GetProductionDetailEx3", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes,
                        bIncludeSeatCounts}, this.GetProductionDetailEx3OperationCompleted, userState);
        }
        
        private void OnGetProductionDetailEx3OperationCompleted(object arg) {
            if ((this.GetProductionDetailEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionDetailEx3Completed(this, new GetProductionDetailEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetConstituentsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConstituentsEx(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName) {
            object[] results = this.Invoke("GetConstituentsEx", new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress,
                        sLastName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstituentsExAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName) {
            this.GetConstituentsExAsync(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, sLastName, null);
        }
        
        /// <remarks/>
        public void GetConstituentsExAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, string sLastName, object userState) {
            if ((this.GetConstituentsExOperationCompleted == null)) {
                this.GetConstituentsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstituentsExOperationCompleted);
            }
            this.InvokeAsync("GetConstituentsEx", new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress,
                        sLastName}, this.GetConstituentsExOperationCompleted, userState);
        }
        
        private void OnGetConstituentsExOperationCompleted(object arg) {
            if ((this.GetConstituentsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstituentsExCompleted(this, new GetConstituentsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/PrintTickets", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrintTickets(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader) {
            object[] results = this.Invoke("PrintTickets", new object[] {
                        sSessionKey,
                        sOrderId,
                        sLineItems,
                        sSubLineItems,
                        sTicketDesignNo,
                        iBarWidth,
                        iBarHeight,
                        bNewTicketNumberForReprints,
                        bIncludeHeader});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrintTicketsAsync(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader) {
            this.PrintTicketsAsync(sSessionKey, sOrderId, sLineItems, sSubLineItems, sTicketDesignNo, iBarWidth, iBarHeight, bNewTicketNumberForReprints, bIncludeHeader, null);
        }
        
        /// <remarks/>
        public void PrintTicketsAsync(string sSessionKey, string sOrderId, string sLineItems, string sSubLineItems, string sTicketDesignNo, int iBarWidth, int iBarHeight, bool bNewTicketNumberForReprints, bool bIncludeHeader, object userState) {
            if ((this.PrintTicketsOperationCompleted == null)) {
                this.PrintTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintTicketsOperationCompleted);
            }
            this.InvokeAsync("PrintTickets", new object[] {
                        sSessionKey,
                        sOrderId,
                        sLineItems,
                        sSubLineItems,
                        sTicketDesignNo,
                        iBarWidth,
                        iBarHeight,
                        bNewTicketNumberForReprints,
                        bIncludeHeader}, this.PrintTicketsOperationCompleted, userState);
        }
        
        private void OnPrintTicketsOperationCompleted(object arg) {
            if ((this.PrintTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintTicketsCompleted(this, new PrintTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/DestroyCache", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DestroyCache() {
            this.Invoke("DestroyCache", new object[0]);
        }
        
        /// <remarks/>
        public void DestroyCacheAsync() {
            this.DestroyCacheAsync(null);
        }
        
        /// <remarks/>
        public void DestroyCacheAsync(object userState) {
            if ((this.DestroyCacheOperationCompleted == null)) {
                this.DestroyCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDestroyCacheOperationCompleted);
            }
            this.InvokeAsync("DestroyCache", new object[0], this.DestroyCacheOperationCompleted, userState);
        }
        
        private void OnDestroyCacheOperationCompleted(object arg) {
            if ((this.DestroyCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DestroyCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAssociation", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAssociation(string sSessionKey, int iConstN1N2, int iAssociationID, int iCustomerNo, string sName, int iAssocN1N2, int iTypeID, string sStartDate, string sEndDate, string sNotes, string sTitle, decimal dSalary, string sGender, string sBirthDate, string sInactive) {
            this.Invoke("UpdateAssociation", new object[] {
                        sSessionKey,
                        iConstN1N2,
                        iAssociationID,
                        iCustomerNo,
                        sName,
                        iAssocN1N2,
                        iTypeID,
                        sStartDate,
                        sEndDate,
                        sNotes,
                        sTitle,
                        dSalary,
                        sGender,
                        sBirthDate,
                        sInactive});
        }
        
        /// <remarks/>
        public void UpdateAssociationAsync(string sSessionKey, int iConstN1N2, int iAssociationID, int iCustomerNo, string sName, int iAssocN1N2, int iTypeID, string sStartDate, string sEndDate, string sNotes, string sTitle, decimal dSalary, string sGender, string sBirthDate, string sInactive) {
            this.UpdateAssociationAsync(sSessionKey, iConstN1N2, iAssociationID, iCustomerNo, sName, iAssocN1N2, iTypeID, sStartDate, sEndDate, sNotes, sTitle, dSalary, sGender, sBirthDate, sInactive, null);
        }
        
        /// <remarks/>
        public void UpdateAssociationAsync(
                    string sSessionKey, 
                    int iConstN1N2, 
                    int iAssociationID, 
                    int iCustomerNo, 
                    string sName, 
                    int iAssocN1N2, 
                    int iTypeID, 
                    string sStartDate, 
                    string sEndDate, 
                    string sNotes, 
                    string sTitle, 
                    decimal dSalary, 
                    string sGender, 
                    string sBirthDate, 
                    string sInactive, 
                    object userState) {
            if ((this.UpdateAssociationOperationCompleted == null)) {
                this.UpdateAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAssociationOperationCompleted);
            }
            this.InvokeAsync("UpdateAssociation", new object[] {
                        sSessionKey,
                        iConstN1N2,
                        iAssociationID,
                        iCustomerNo,
                        sName,
                        iAssocN1N2,
                        iTypeID,
                        sStartDate,
                        sEndDate,
                        sNotes,
                        sTitle,
                        dSalary,
                        sGender,
                        sBirthDate,
                        sInactive}, this.UpdateAssociationOperationCompleted, userState);
        }
        
        private void OnUpdateAssociationOperationCompleted(object arg) {
            if ((this.UpdateAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveAssociation", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAssociation(string sSessionKey, int iAssociationID) {
            this.Invoke("RemoveAssociation", new object[] {
                        sSessionKey,
                        iAssociationID});
        }
        
        /// <remarks/>
        public void RemoveAssociationAsync(string sSessionKey, int iAssociationID) {
            this.RemoveAssociationAsync(sSessionKey, iAssociationID, null);
        }
        
        /// <remarks/>
        public void RemoveAssociationAsync(string sSessionKey, int iAssociationID, object userState) {
            if ((this.RemoveAssociationOperationCompleted == null)) {
                this.RemoveAssociationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAssociationOperationCompleted);
            }
            this.InvokeAsync("RemoveAssociation", new object[] {
                        sSessionKey,
                        iAssociationID}, this.RemoveAssociationOperationCompleted, userState);
        }
        
        private void OnRemoveAssociationOperationCompleted(object arg) {
            if ((this.RemoveAssociationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAssociationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddConstituent", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddConstituent(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            object[] results = this.Invoke("AddConstituent", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sLastName2,
                        sMiddleName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddConstituentAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            this.AddConstituentAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sLastName2, sMiddleName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, null);
        }
        
        /// <remarks/>
        public void AddConstituentAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sLastName2, 
                    string sMiddleName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    object userState) {
            if ((this.AddConstituentOperationCompleted == null)) {
                this.AddConstituentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConstituentOperationCompleted);
            }
            this.InvokeAsync("AddConstituent", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sLastName2,
                        sMiddleName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status}, this.AddConstituentOperationCompleted, userState);
        }
        
        private void OnAddConstituentOperationCompleted(object arg) {
            if ((this.AddConstituentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConstituentCompleted(this, new AddConstituentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateRanking", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateRanking(string sSessionKey, int iRankingTypeID, int iRank) {
            object[] results = this.Invoke("UpdateRanking", new object[] {
                        sSessionKey,
                        iRankingTypeID,
                        iRank});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRankingAsync(string sSessionKey, int iRankingTypeID, int iRank) {
            this.UpdateRankingAsync(sSessionKey, iRankingTypeID, iRank, null);
        }
        
        /// <remarks/>
        public void UpdateRankingAsync(string sSessionKey, int iRankingTypeID, int iRank, object userState) {
            if ((this.UpdateRankingOperationCompleted == null)) {
                this.UpdateRankingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRankingOperationCompleted);
            }
            this.InvokeAsync("UpdateRanking", new object[] {
                        sSessionKey,
                        iRankingTypeID,
                        iRank}, this.UpdateRankingOperationCompleted, userState);
        }
        
        private void OnUpdateRankingOperationCompleted(object arg) {
            if ((this.UpdateRankingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRankingCompleted(this, new UpdateRankingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateConstituentInterestsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateConstituentInterestsEx(string sSessionKey, string sPreferences, int iN1N2) {
            object[] results = this.Invoke("UpdateConstituentInterestsEx", new object[] {
                        sSessionKey,
                        sPreferences,
                        iN1N2});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConstituentInterestsExAsync(string sSessionKey, string sPreferences, int iN1N2) {
            this.UpdateConstituentInterestsExAsync(sSessionKey, sPreferences, iN1N2, null);
        }
        
        /// <remarks/>
        public void UpdateConstituentInterestsExAsync(string sSessionKey, string sPreferences, int iN1N2, object userState) {
            if ((this.UpdateConstituentInterestsExOperationCompleted == null)) {
                this.UpdateConstituentInterestsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentInterestsExOperationCompleted);
            }
            this.InvokeAsync("UpdateConstituentInterestsEx", new object[] {
                        sSessionKey,
                        sPreferences,
                        iN1N2}, this.UpdateConstituentInterestsExOperationCompleted, userState);
        }
        
        private void OnUpdateConstituentInterestsExOperationCompleted(object arg) {
            if ((this.UpdateConstituentInterestsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConstituentInterestsExCompleted(this, new UpdateConstituentInterestsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateEAddress", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateEAddress(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2) {
            object[] results = this.Invoke("UpdateEAddress", new object[] {
                        sSessionKey,
                        iAddressNumber,
                        sEmail,
                        sPurposes,
                        iAddressType,
                        bInActive,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sPrimaryInd,
                        sMarketInd,
                        iDefaultSal,
                        sHtmlInd,
                        iN1N2});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEAddressAsync(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2) {
            this.UpdateEAddressAsync(sSessionKey, iAddressNumber, sEmail, sPurposes, iAddressType, bInActive, sStartDate, sEndDate, sMonths, sPrimaryInd, sMarketInd, iDefaultSal, sHtmlInd, iN1N2, null);
        }
        
        /// <remarks/>
        public void UpdateEAddressAsync(string sSessionKey, int iAddressNumber, string sEmail, string sPurposes, int iAddressType, bool bInActive, string sStartDate, string sEndDate, string sMonths, string sPrimaryInd, string sMarketInd, int iDefaultSal, string sHtmlInd, int iN1N2, object userState) {
            if ((this.UpdateEAddressOperationCompleted == null)) {
                this.UpdateEAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEAddressOperationCompleted);
            }
            this.InvokeAsync("UpdateEAddress", new object[] {
                        sSessionKey,
                        iAddressNumber,
                        sEmail,
                        sPurposes,
                        iAddressType,
                        bInActive,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sPrimaryInd,
                        sMarketInd,
                        iDefaultSal,
                        sHtmlInd,
                        iN1N2}, this.UpdateEAddressOperationCompleted, userState);
        }
        
        private void OnUpdateEAddressOperationCompleted(object arg) {
            if ((this.UpdateEAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEAddressCompleted(this, new UpdateEAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByZones", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByZones(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            object[] results = this.Invoke("GetSeatsByZones", new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByZonesAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsByZonesAsync(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsByZonesAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.GetSeatsByZonesOperationCompleted == null)) {
                this.GetSeatsByZonesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZonesOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByZones", new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber}, this.GetSeatsByZonesOperationCompleted, userState);
        }
        
        private void OnGetSeatsByZonesOperationCompleted(object arg) {
            if ((this.GetSeatsByZonesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByZonesCompleted(this, new GetSeatsByZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByZonesBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByZonesBrief(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            object[] results = this.Invoke("GetSeatsByZonesBrief", new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByZonesBriefAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsByZonesBriefAsync(sSessionKey, sZones, iPerformanceNumber, iPackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsByZonesBriefAsync(string sSessionKey, string sZones, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.GetSeatsByZonesBriefOperationCompleted == null)) {
                this.GetSeatsByZonesBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZonesBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByZonesBrief", new object[] {
                        sSessionKey,
                        sZones,
                        iPerformanceNumber,
                        iPackageNumber}, this.GetSeatsByZonesBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsByZonesBriefOperationCompleted(object arg) {
            if ((this.GetSeatsByZonesBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByZonesBriefCompleted(this, new GetSeatsByZonesBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsBySections", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsBySections(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            object[] results = this.Invoke("GetSeatsBySections", new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsBySectionsAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsBySectionsAsync(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsBySectionsAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.GetSeatsBySectionsOperationCompleted == null)) {
                this.GetSeatsBySectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionsOperationCompleted);
            }
            this.InvokeAsync("GetSeatsBySections", new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber}, this.GetSeatsBySectionsOperationCompleted, userState);
        }
        
        private void OnGetSeatsBySectionsOperationCompleted(object arg) {
            if ((this.GetSeatsBySectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsBySectionsCompleted(this, new GetSeatsBySectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsBySectionsBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsBySectionsBrief(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            object[] results = this.Invoke("GetSeatsBySectionsBrief", new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsBySectionsBriefAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber) {
            this.GetSeatsBySectionsBriefAsync(sSessionKey, sSections, iPerformanceNumber, iPackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsBySectionsBriefAsync(string sSessionKey, string sSections, int iPerformanceNumber, int iPackageNumber, object userState) {
            if ((this.GetSeatsBySectionsBriefOperationCompleted == null)) {
                this.GetSeatsBySectionsBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionsBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsBySectionsBrief", new object[] {
                        sSessionKey,
                        sSections,
                        iPerformanceNumber,
                        iPackageNumber}, this.GetSeatsBySectionsBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsBySectionsBriefOperationCompleted(object arg) {
            if ((this.GetSeatsBySectionsBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsBySectionsBriefCompleted(this, new GetSeatsBySectionsBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetZonesPerSection", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetZonesPerSection(string sSessionKey, int iPerformanceNumber, string sSections) {
            object[] results = this.Invoke("GetZonesPerSection", new object[] {
                        sSessionKey,
                        iPerformanceNumber,
                        sSections});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetZonesPerSectionAsync(string sSessionKey, int iPerformanceNumber, string sSections) {
            this.GetZonesPerSectionAsync(sSessionKey, iPerformanceNumber, sSections, null);
        }
        
        /// <remarks/>
        public void GetZonesPerSectionAsync(string sSessionKey, int iPerformanceNumber, string sSections, object userState) {
            if ((this.GetZonesPerSectionOperationCompleted == null)) {
                this.GetZonesPerSectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZonesPerSectionOperationCompleted);
            }
            this.InvokeAsync("GetZonesPerSection", new object[] {
                        sSessionKey,
                        iPerformanceNumber,
                        sSections}, this.GetZonesPerSectionOperationCompleted, userState);
        }
        
        private void OnGetZonesPerSectionOperationCompleted(object arg) {
            if ((this.GetZonesPerSectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZonesPerSectionCompleted(this, new GetZonesPerSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetScreens", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScreens(string sSessionKey, int iPerformanceNumber) {
            object[] results = this.Invoke("GetScreens", new object[] {
                        sSessionKey,
                        iPerformanceNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScreensAsync(string sSessionKey, int iPerformanceNumber) {
            this.GetScreensAsync(sSessionKey, iPerformanceNumber, null);
        }
        
        /// <remarks/>
        public void GetScreensAsync(string sSessionKey, int iPerformanceNumber, object userState) {
            if ((this.GetScreensOperationCompleted == null)) {
                this.GetScreensOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScreensOperationCompleted);
            }
            this.InvokeAsync("GetScreens", new object[] {
                        sSessionKey,
                        iPerformanceNumber}, this.GetScreensOperationCompleted, userState);
        }
        
        private void OnGetScreensOperationCompleted(object arg) {
            if ((this.GetScreensCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScreensCompleted(this, new GetScreensCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/DisconnectSessionSeatServer", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisconnectSessionSeatServer(string sSessionKey) {
            this.Invoke("DisconnectSessionSeatServer", new object[] {
                        sSessionKey});
        }
        
        /// <remarks/>
        public void DisconnectSessionSeatServerAsync(string sSessionKey) {
            this.DisconnectSessionSeatServerAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void DisconnectSessionSeatServerAsync(string sSessionKey, object userState) {
            if ((this.DisconnectSessionSeatServerOperationCompleted == null)) {
                this.DisconnectSessionSeatServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectSessionSeatServerOperationCompleted);
            }
            this.InvokeAsync("DisconnectSessionSeatServer", new object[] {
                        sSessionKey}, this.DisconnectSessionSeatServerOperationCompleted, userState);
        }
        
        private void OnDisconnectSessionSeatServerOperationCompleted(object arg) {
            if ((this.DisconnectSessionSeatServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectSessionSeatServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/WebSeatServerConnectionCount", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int WebSeatServerConnectionCount() {
            object[] results = this.Invoke("WebSeatServerConnectionCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void WebSeatServerConnectionCountAsync() {
            this.WebSeatServerConnectionCountAsync(null);
        }
        
        /// <remarks/>
        public void WebSeatServerConnectionCountAsync(object userState) {
            if ((this.WebSeatServerConnectionCountOperationCompleted == null)) {
                this.WebSeatServerConnectionCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebSeatServerConnectionCountOperationCompleted);
            }
            this.InvokeAsync("WebSeatServerConnectionCount", new object[0], this.WebSeatServerConnectionCountOperationCompleted, userState);
        }
        
        private void OnWebSeatServerConnectionCountOperationCompleted(object arg) {
            if ((this.WebSeatServerConnectionCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebSeatServerConnectionCountCompleted(this, new WebSeatServerConnectionCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductions", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductions(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            object[] results = this.Invoke("GetProductions", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionsAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionsAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetProductionsAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.GetProductionsOperationCompleted == null)) {
                this.GetProductionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionsOperationCompleted);
            }
            this.InvokeAsync("GetProductions", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.GetProductionsOperationCompleted, userState);
        }
        
        private void OnGetProductionsOperationCompleted(object arg) {
            if ((this.GetProductionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionsCompleted(this, new GetProductionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionCredits", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionCredits(string sSessionKey, int iProdSeasonNo) {
            object[] results = this.Invoke("GetProductionCredits", new object[] {
                        sSessionKey,
                        iProdSeasonNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionCreditsAsync(string sSessionKey, int iProdSeasonNo) {
            this.GetProductionCreditsAsync(sSessionKey, iProdSeasonNo, null);
        }
        
        /// <remarks/>
        public void GetProductionCreditsAsync(string sSessionKey, int iProdSeasonNo, object userState) {
            if ((this.GetProductionCreditsOperationCompleted == null)) {
                this.GetProductionCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionCreditsOperationCompleted);
            }
            this.InvokeAsync("GetProductionCredits", new object[] {
                        sSessionKey,
                        iProdSeasonNo}, this.GetProductionCreditsOperationCompleted, userState);
        }
        
        private void OnGetProductionCreditsOperationCompleted(object arg) {
            if ((this.GetProductionCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionCreditsCompleted(this, new GetProductionCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LoginAttemptHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoginEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoginEx(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2) {
            object[] results = this.Invoke("LoginEx", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2) {
            this.LoginExAsync(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, null);
        }
        
        /// <remarks/>
        public void LoginExAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, object userState) {
            if ((this.LoginExOperationCompleted == null)) {
                this.LoginExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginExOperationCompleted);
            }
            this.InvokeAsync("LoginEx", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2}, this.LoginExOperationCompleted, userState);
        }
        
        private void OnLoginExOperationCompleted(object arg) {
            if ((this.LoginExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginExCompleted(this, new LoginExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetTicketHistory", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTicketHistory(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate) {
            object[] results = this.Invoke("GetTicketHistory", new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iProdSeasonNo,
                        iPerfNo,
                        sPerfStartDate,
                        sPerfEndDate,
                        sOrderStartDate,
                        sOrderEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketHistoryAsync(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate) {
            this.GetTicketHistoryAsync(sSessionKey, iSeasonNo, iProdSeasonNo, iPerfNo, sPerfStartDate, sPerfEndDate, sOrderStartDate, sOrderEndDate, null);
        }
        
        /// <remarks/>
        public void GetTicketHistoryAsync(string sSessionKey, int iSeasonNo, int iProdSeasonNo, int iPerfNo, string sPerfStartDate, string sPerfEndDate, string sOrderStartDate, string sOrderEndDate, object userState) {
            if ((this.GetTicketHistoryOperationCompleted == null)) {
                this.GetTicketHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketHistoryOperationCompleted);
            }
            this.InvokeAsync("GetTicketHistory", new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iProdSeasonNo,
                        iPerfNo,
                        sPerfStartDate,
                        sPerfEndDate,
                        sOrderStartDate,
                        sOrderEndDate}, this.GetTicketHistoryOperationCompleted, userState);
        }
        
        private void OnGetTicketHistoryOperationCompleted(object arg) {
            if ((this.GetTicketHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketHistoryCompleted(this, new GetTicketHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSubscriptionHistory", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubscriptionHistory(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate) {
            object[] results = this.Invoke("GetSubscriptionHistory", new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iPackageNo,
                        iPackageType,
                        sOrderStartDate,
                        sOrderEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubscriptionHistoryAsync(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate) {
            this.GetSubscriptionHistoryAsync(sSessionKey, iSeasonNo, iPackageNo, iPackageType, sOrderStartDate, sOrderEndDate, null);
        }
        
        /// <remarks/>
        public void GetSubscriptionHistoryAsync(string sSessionKey, int iSeasonNo, int iPackageNo, int iPackageType, string sOrderStartDate, string sOrderEndDate, object userState) {
            if ((this.GetSubscriptionHistoryOperationCompleted == null)) {
                this.GetSubscriptionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriptionHistoryOperationCompleted);
            }
            this.InvokeAsync("GetSubscriptionHistory", new object[] {
                        sSessionKey,
                        iSeasonNo,
                        iPackageNo,
                        iPackageType,
                        sOrderStartDate,
                        sOrderEndDate}, this.GetSubscriptionHistoryOperationCompleted, userState);
        }
        
        private void OnGetSubscriptionHistoryOperationCompleted(object arg) {
            if ((this.GetSubscriptionHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubscriptionHistoryCompleted(this, new GetSubscriptionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddOrderCommentsEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderCommentsEx2(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo) {
            this.Invoke("AddOrderCommentsEx2", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType,
                        CustomerNo,
                        CategoryNo});
        }
        
        /// <remarks/>
        public void AddOrderCommentsEx2Async(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo) {
            this.AddOrderCommentsEx2Async(SessionKey, Comment, LineItemID, LineItemType, CustomerNo, CategoryNo, null);
        }
        
        /// <remarks/>
        public void AddOrderCommentsEx2Async(string SessionKey, string Comment, int LineItemID, char LineItemType, int CustomerNo, int CategoryNo, object userState) {
            if ((this.AddOrderCommentsEx2OperationCompleted == null)) {
                this.AddOrderCommentsEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsEx2OperationCompleted);
            }
            this.InvokeAsync("AddOrderCommentsEx2", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType,
                        CustomerNo,
                        CategoryNo}, this.AddOrderCommentsEx2OperationCompleted, userState);
        }
        
        private void OnAddOrderCommentsEx2OperationCompleted(object arg) {
            if ((this.AddOrderCommentsEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderCommentsEx2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPromoCodeEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPromoCodeEx(string SessionKey, string PromotionCodeString, int PromotionCode) {
            object[] results = this.Invoke("GetPromoCodeEx", new object[] {
                        SessionKey,
                        PromotionCodeString,
                        PromotionCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromoCodeExAsync(string SessionKey, string PromotionCodeString, int PromotionCode) {
            this.GetPromoCodeExAsync(SessionKey, PromotionCodeString, PromotionCode, null);
        }
        
        /// <remarks/>
        public void GetPromoCodeExAsync(string SessionKey, string PromotionCodeString, int PromotionCode, object userState) {
            if ((this.GetPromoCodeExOperationCompleted == null)) {
                this.GetPromoCodeExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoCodeExOperationCompleted);
            }
            this.InvokeAsync("GetPromoCodeEx", new object[] {
                        SessionKey,
                        PromotionCodeString,
                        PromotionCode}, this.GetPromoCodeExOperationCompleted, userState);
        }
        
        private void OnGetPromoCodeExOperationCompleted(object arg) {
            if ((this.GetPromoCodeExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromoCodeExCompleted(this, new GetPromoCodeExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionsEx(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            object[] results = this.Invoke("GetProductionsEx", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionsExAsync(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionsExAsync(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetProductionsExAsync(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.GetProductionsExOperationCompleted == null)) {
                this.GetProductionsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionsExOperationCompleted);
            }
            this.InvokeAsync("GetProductionsEx", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.GetProductionsExOperationCompleted, userState);
        }
        
        private void OnGetProductionsExOperationCompleted(object arg) {
            if ((this.GetProductionsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionsExCompleted(this, new GetProductionsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetAPIDiagnostics", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAPIDiagnostics() {
            object[] results = this.Invoke("GetAPIDiagnostics", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAPIDiagnosticsAsync() {
            this.GetAPIDiagnosticsAsync(null);
        }
        
        /// <remarks/>
        public void GetAPIDiagnosticsAsync(object userState) {
            if ((this.GetAPIDiagnosticsOperationCompleted == null)) {
                this.GetAPIDiagnosticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAPIDiagnosticsOperationCompleted);
            }
            this.InvokeAsync("GetAPIDiagnostics", new object[0], this.GetAPIDiagnosticsOperationCompleted, userState);
        }
        
        private void OnGetAPIDiagnosticsOperationCompleted(object arg) {
            if ((this.GetAPIDiagnosticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAPIDiagnosticsCompleted(this, new GetAPIDiagnosticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateTessituraUser", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateTessituraUser(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            object[] results = this.Invoke("ValidateTessituraUser", new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateTessituraUserAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            this.ValidateTessituraUserAsync(sSessionKey, sTessituraUsername, sTessituraPassword, null);
        }
        
        /// <remarks/>
        public void ValidateTessituraUserAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword, object userState) {
            if ((this.ValidateTessituraUserOperationCompleted == null)) {
                this.ValidateTessituraUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateTessituraUserOperationCompleted);
            }
            this.InvokeAsync("ValidateTessituraUser", new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword}, this.ValidateTessituraUserOperationCompleted, userState);
        }
        
        private void OnValidateTessituraUserOperationCompleted(object arg) {
            if ((this.ValidateTessituraUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateTessituraUserCompleted(this, new ValidateTessituraUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CheckoutStatusHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/CheckoutEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckoutEx2(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult) {
            this.Invoke("CheckoutEx2", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        sEciIndType,
                        sSecureTransID,
                        sSecureTransSecurity,
                        sVerAuthValue,
                        sVerCertSerialCardholder,
                        sVerCertSerialCardAcceptor,
                        sVerHashResult});
        }
        
        /// <remarks/>
        public void CheckoutEx2Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult) {
            this.CheckoutEx2Async(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, sEciIndType, sSecureTransID, sSecureTransSecurity, sVerAuthValue, sVerCertSerialCardholder, sVerCertSerialCardAcceptor, sVerHashResult, null);
        }
        
        /// <remarks/>
        public void CheckoutEx2Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string sEciIndType, 
                    string sSecureTransID, 
                    string sSecureTransSecurity, 
                    string sVerAuthValue, 
                    string sVerCertSerialCardholder, 
                    string sVerCertSerialCardAcceptor, 
                    string sVerHashResult, 
                    object userState) {
            if ((this.CheckoutEx2OperationCompleted == null)) {
                this.CheckoutEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckoutEx2OperationCompleted);
            }
            this.InvokeAsync("CheckoutEx2", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        sEciIndType,
                        sSecureTransID,
                        sSecureTransSecurity,
                        sVerAuthValue,
                        sVerCertSerialCardholder,
                        sVerCertSerialCardAcceptor,
                        sVerHashResult}, this.CheckoutEx2OperationCompleted, userState);
        }
        
        private void OnCheckoutEx2OperationCompleted(object arg) {
            if ((this.CheckoutEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckoutEx2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailSYOSDataSet", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetailSYOSDataSet(string SessionKey, int iPerf_no, short iModeOfSale) {
            object[] results = this.Invoke("GetPerformanceDetailSYOSDataSet", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailSYOSDataSetAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailSYOSDataSetAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.GetPerformanceDetailSYOSDataSetOperationCompleted == null)) {
                this.GetPerformanceDetailSYOSDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailSYOSDataSetOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailSYOSDataSet", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.GetPerformanceDetailSYOSDataSetOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailSYOSDataSetOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailSYOSDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailSYOSDataSetCompleted(this, new GetPerformanceDetailSYOSDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdatePhone", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdatePhone(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd) {
            object[] results = this.Invoke("UpdatePhone", new object[] {
                        sSessionKey,
                        iPhoneNo,
                        iAddressNo,
                        sPhoneNumber,
                        iPhoneType,
                        sDayInd,
                        sTeleInd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhoneAsync(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd) {
            this.UpdatePhoneAsync(sSessionKey, iPhoneNo, iAddressNo, sPhoneNumber, iPhoneType, sDayInd, sTeleInd, null);
        }
        
        /// <remarks/>
        public void UpdatePhoneAsync(string sSessionKey, int iPhoneNo, int iAddressNo, string sPhoneNumber, int iPhoneType, string sDayInd, string sTeleInd, object userState) {
            if ((this.UpdatePhoneOperationCompleted == null)) {
                this.UpdatePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhoneOperationCompleted);
            }
            this.InvokeAsync("UpdatePhone", new object[] {
                        sSessionKey,
                        iPhoneNo,
                        iAddressNo,
                        sPhoneNumber,
                        iPhoneType,
                        sDayInd,
                        sTeleInd}, this.UpdatePhoneOperationCompleted, userState);
        }
        
        private void OnUpdatePhoneOperationCompleted(object arg) {
            if ((this.UpdatePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhoneCompleted(this, new UpdatePhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemovePhone", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePhone(string sSessionKey, int iPhoneNo) {
            this.Invoke("RemovePhone", new object[] {
                        sSessionKey,
                        iPhoneNo});
        }
        
        /// <remarks/>
        public void RemovePhoneAsync(string sSessionKey, int iPhoneNo) {
            this.RemovePhoneAsync(sSessionKey, iPhoneNo, null);
        }
        
        /// <remarks/>
        public void RemovePhoneAsync(string sSessionKey, int iPhoneNo, object userState) {
            if ((this.RemovePhoneOperationCompleted == null)) {
                this.RemovePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePhoneOperationCompleted);
            }
            this.InvokeAsync("RemovePhone", new object[] {
                        sSessionKey,
                        iPhoneNo}, this.RemovePhoneOperationCompleted, userState);
        }
        
        private void OnRemovePhoneOperationCompleted(object arg) {
            if ((this.RemovePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateSpecialActivity", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateSpecialActivity(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId) {
            object[] results = this.Invoke("UpdateSpecialActivity", new object[] {
                        sSessionKey,
                        iSpecialActivityNo,
                        dtDate,
                        sSolicitor,
                        sPerformance,
                        iStatusID,
                        sNotes,
                        iNumberOfAttendees,
                        iSpecialActivityTypeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSpecialActivityAsync(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId) {
            this.UpdateSpecialActivityAsync(sSessionKey, iSpecialActivityNo, dtDate, sSolicitor, sPerformance, iStatusID, sNotes, iNumberOfAttendees, iSpecialActivityTypeId, null);
        }
        
        /// <remarks/>
        public void UpdateSpecialActivityAsync(string sSessionKey, int iSpecialActivityNo, System.DateTime dtDate, string sSolicitor, string sPerformance, int iStatusID, string sNotes, int iNumberOfAttendees, int iSpecialActivityTypeId, object userState) {
            if ((this.UpdateSpecialActivityOperationCompleted == null)) {
                this.UpdateSpecialActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSpecialActivityOperationCompleted);
            }
            this.InvokeAsync("UpdateSpecialActivity", new object[] {
                        sSessionKey,
                        iSpecialActivityNo,
                        dtDate,
                        sSolicitor,
                        sPerformance,
                        iStatusID,
                        sNotes,
                        iNumberOfAttendees,
                        iSpecialActivityTypeId}, this.UpdateSpecialActivityOperationCompleted, userState);
        }
        
        private void OnUpdateSpecialActivityOperationCompleted(object arg) {
            if ((this.UpdateSpecialActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSpecialActivityCompleted(this, new UpdateSpecialActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSpecialActivities", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpecialActivities(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId) {
            object[] results = this.Invoke("GetSpecialActivities", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iStatusId,
                        iSpecialActivityTypeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecialActivitiesAsync(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId) {
            this.GetSpecialActivitiesAsync(sSessionKey, sStartDate, sEndDate, iStatusId, iSpecialActivityTypeId, null);
        }
        
        /// <remarks/>
        public void GetSpecialActivitiesAsync(string sSessionKey, string sStartDate, string sEndDate, int iStatusId, int iSpecialActivityTypeId, object userState) {
            if ((this.GetSpecialActivitiesOperationCompleted == null)) {
                this.GetSpecialActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialActivitiesOperationCompleted);
            }
            this.InvokeAsync("GetSpecialActivities", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iStatusId,
                        iSpecialActivityTypeId}, this.GetSpecialActivitiesOperationCompleted, userState);
        }
        
        private void OnGetSpecialActivitiesOperationCompleted(object arg) {
            if ((this.GetSpecialActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialActivitiesCompleted(this, new GetSpecialActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateConstituency", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateConstituency(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action) {
            object[] results = this.Invoke("UpdateConstituency", new object[] {
                        sSessionKey,
                        iConstituencyNo,
                        iN1N2Ind,
                        action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConstituencyAsync(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action) {
            this.UpdateConstituencyAsync(sSessionKey, iConstituencyNo, iN1N2Ind, action, null);
        }
        
        /// <remarks/>
        public void UpdateConstituencyAsync(string sSessionKey, int iConstituencyNo, int iN1N2Ind, char action, object userState) {
            if ((this.UpdateConstituencyOperationCompleted == null)) {
                this.UpdateConstituencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConstituencyOperationCompleted);
            }
            this.InvokeAsync("UpdateConstituency", new object[] {
                        sSessionKey,
                        iConstituencyNo,
                        iN1N2Ind,
                        action}, this.UpdateConstituencyOperationCompleted, userState);
        }
        
        private void OnUpdateConstituencyOperationCompleted(object arg) {
            if ((this.UpdateConstituencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConstituencyCompleted(this, new UpdateConstituencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveConstituency", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveConstituency(string sSessionKey, int iConstituencyNo) {
            this.Invoke("RemoveConstituency", new object[] {
                        sSessionKey,
                        iConstituencyNo});
        }
        
        /// <remarks/>
        public void RemoveConstituencyAsync(string sSessionKey, int iConstituencyNo) {
            this.RemoveConstituencyAsync(sSessionKey, iConstituencyNo, null);
        }
        
        /// <remarks/>
        public void RemoveConstituencyAsync(string sSessionKey, int iConstituencyNo, object userState) {
            if ((this.RemoveConstituencyOperationCompleted == null)) {
                this.RemoveConstituencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveConstituencyOperationCompleted);
            }
            this.InvokeAsync("RemoveConstituency", new object[] {
                        sSessionKey,
                        iConstituencyNo}, this.RemoveConstituencyOperationCompleted, userState);
        }
        
        private void OnRemoveConstituencyOperationCompleted(object arg) {
            if ((this.RemoveConstituencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveConstituencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetHoldCodes", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHoldCodes(string sSessionKey, string sTessUID, string sTessPWD) {
            object[] results = this.Invoke("GetHoldCodes", new object[] {
                        sSessionKey,
                        sTessUID,
                        sTessPWD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHoldCodesAsync(string sSessionKey, string sTessUID, string sTessPWD) {
            this.GetHoldCodesAsync(sSessionKey, sTessUID, sTessPWD, null);
        }
        
        /// <remarks/>
        public void GetHoldCodesAsync(string sSessionKey, string sTessUID, string sTessPWD, object userState) {
            if ((this.GetHoldCodesOperationCompleted == null)) {
                this.GetHoldCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHoldCodesOperationCompleted);
            }
            this.InvokeAsync("GetHoldCodes", new object[] {
                        sSessionKey,
                        sTessUID,
                        sTessPWD}, this.GetHoldCodesOperationCompleted, userState);
        }
        
        private void OnGetHoldCodesOperationCompleted(object arg) {
            if ((this.GetHoldCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHoldCodesCompleted(this, new GetHoldCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateHoldCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD) {
            this.Invoke("UpdateHoldCode", new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        iHcNo,
                        sHoldUntilDate,
                        sOnlyAffectAvailable,
                        iReplaceMode,
                        sTessUID,
                        sTessPWD});
        }
        
        /// <remarks/>
        public void UpdateHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD) {
            this.UpdateHoldCodeAsync(sSessionKey, iPerfNo, sSeatNoList, iHcNo, sHoldUntilDate, sOnlyAffectAvailable, iReplaceMode, sTessUID, sTessPWD, null);
        }
        
        /// <remarks/>
        public void UpdateHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, int iHcNo, string sHoldUntilDate, string sOnlyAffectAvailable, int iReplaceMode, string sTessUID, string sTessPWD, object userState) {
            if ((this.UpdateHoldCodeOperationCompleted == null)) {
                this.UpdateHoldCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHoldCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateHoldCode", new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        iHcNo,
                        sHoldUntilDate,
                        sOnlyAffectAvailable,
                        iReplaceMode,
                        sTessUID,
                        sTessPWD}, this.UpdateHoldCodeOperationCompleted, userState);
        }
        
        private void OnUpdateHoldCodeOperationCompleted(object arg) {
            if ((this.UpdateHoldCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHoldCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveHoldCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveHoldCode(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD) {
            this.Invoke("RemoveHoldCode", new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        sReleaseDate,
                        sTessUID,
                        sTessPWD});
        }
        
        /// <remarks/>
        public void RemoveHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD) {
            this.RemoveHoldCodeAsync(sSessionKey, iPerfNo, sSeatNoList, sReleaseDate, sTessUID, sTessPWD, null);
        }
        
        /// <remarks/>
        public void RemoveHoldCodeAsync(string sSessionKey, int iPerfNo, string sSeatNoList, string sReleaseDate, string sTessUID, string sTessPWD, object userState) {
            if ((this.RemoveHoldCodeOperationCompleted == null)) {
                this.RemoveHoldCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveHoldCodeOperationCompleted);
            }
            this.InvokeAsync("RemoveHoldCode", new object[] {
                        sSessionKey,
                        iPerfNo,
                        sSeatNoList,
                        sReleaseDate,
                        sTessUID,
                        sTessPWD}, this.RemoveHoldCodeOperationCompleted, userState);
        }
        
        private void OnRemoveHoldCodeOperationCompleted(object arg) {
            if ((this.RemoveHoldCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveHoldCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOrderConfirmationEmail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Email GetOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo) {
            object[] results = this.Invoke("GetOrderConfirmationEmail", new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo});
            return ((Email)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo) {
            this.GetOrderConfirmationEmailAsync(sSessionKey, iTemplateNo, iOrderNo, null);
        }
        
        /// <remarks/>
        public void GetOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, object userState) {
            if ((this.GetOrderConfirmationEmailOperationCompleted == null)) {
                this.GetOrderConfirmationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderConfirmationEmailOperationCompleted);
            }
            this.InvokeAsync("GetOrderConfirmationEmail", new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo}, this.GetOrderConfirmationEmailOperationCompleted, userState);
        }
        
        private void OnGetOrderConfirmationEmailOperationCompleted(object arg) {
            if ((this.GetOrderConfirmationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderConfirmationEmailCompleted(this, new GetOrderConfirmationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/SendOrderConfirmationEmail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendOrderConfirmationEmail(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject) {
            object[] results = this.Invoke("SendOrderConfirmationEmail", new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo,
                        sSubject});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject) {
            this.SendOrderConfirmationEmailAsync(sSessionKey, iTemplateNo, iOrderNo, sSubject, null);
        }
        
        /// <remarks/>
        public void SendOrderConfirmationEmailAsync(string sSessionKey, int iTemplateNo, int iOrderNo, string sSubject, object userState) {
            if ((this.SendOrderConfirmationEmailOperationCompleted == null)) {
                this.SendOrderConfirmationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrderConfirmationEmailOperationCompleted);
            }
            this.InvokeAsync("SendOrderConfirmationEmail", new object[] {
                        sSessionKey,
                        iTemplateNo,
                        iOrderNo,
                        sSubject}, this.SendOrderConfirmationEmailOperationCompleted, userState);
        }
        
        private void OnSendOrderConfirmationEmailOperationCompleted(object arg) {
            if ((this.SendOrderConfirmationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrderConfirmationEmailCompleted(this, new SendOrderConfirmationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/TestOrderConfirmationEmail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestOrderConfirmationEmail(string sEmailAddress, int iTemplateNo, int iOrganizationId) {
            object[] results = this.Invoke("TestOrderConfirmationEmail", new object[] {
                        sEmailAddress,
                        iTemplateNo,
                        iOrganizationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestOrderConfirmationEmailAsync(string sEmailAddress, int iTemplateNo, int iOrganizationId) {
            this.TestOrderConfirmationEmailAsync(sEmailAddress, iTemplateNo, iOrganizationId, null);
        }
        
        /// <remarks/>
        public void TestOrderConfirmationEmailAsync(string sEmailAddress, int iTemplateNo, int iOrganizationId, object userState) {
            if ((this.TestOrderConfirmationEmailOperationCompleted == null)) {
                this.TestOrderConfirmationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOrderConfirmationEmailOperationCompleted);
            }
            this.InvokeAsync("TestOrderConfirmationEmail", new object[] {
                        sEmailAddress,
                        iTemplateNo,
                        iOrganizationId}, this.TestOrderConfirmationEmailOperationCompleted, userState);
        }
        
        private void OnTestOrderConfirmationEmailOperationCompleted(object arg) {
            if ((this.TestOrderConfirmationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestOrderConfirmationEmailCompleted(this, new TestOrderConfirmationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AlterTicketExpiration", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime AlterTicketExpiration(string sSessionKey, string sExpirationTime, int iOffsetSeconds) {
            object[] results = this.Invoke("AlterTicketExpiration", new object[] {
                        sSessionKey,
                        sExpirationTime,
                        iOffsetSeconds});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void AlterTicketExpirationAsync(string sSessionKey, string sExpirationTime, int iOffsetSeconds) {
            this.AlterTicketExpirationAsync(sSessionKey, sExpirationTime, iOffsetSeconds, null);
        }
        
        /// <remarks/>
        public void AlterTicketExpirationAsync(string sSessionKey, string sExpirationTime, int iOffsetSeconds, object userState) {
            if ((this.AlterTicketExpirationOperationCompleted == null)) {
                this.AlterTicketExpirationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlterTicketExpirationOperationCompleted);
            }
            this.InvokeAsync("AlterTicketExpiration", new object[] {
                        sSessionKey,
                        sExpirationTime,
                        iOffsetSeconds}, this.AlterTicketExpirationOperationCompleted, userState);
        }
        
        private void OnAlterTicketExpirationOperationCompleted(object arg) {
            if ((this.AlterTicketExpirationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlterTicketExpirationCompleted(this, new AlterTicketExpirationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetTicketExpiration", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetTicketExpiration(string sSessionKey) {
            object[] results = this.Invoke("GetTicketExpiration", new object[] {
                        sSessionKey});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketExpirationAsync(string sSessionKey) {
            this.GetTicketExpirationAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetTicketExpirationAsync(string sSessionKey, object userState) {
            if ((this.GetTicketExpirationOperationCompleted == null)) {
                this.GetTicketExpirationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketExpirationOperationCompleted);
            }
            this.InvokeAsync("GetTicketExpiration", new object[] {
                        sSessionKey}, this.GetTicketExpirationOperationCompleted, userState);
        }
        
        private void OnGetTicketExpirationOperationCompleted(object arg) {
            if ((this.GetTicketExpirationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketExpirationCompleted(this, new GetTicketExpirationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetMaxTicketAmount", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMaxTicketAmount() {
            object[] results = this.Invoke("GetMaxTicketAmount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxTicketAmountAsync() {
            this.GetMaxTicketAmountAsync(null);
        }
        
        /// <remarks/>
        public void GetMaxTicketAmountAsync(object userState) {
            if ((this.GetMaxTicketAmountOperationCompleted == null)) {
                this.GetMaxTicketAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxTicketAmountOperationCompleted);
            }
            this.InvokeAsync("GetMaxTicketAmount", new object[0], this.GetMaxTicketAmountOperationCompleted, userState);
        }
        
        private void OnGetMaxTicketAmountOperationCompleted(object arg) {
            if ((this.GetMaxTicketAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxTicketAmountCompleted(this, new GetMaxTicketAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetLocalDataEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocalDataEx(string SessionKey, int LocalDataTableIndex, string RetrievalKey) {
            object[] results = this.Invoke("GetLocalDataEx", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalDataExAsync(string SessionKey, int LocalDataTableIndex, string RetrievalKey) {
            this.GetLocalDataExAsync(SessionKey, LocalDataTableIndex, RetrievalKey, null);
        }
        
        /// <remarks/>
        public void GetLocalDataExAsync(string SessionKey, int LocalDataTableIndex, string RetrievalKey, object userState) {
            if ((this.GetLocalDataExOperationCompleted == null)) {
                this.GetLocalDataExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalDataExOperationCompleted);
            }
            this.InvokeAsync("GetLocalDataEx", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey}, this.GetLocalDataExOperationCompleted, userState);
        }
        
        private void OnGetLocalDataExOperationCompleted(object arg) {
            if ((this.GetLocalDataExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalDataExCompleted(this, new GetLocalDataExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformancesEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformancesEx2(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType) {
            object[] results = this.Invoke("GetPerformancesEx2", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesEx2Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType) {
            this.GetPerformancesEx2Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformancesEx2Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, object userState) {
            if ((this.GetPerformancesEx2OperationCompleted == null)) {
                this.GetPerformancesEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx2OperationCompleted);
            }
            this.InvokeAsync("GetPerformancesEx2", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType}, this.GetPerformancesEx2OperationCompleted, userState);
        }
        
        private void OnGetPerformancesEx2OperationCompleted(object arg) {
            if ((this.GetPerformancesEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesEx2Completed(this, new GetPerformancesEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionsEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionsEx2(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement) {
            object[] results = this.Invoke("GetProductionsEx2", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionsEx2Async(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement) {
            this.GetProductionsEx2Async(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, null);
        }
        
        /// <remarks/>
        public void GetProductionsEx2Async(string sSessionKey, string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sFullText, string sFullTextType, string sContentType, int iKeywordAndOrStatement, object userState) {
            if ((this.GetProductionsEx2OperationCompleted == null)) {
                this.GetProductionsEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionsEx2OperationCompleted);
            }
            this.InvokeAsync("GetProductionsEx2", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement}, this.GetProductionsEx2OperationCompleted, userState);
        }
        
        private void OnGetProductionsEx2OperationCompleted(object arg) {
            if ((this.GetProductionsEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionsEx2Completed(this, new GetProductionsEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackagesEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackagesEx2(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType) {
            object[] results = this.Invoke("GetPackagesEx2", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackagesEx2Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType) {
            this.GetPackagesEx2Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPackagesEx2Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    object userState) {
            if ((this.GetPackagesEx2OperationCompleted == null)) {
                this.GetPackagesEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackagesEx2OperationCompleted);
            }
            this.InvokeAsync("GetPackagesEx2", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType}, this.GetPackagesEx2OperationCompleted, userState);
        }
        
        private void OnGetPackagesEx2OperationCompleted(object arg) {
            if ((this.GetPackagesEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackagesEx2Completed(this, new GetPackagesEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ExecuteLocalProcedure", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExecuteLocalProcedure(string SessionKey, int LocalProcedureId, string LocalProcedureValues) {
            object[] results = this.Invoke("ExecuteLocalProcedure", new object[] {
                        SessionKey,
                        LocalProcedureId,
                        LocalProcedureValues});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteLocalProcedureAsync(string SessionKey, int LocalProcedureId, string LocalProcedureValues) {
            this.ExecuteLocalProcedureAsync(SessionKey, LocalProcedureId, LocalProcedureValues, null);
        }
        
        /// <remarks/>
        public void ExecuteLocalProcedureAsync(string SessionKey, int LocalProcedureId, string LocalProcedureValues, object userState) {
            if ((this.ExecuteLocalProcedureOperationCompleted == null)) {
                this.ExecuteLocalProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteLocalProcedureOperationCompleted);
            }
            this.InvokeAsync("ExecuteLocalProcedure", new object[] {
                        SessionKey,
                        LocalProcedureId,
                        LocalProcedureValues}, this.ExecuteLocalProcedureOperationCompleted, userState);
        }
        
        private void OnExecuteLocalProcedureOperationCompleted(object arg) {
            if ((this.ExecuteLocalProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteLocalProcedureCompleted(this, new ExecuteLocalProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/SendCredentials", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendCredentials(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID) {
            object[] results = this.Invoke("SendCredentials", new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType,
                        bResetTempFlag,
                        bUseToken,
                        bGenerateNewPassword,
                        iTemplateID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendCredentialsAsync(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID) {
            this.SendCredentialsAsync(sSessionKey, sEmail, iLoginType, bResetTempFlag, bUseToken, bGenerateNewPassword, iTemplateID, null);
        }
        
        /// <remarks/>
        public void SendCredentialsAsync(string sSessionKey, string sEmail, int iLoginType, bool bResetTempFlag, bool bUseToken, bool bGenerateNewPassword, int iTemplateID, object userState) {
            if ((this.SendCredentialsOperationCompleted == null)) {
                this.SendCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCredentialsOperationCompleted);
            }
            this.InvokeAsync("SendCredentials", new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType,
                        bResetTempFlag,
                        bUseToken,
                        bGenerateNewPassword,
                        iTemplateID}, this.SendCredentialsOperationCompleted, userState);
        }
        
        private void OnSendCredentialsOperationCompleted(object arg) {
            if ((this.SendCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCredentialsCompleted(this, new SendCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LoginAttemptHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoginEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoginEx2(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken) {
            object[] results = this.Invoke("LoginEx2", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2,
                        sForgotLoginToken});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginEx2Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken) {
            this.LoginEx2Async(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, sEmail, sPhone, sPostalCode, iCustomerNo, iN1N2, sForgotLoginToken, null);
        }
        
        /// <remarks/>
        public void LoginEx2Async(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, string sEmail, string sPhone, string sPostalCode, int iCustomerNo, int iN1N2, string sForgotLoginToken, object userState) {
            if ((this.LoginEx2OperationCompleted == null)) {
                this.LoginEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginEx2OperationCompleted);
            }
            this.InvokeAsync("LoginEx2", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode,
                        sEmail,
                        sPhone,
                        sPostalCode,
                        iCustomerNo,
                        iN1N2,
                        sForgotLoginToken}, this.LoginEx2OperationCompleted, userState);
        }
        
        private void OnLoginEx2OperationCompleted(object arg) {
            if ((this.LoginEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginEx2Completed(this, new LoginEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ChangeModeOfSaleEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeModeOfSaleEx(string SessionKey, int NewModeOfSale) {
            object[] results = this.Invoke("ChangeModeOfSaleEx", new object[] {
                        SessionKey,
                        NewModeOfSale});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeModeOfSaleExAsync(string SessionKey, int NewModeOfSale) {
            this.ChangeModeOfSaleExAsync(SessionKey, NewModeOfSale, null);
        }
        
        /// <remarks/>
        public void ChangeModeOfSaleExAsync(string SessionKey, int NewModeOfSale, object userState) {
            if ((this.ChangeModeOfSaleExOperationCompleted == null)) {
                this.ChangeModeOfSaleExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeModeOfSaleExOperationCompleted);
            }
            this.InvokeAsync("ChangeModeOfSaleEx", new object[] {
                        SessionKey,
                        NewModeOfSale}, this.ChangeModeOfSaleExOperationCompleted, userState);
        }
        
        private void OnChangeModeOfSaleExOperationCompleted(object arg) {
            if ((this.ChangeModeOfSaleExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeModeOfSaleExCompleted(this, new ChangeModeOfSaleExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateSourceCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSourceCode(string SessionKey, int NewPromoCode) {
            this.Invoke("UpdateSourceCode", new object[] {
                        SessionKey,
                        NewPromoCode});
        }
        
        /// <remarks/>
        public void UpdateSourceCodeAsync(string SessionKey, int NewPromoCode) {
            this.UpdateSourceCodeAsync(SessionKey, NewPromoCode, null);
        }
        
        /// <remarks/>
        public void UpdateSourceCodeAsync(string SessionKey, int NewPromoCode, object userState) {
            if ((this.UpdateSourceCodeOperationCompleted == null)) {
                this.UpdateSourceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSourceCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateSourceCode", new object[] {
                        SessionKey,
                        NewPromoCode}, this.UpdateSourceCodeOperationCompleted, userState);
        }
        
        private void OnUpdateSourceCodeOperationCompleted(object arg) {
            if ((this.UpdateSourceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSourceCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/CreatePaymentPlan", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CreatePaymentPlan(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments) {
            object[] results = this.Invoke("CreatePaymentPlan", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iBillingScheduleId,
                        iNumberOfPayments});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePaymentPlanAsync(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments) {
            this.CreatePaymentPlanAsync(sSessionKey, sStartDate, sEndDate, iBillingScheduleId, iNumberOfPayments, null);
        }
        
        /// <remarks/>
        public void CreatePaymentPlanAsync(string sSessionKey, string sStartDate, string sEndDate, int iBillingScheduleId, int iNumberOfPayments, object userState) {
            if ((this.CreatePaymentPlanOperationCompleted == null)) {
                this.CreatePaymentPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaymentPlanOperationCompleted);
            }
            this.InvokeAsync("CreatePaymentPlan", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        iBillingScheduleId,
                        iNumberOfPayments}, this.CreatePaymentPlanOperationCompleted, userState);
        }
        
        private void OnCreatePaymentPlanOperationCompleted(object arg) {
            if ((this.CreatePaymentPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaymentPlanCompleted(this, new CreatePaymentPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateTessituraUserEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateTessituraUserEx(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            object[] results = this.Invoke("ValidateTessituraUserEx", new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateTessituraUserExAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword) {
            this.ValidateTessituraUserExAsync(sSessionKey, sTessituraUsername, sTessituraPassword, null);
        }
        
        /// <remarks/>
        public void ValidateTessituraUserExAsync(string sSessionKey, string sTessituraUsername, string sTessituraPassword, object userState) {
            if ((this.ValidateTessituraUserExOperationCompleted == null)) {
                this.ValidateTessituraUserExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateTessituraUserExOperationCompleted);
            }
            this.InvokeAsync("ValidateTessituraUserEx", new object[] {
                        sSessionKey,
                        sTessituraUsername,
                        sTessituraPassword}, this.ValidateTessituraUserExOperationCompleted, userState);
        }
        
        private void OnValidateTessituraUserExOperationCompleted(object arg) {
            if ((this.ValidateTessituraUserExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateTessituraUserExCompleted(this, new ValidateTessituraUserExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPermissions", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPermissions(string sSessionKey, string sUserGroupId, int iSecurityObjectId) {
            object[] results = this.Invoke("GetPermissions", new object[] {
                        sSessionKey,
                        sUserGroupId,
                        iSecurityObjectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermissionsAsync(string sSessionKey, string sUserGroupId, int iSecurityObjectId) {
            this.GetPermissionsAsync(sSessionKey, sUserGroupId, iSecurityObjectId, null);
        }
        
        /// <remarks/>
        public void GetPermissionsAsync(string sSessionKey, string sUserGroupId, int iSecurityObjectId, object userState) {
            if ((this.GetPermissionsOperationCompleted == null)) {
                this.GetPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissionsOperationCompleted);
            }
            this.InvokeAsync("GetPermissions", new object[] {
                        sSessionKey,
                        sUserGroupId,
                        iSecurityObjectId}, this.GetPermissionsOperationCompleted, userState);
        }
        
        private void OnGetPermissionsOperationCompleted(object arg) {
            if ((this.GetPermissionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermissionsCompleted(this, new GetPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatSummary", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatSummary(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation) {
            object[] results = this.Invoke("GetSeatSummary", new object[] {
                        sSessionKey,
                        sSections,
                        sZones,
                        sScreens,
                        iPerformanceNumber,
                        iPackageNumber,
                        sCalcPackageAllocation});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatSummaryAsync(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation) {
            this.GetSeatSummaryAsync(sSessionKey, sSections, sZones, sScreens, iPerformanceNumber, iPackageNumber, sCalcPackageAllocation, null);
        }
        
        /// <remarks/>
        public void GetSeatSummaryAsync(string sSessionKey, string sSections, string sZones, string sScreens, int iPerformanceNumber, int iPackageNumber, string sCalcPackageAllocation, object userState) {
            if ((this.GetSeatSummaryOperationCompleted == null)) {
                this.GetSeatSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatSummaryOperationCompleted);
            }
            this.InvokeAsync("GetSeatSummary", new object[] {
                        sSessionKey,
                        sSections,
                        sZones,
                        sScreens,
                        iPerformanceNumber,
                        iPackageNumber,
                        sCalcPackageAllocation}, this.GetSeatSummaryOperationCompleted, userState);
        }
        
        private void OnGetSeatSummaryOperationCompleted(object arg) {
            if ((this.GetSeatSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatSummaryCompleted(this, new GetSeatSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CheckoutStatusHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/CheckoutEx3", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckoutEx3(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, bool bAuthorize, string sAuthorizationCode, string s3DSecureValues) {
            this.Invoke("CheckoutEx3", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        s3DSecureValues});
        }
        
        /// <remarks/>
        public void CheckoutEx3Async(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, bool bAuthorize, string sAuthorizationCode, string s3DSecureValues) {
            this.CheckoutEx3Async(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, bAuthorize, sAuthorizationCode, s3DSecureValues, null);
        }
        
        /// <remarks/>
        public void CheckoutEx3Async(
                    string sSessionKey, 
                    string sCCOwner, 
                    string sCCNumber, 
                    int iCCType, 
                    int iCCMonth, 
                    int iCCYear, 
                    decimal dAmount, 
                    bool bAllowUnderPayment, 
                    string sCardAuthenticationCode, 
                    int iCCIssueNumber, 
                    int iCCStartMonth, 
                    int iCCStartYear, 
                    bool bAuthorize, 
                    string sAuthorizationCode, 
                    string s3DSecureValues, 
                    object userState) {
            if ((this.CheckoutEx3OperationCompleted == null)) {
                this.CheckoutEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckoutEx3OperationCompleted);
            }
            this.InvokeAsync("CheckoutEx3", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        bAuthorize,
                        sAuthorizationCode,
                        s3DSecureValues}, this.CheckoutEx3OperationCompleted, userState);
        }
        
        private void OnCheckoutEx3OperationCompleted(object arg) {
            if ((this.CheckoutEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckoutEx3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPrintAtHomeSettings", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPrintAtHomeSettings() {
            object[] results = this.Invoke("GetPrintAtHomeSettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintAtHomeSettingsAsync() {
            this.GetPrintAtHomeSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetPrintAtHomeSettingsAsync(object userState) {
            if ((this.GetPrintAtHomeSettingsOperationCompleted == null)) {
                this.GetPrintAtHomeSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintAtHomeSettingsOperationCompleted);
            }
            this.InvokeAsync("GetPrintAtHomeSettings", new object[0], this.GetPrintAtHomeSettingsOperationCompleted, userState);
        }
        
        private void OnGetPrintAtHomeSettingsOperationCompleted(object arg) {
            if ((this.GetPrintAtHomeSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintAtHomeSettingsCompleted(this, new GetPrintAtHomeSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetConstituentInfoEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConstituentInfoEx(string SessionKey, string TableListTokens) {
            object[] results = this.Invoke("GetConstituentInfoEx", new object[] {
                        SessionKey,
                        TableListTokens});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstituentInfoExAsync(string SessionKey, string TableListTokens) {
            this.GetConstituentInfoExAsync(SessionKey, TableListTokens, null);
        }
        
        /// <remarks/>
        public void GetConstituentInfoExAsync(string SessionKey, string TableListTokens, object userState) {
            if ((this.GetConstituentInfoExOperationCompleted == null)) {
                this.GetConstituentInfoExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstituentInfoExOperationCompleted);
            }
            this.InvokeAsync("GetConstituentInfoEx", new object[] {
                        SessionKey,
                        TableListTokens}, this.GetConstituentInfoExOperationCompleted, userState);
        }
        
        private void OnGetConstituentInfoExOperationCompleted(object arg) {
            if ((this.GetConstituentInfoExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstituentInfoExCompleted(this, new GetConstituentInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformancesEx3", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformancesEx3(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, string sPerformanceIds, string sSeasonIds) {
            object[] results = this.Invoke("GetPerformancesEx3", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesEx3Async(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, string sFullText, string sFullTextType, string sContentType, string sPerformanceIds, string sSeasonIds) {
            this.GetPerformancesEx3Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, sFullText, sFullTextType, sContentType, sPerformanceIds, sSeasonIds, null);
        }
        
        /// <remarks/>
        public void GetPerformancesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    object userState) {
            if ((this.GetPerformancesEx3OperationCompleted == null)) {
                this.GetPerformancesEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesEx3OperationCompleted);
            }
            this.InvokeAsync("GetPerformancesEx3", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPerformanceIds,
                        sSeasonIds}, this.GetPerformancesEx3OperationCompleted, userState);
        }
        
        private void OnGetPerformancesEx3OperationCompleted(object arg) {
            if ((this.GetPerformancesEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesEx3Completed(this, new GetPerformancesEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionsEx3", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionsEx3(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds) {
            object[] results = this.Invoke("GetProductionsEx3", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement,
                        sPerformanceIds,
                        sSeasonIds,
                        sProductionSeasonIds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionsEx3Async(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds) {
            this.GetProductionsEx3Async(sSessionKey, sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sFullText, sFullTextType, sContentType, iKeywordAndOrStatement, sPerformanceIds, sSeasonIds, sProductionSeasonIds, null);
        }
        
        /// <remarks/>
        public void GetProductionsEx3Async(
                    string sSessionKey, 
                    string sStartDate, 
                    string sEndDate, 
                    string sPerfType, 
                    string sArtist, 
                    short iVenueID, 
                    string sKeywords, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    int iKeywordAndOrStatement, 
                    string sPerformanceIds, 
                    string sSeasonIds, 
                    string sProductionSeasonIds, 
                    object userState) {
            if ((this.GetProductionsEx3OperationCompleted == null)) {
                this.GetProductionsEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionsEx3OperationCompleted);
            }
            this.InvokeAsync("GetProductionsEx3", new object[] {
                        sSessionKey,
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        iKeywordAndOrStatement,
                        sPerformanceIds,
                        sSeasonIds,
                        sProductionSeasonIds}, this.GetProductionsEx3OperationCompleted, userState);
        }
        
        private void OnGetProductionsEx3OperationCompleted(object arg) {
            if ((this.GetProductionsEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionsEx3Completed(this, new GetProductionsEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackagesEx3", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackagesEx3(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers) {
            object[] results = this.Invoke("GetPackagesEx3", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPackageNumbers});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackagesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers) {
            this.GetPackagesEx3Async(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, sFullText, sFullTextType, sContentType, sPackageNumbers, null);
        }
        
        /// <remarks/>
        public void GetPackagesEx3Async(
                    string sWebSessionId, 
                    string sStartDate, 
                    string sEndDate, 
                    short iVenueID, 
                    short iModeOfSale, 
                    int iBusinessUnit, 
                    string sSortString, 
                    string sKeywords, 
                    string cKeywordAndOrStatement, 
                    string sArtistLastName, 
                    int iSeason, 
                    int iPackageType, 
                    bool bMatchAllPerformances, 
                    string sFullText, 
                    string sFullTextType, 
                    string sContentType, 
                    string sPackageNumbers, 
                    object userState) {
            if ((this.GetPackagesEx3OperationCompleted == null)) {
                this.GetPackagesEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackagesEx3OperationCompleted);
            }
            this.InvokeAsync("GetPackagesEx3", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances,
                        sFullText,
                        sFullTextType,
                        sContentType,
                        sPackageNumbers}, this.GetPackagesEx3OperationCompleted, userState);
        }
        
        private void OnGetPackagesEx3OperationCompleted(object arg) {
            if ((this.GetPackagesEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackagesEx3Completed(this, new GetPackagesEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetailEx(int iPerf_no, short iModeOfSale, string sContentType) {
            object[] results = this.Invoke("GetPerformanceDetailEx", new object[] {
                        iPerf_no,
                        iModeOfSale,
                        sContentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailExAsync(int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailExAsync(iPerf_no, iModeOfSale, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailExAsync(int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.GetPerformanceDetailExOperationCompleted == null)) {
                this.GetPerformanceDetailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailExOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailEx", new object[] {
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.GetPerformanceDetailExOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailExOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailExCompleted(this, new GetPerformanceDetailExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetailWithDiscountingEx(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            object[] results = this.Invoke("GetPerformanceDetailWithDiscountingEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingExAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingExAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.GetPerformanceDetailWithDiscountingExOperationCompleted == null)) {
                this.GetPerformanceDetailWithDiscountingExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingExOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailWithDiscountingEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.GetPerformanceDetailWithDiscountingExOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailWithDiscountingExOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailWithDiscountingExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailWithDiscountingExCompleted(this, new GetPerformanceDetailWithDiscountingExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetContactOptions", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactOptions(string sSessionKey, string sRestrictionType) {
            object[] results = this.Invoke("GetContactOptions", new object[] {
                        sSessionKey,
                        sRestrictionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactOptionsAsync(string sSessionKey, string sRestrictionType) {
            this.GetContactOptionsAsync(sSessionKey, sRestrictionType, null);
        }
        
        /// <remarks/>
        public void GetContactOptionsAsync(string sSessionKey, string sRestrictionType, object userState) {
            if ((this.GetContactOptionsOperationCompleted == null)) {
                this.GetContactOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactOptionsOperationCompleted);
            }
            this.InvokeAsync("GetContactOptions", new object[] {
                        sSessionKey,
                        sRestrictionType}, this.GetContactOptionsOperationCompleted, userState);
        }
        
        private void OnGetContactOptionsOperationCompleted(object arg) {
            if ((this.GetContactOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactOptionsCompleted(this, new GetContactOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetMailPurposes", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMailPurposes(string sSessionKey, string sPurposeType) {
            object[] results = this.Invoke("GetMailPurposes", new object[] {
                        sSessionKey,
                        sPurposeType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailPurposesAsync(string sSessionKey, string sPurposeType) {
            this.GetMailPurposesAsync(sSessionKey, sPurposeType, null);
        }
        
        /// <remarks/>
        public void GetMailPurposesAsync(string sSessionKey, string sPurposeType, object userState) {
            if ((this.GetMailPurposesOperationCompleted == null)) {
                this.GetMailPurposesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailPurposesOperationCompleted);
            }
            this.InvokeAsync("GetMailPurposes", new object[] {
                        sSessionKey,
                        sPurposeType}, this.GetMailPurposesOperationCompleted, userState);
        }
        
        private void OnGetMailPurposesOperationCompleted(object arg) {
            if ((this.GetMailPurposesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailPurposesCompleted(this, new GetMailPurposesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateGiftAidDeclaration", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGiftAidDeclaration(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew) {
            this.Invoke("UpdateGiftAidDeclaration", new object[] {
                        sSessionKey,
                        sNotes,
                        iGiftaidType,
                        iN1N2Ind,
                        iContactMethod,
                        iIneligibleReason,
                        iDocumentStatus,
                        dStartDate,
                        dEndDate,
                        cEligibleInd,
                        cCreateNew});
        }
        
        /// <remarks/>
        public void UpdateGiftAidDeclarationAsync(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew) {
            this.UpdateGiftAidDeclarationAsync(sSessionKey, sNotes, iGiftaidType, iN1N2Ind, iContactMethod, iIneligibleReason, iDocumentStatus, dStartDate, dEndDate, cEligibleInd, cCreateNew, null);
        }
        
        /// <remarks/>
        public void UpdateGiftAidDeclarationAsync(string sSessionKey, string sNotes, int iGiftaidType, int iN1N2Ind, int iContactMethod, int iIneligibleReason, int iDocumentStatus, System.DateTime dStartDate, System.DateTime dEndDate, char cEligibleInd, char cCreateNew, object userState) {
            if ((this.UpdateGiftAidDeclarationOperationCompleted == null)) {
                this.UpdateGiftAidDeclarationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGiftAidDeclarationOperationCompleted);
            }
            this.InvokeAsync("UpdateGiftAidDeclaration", new object[] {
                        sSessionKey,
                        sNotes,
                        iGiftaidType,
                        iN1N2Ind,
                        iContactMethod,
                        iIneligibleReason,
                        iDocumentStatus,
                        dStartDate,
                        dEndDate,
                        cEligibleInd,
                        cCreateNew}, this.UpdateGiftAidDeclarationOperationCompleted, userState);
        }
        
        private void OnUpdateGiftAidDeclarationOperationCompleted(object arg) {
            if ((this.UpdateGiftAidDeclarationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGiftAidDeclarationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetBillingSchedules", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBillingSchedules(string sSessionKey) {
            object[] results = this.Invoke("GetBillingSchedules", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingSchedulesAsync(string sSessionKey) {
            this.GetBillingSchedulesAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetBillingSchedulesAsync(string sSessionKey, object userState) {
            if ((this.GetBillingSchedulesOperationCompleted == null)) {
                this.GetBillingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetBillingSchedules", new object[] {
                        sSessionKey}, this.GetBillingSchedulesOperationCompleted, userState);
        }
        
        private void OnGetBillingSchedulesOperationCompleted(object arg) {
            if ((this.GetBillingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingSchedulesCompleted(this, new GetBillingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackageDetailEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            object[] results = this.Invoke("GetPackageDetailEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetPackageDetailExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        /// <remarks/>
        public void GetPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.GetPackageDetailExOperationCompleted == null)) {
                this.GetPackageDetailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailExOperationCompleted);
            }
            this.InvokeAsync("GetPackageDetailEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.GetPackageDetailExOperationCompleted, userState);
        }
        
        private void OnGetPackageDetailExOperationCompleted(object arg) {
            if ((this.GetPackageDetailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageDetailExCompleted(this, new GetPackageDetailExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackageDetailWithDiscountingEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageDetailWithDiscountingEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            object[] results = this.Invoke("GetPackageDetailWithDiscountingEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageDetailWithDiscountingExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetPackageDetailWithDiscountingExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        /// <remarks/>
        public void GetPackageDetailWithDiscountingExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.GetPackageDetailWithDiscountingExOperationCompleted == null)) {
                this.GetPackageDetailWithDiscountingExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailWithDiscountingExOperationCompleted);
            }
            this.InvokeAsync("GetPackageDetailWithDiscountingEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.GetPackageDetailWithDiscountingExOperationCompleted, userState);
        }
        
        private void OnGetPackageDetailWithDiscountingExOperationCompleted(object arg) {
            if ((this.GetPackageDetailWithDiscountingExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageDetailWithDiscountingExCompleted(this, new GetPackageDetailWithDiscountingExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetNFSPackageDetailEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNFSPackageDetailEx(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            object[] results = this.Invoke("GetNFSPackageDetailEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNFSPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes) {
            this.GetNFSPackageDetailExAsync(SessionKey, PackageID, ModeOfSale, sContentTypes, sPerformanceContentTypes, null);
        }
        
        /// <remarks/>
        public void GetNFSPackageDetailExAsync(string SessionKey, int PackageID, int ModeOfSale, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.GetNFSPackageDetailExOperationCompleted == null)) {
                this.GetNFSPackageDetailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNFSPackageDetailExOperationCompleted);
            }
            this.InvokeAsync("GetNFSPackageDetailEx", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale,
                        sContentTypes,
                        sPerformanceContentTypes}, this.GetNFSPackageDetailExOperationCompleted, userState);
        }
        
        private void OnGetNFSPackageDetailExOperationCompleted(object arg) {
            if ((this.GetNFSPackageDetailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNFSPackageDetailExCompleted(this, new GetNFSPackageDetailExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ClearCart", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearCart(string sSessionKey, int iOrderNumber) {
            this.Invoke("ClearCart", new object[] {
                        sSessionKey,
                        iOrderNumber});
        }
        
        /// <remarks/>
        public void ClearCartAsync(string sSessionKey, int iOrderNumber) {
            this.ClearCartAsync(sSessionKey, iOrderNumber, null);
        }
        
        /// <remarks/>
        public void ClearCartAsync(string sSessionKey, int iOrderNumber, object userState) {
            if ((this.ClearCartOperationCompleted == null)) {
                this.ClearCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCartOperationCompleted);
            }
            this.InvokeAsync("ClearCart", new object[] {
                        sSessionKey,
                        iOrderNumber}, this.ClearCartOperationCompleted, userState);
        }
        
        private void OnClearCartOperationCompleted(object arg) {
            if ((this.ClearCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSubLineItems", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSubLineItems(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus) {
            object[] results = this.Invoke("GetSubLineItems", new object[] {
                        SessionKey,
                        dStartDate,
                        dEndDate,
                        sSeasonNo,
                        sPerfNo,
                        sProdSeason,
                        sPackageNo,
                        sSublineitemStatus});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubLineItemsAsync(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus) {
            this.GetSubLineItemsAsync(SessionKey, dStartDate, dEndDate, sSeasonNo, sPerfNo, sProdSeason, sPackageNo, sSublineitemStatus, null);
        }
        
        /// <remarks/>
        public void GetSubLineItemsAsync(string SessionKey, System.DateTime dStartDate, System.DateTime dEndDate, string sSeasonNo, string sPerfNo, string sProdSeason, string sPackageNo, string sSublineitemStatus, object userState) {
            if ((this.GetSubLineItemsOperationCompleted == null)) {
                this.GetSubLineItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubLineItemsOperationCompleted);
            }
            this.InvokeAsync("GetSubLineItems", new object[] {
                        SessionKey,
                        dStartDate,
                        dEndDate,
                        sSeasonNo,
                        sPerfNo,
                        sProdSeason,
                        sPackageNo,
                        sSublineitemStatus}, this.GetSubLineItemsOperationCompleted, userState);
        }
        
        private void OnGetSubLineItemsOperationCompleted(object arg) {
            if ((this.GetSubLineItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubLineItemsCompleted(this, new GetSubLineItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ApplyOnAccount", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplyOnAccount(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount) {
            object[] results = this.Invoke("ApplyOnAccount", new object[] {
                        sSessionKey,
                        cAction,
                        iPaymentNo,
                        iPaymentMethod,
                        dPaymentAmount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyOnAccountAsync(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount) {
            this.ApplyOnAccountAsync(sSessionKey, cAction, iPaymentNo, iPaymentMethod, dPaymentAmount, null);
        }
        
        /// <remarks/>
        public void ApplyOnAccountAsync(string sSessionKey, char cAction, int iPaymentNo, int iPaymentMethod, decimal dPaymentAmount, object userState) {
            if ((this.ApplyOnAccountOperationCompleted == null)) {
                this.ApplyOnAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOnAccountOperationCompleted);
            }
            this.InvokeAsync("ApplyOnAccount", new object[] {
                        sSessionKey,
                        cAction,
                        iPaymentNo,
                        iPaymentMethod,
                        dPaymentAmount}, this.ApplyOnAccountOperationCompleted, userState);
        }
        
        private void OnApplyOnAccountOperationCompleted(object arg) {
            if ((this.ApplyOnAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyOnAccountCompleted(this, new ApplyOnAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOnAccountInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOnAccountInfo(string sSessionKey, string sPaymentMethods) {
            object[] results = this.Invoke("GetOnAccountInfo", new object[] {
                        sSessionKey,
                        sPaymentMethods});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOnAccountInfoAsync(string sSessionKey, string sPaymentMethods) {
            this.GetOnAccountInfoAsync(sSessionKey, sPaymentMethods, null);
        }
        
        /// <remarks/>
        public void GetOnAccountInfoAsync(string sSessionKey, string sPaymentMethods, object userState) {
            if ((this.GetOnAccountInfoOperationCompleted == null)) {
                this.GetOnAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetOnAccountInfo", new object[] {
                        sSessionKey,
                        sPaymentMethods}, this.GetOnAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetOnAccountInfoOperationCompleted(object arg) {
            if ((this.GetOnAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnAccountInfoCompleted(this, new GetOnAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ApplyDiscount", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApplyDiscount(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly) {
            object[] results = this.Invoke("ApplyDiscount", new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        iDiscountNumber,
                        cVerifyOnly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyDiscountAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly) {
            this.ApplyDiscountAsync(sSessionKey, iLineItemNumber, sSubLineItemNumber, iDiscountNumber, cVerifyOnly, null);
        }
        
        /// <remarks/>
        public void ApplyDiscountAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, int iDiscountNumber, char cVerifyOnly, object userState) {
            if ((this.ApplyDiscountOperationCompleted == null)) {
                this.ApplyDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyDiscountOperationCompleted);
            }
            this.InvokeAsync("ApplyDiscount", new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        iDiscountNumber,
                        cVerifyOnly}, this.ApplyDiscountOperationCompleted, userState);
        }
        
        private void OnApplyDiscountOperationCompleted(object arg) {
            if ((this.ApplyDiscountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyDiscountCompleted(this, new ApplyDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateSubLineItemPrice", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateSubLineItemPrice(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly) {
            object[] results = this.Invoke("UpdateSubLineItemPrice", new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        dNewPrice,
                        cVerifyOnly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSubLineItemPriceAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly) {
            this.UpdateSubLineItemPriceAsync(sSessionKey, iLineItemNumber, sSubLineItemNumber, dNewPrice, cVerifyOnly, null);
        }
        
        /// <remarks/>
        public void UpdateSubLineItemPriceAsync(string sSessionKey, int iLineItemNumber, string sSubLineItemNumber, decimal dNewPrice, char cVerifyOnly, object userState) {
            if ((this.UpdateSubLineItemPriceOperationCompleted == null)) {
                this.UpdateSubLineItemPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSubLineItemPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateSubLineItemPrice", new object[] {
                        sSessionKey,
                        iLineItemNumber,
                        sSubLineItemNumber,
                        dNewPrice,
                        cVerifyOnly}, this.UpdateSubLineItemPriceOperationCompleted, userState);
        }
        
        private void OnUpdateSubLineItemPriceOperationCompleted(object arg) {
            if ((this.UpdateSubLineItemPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSubLineItemPriceCompleted(this, new UpdateSubLineItemPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAddressEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateAddressEx(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes) {
            object[] results = this.Invoke("UpdateAddressEx", new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange,
                        sMailPurposes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAddressExAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes) {
            this.UpdateAddressExAsync(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, sMailPurposes, null);
        }
        
        /// <remarks/>
        public void UpdateAddressExAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    string sMailPurposes, 
                    object userState) {
            if ((this.UpdateAddressExOperationCompleted == null)) {
                this.UpdateAddressExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAddressExOperationCompleted);
            }
            this.InvokeAsync("UpdateAddressEx", new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange,
                        sMailPurposes}, this.UpdateAddressExOperationCompleted, userState);
        }
        
        private void OnUpdateAddressExOperationCompleted(object arg) {
            if ((this.UpdateAddressExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAddressExCompleted(this, new UpdateAddressExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionDetailEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionDetailEx2(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes) {
            object[] results = this.Invoke("GetProductionDetailEx2", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionDetailEx2Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes) {
            this.GetProductionDetailEx2Async(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, sContentTypes, sPerformanceContentTypes, null);
        }
        
        /// <remarks/>
        public void GetProductionDetailEx2Async(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, string sContentTypes, string sPerformanceContentTypes, object userState) {
            if ((this.GetProductionDetailEx2OperationCompleted == null)) {
                this.GetProductionDetailEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailEx2OperationCompleted);
            }
            this.InvokeAsync("GetProductionDetailEx2", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit,
                        sContentTypes,
                        sPerformanceContentTypes}, this.GetProductionDetailEx2OperationCompleted, userState);
        }
        
        private void OnGetProductionDetailEx2OperationCompleted(object arg) {
            if ((this.GetProductionDetailEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionDetailEx2Completed(this, new GetProductionDetailEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetDefaults", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefaults(string sOrganizationName) {
            object[] results = this.Invoke("GetDefaults", new object[] {
                        sOrganizationName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultsAsync(string sOrganizationName) {
            this.GetDefaultsAsync(sOrganizationName, null);
        }
        
        /// <remarks/>
        public void GetDefaultsAsync(string sOrganizationName, object userState) {
            if ((this.GetDefaultsOperationCompleted == null)) {
                this.GetDefaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultsOperationCompleted);
            }
            this.InvokeAsync("GetDefaults", new object[] {
                        sOrganizationName}, this.GetDefaultsOperationCompleted, userState);
        }
        
        private void OnGetDefaultsOperationCompleted(object arg) {
            if ((this.GetDefaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultsCompleted(this, new GetDefaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RequestReprint", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RequestReprint(string sSessionKey, int iOrderNumber, int iEAddressNumber) {
            object[] results = this.Invoke("RequestReprint", new object[] {
                        sSessionKey,
                        iOrderNumber,
                        iEAddressNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RequestReprintAsync(string sSessionKey, int iOrderNumber, int iEAddressNumber) {
            this.RequestReprintAsync(sSessionKey, iOrderNumber, iEAddressNumber, null);
        }
        
        /// <remarks/>
        public void RequestReprintAsync(string sSessionKey, int iOrderNumber, int iEAddressNumber, object userState) {
            if ((this.RequestReprintOperationCompleted == null)) {
                this.RequestReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestReprintOperationCompleted);
            }
            this.InvokeAsync("RequestReprint", new object[] {
                        sSessionKey,
                        iOrderNumber,
                        iEAddressNumber}, this.RequestReprintOperationCompleted, userState);
        }
        
        private void OnRequestReprintOperationCompleted(object arg) {
            if ((this.RequestReprintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestReprintCompleted(this, new RequestReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailWithDiscountingSYOS", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PerformanceEx GetPerformanceDetailWithDiscountingSYOS(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            object[] results = this.Invoke("GetPerformanceDetailWithDiscountingSYOS", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType});
            return ((PerformanceEx)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType) {
            this.GetPerformanceDetailWithDiscountingSYOSAsync(SessionKey, iPerf_no, iModeOfSale, sContentType, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, string sContentType, object userState) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSOperationCompleted == null)) {
                this.GetPerformanceDetailWithDiscountingSYOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingSYOSOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailWithDiscountingSYOS", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale,
                        sContentType}, this.GetPerformanceDetailWithDiscountingSYOSOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailWithDiscountingSYOSOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailWithDiscountingSYOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailWithDiscountingSYOSCompleted(this, new GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeats", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeats(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            object[] results = this.Invoke("GetSeats", new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats) {
            this.GetSeatsAsync(sSessionKey, iPackageNumber, iPerformanceNumber, sZoneList, sSectionList, sScreenList, cSummaryOnly, cCalcPackageAlloc, sCheckPriceTypes, cReturnNonSeats, null);
        }
        
        /// <remarks/>
        public void GetSeatsAsync(string sSessionKey, int iPackageNumber, int iPerformanceNumber, string sZoneList, string sSectionList, string sScreenList, char cSummaryOnly, char cCalcPackageAlloc, string sCheckPriceTypes, char cReturnNonSeats, object userState) {
            if ((this.GetSeatsOperationCompleted == null)) {
                this.GetSeatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsOperationCompleted);
            }
            this.InvokeAsync("GetSeats", new object[] {
                        sSessionKey,
                        iPackageNumber,
                        iPerformanceNumber,
                        sZoneList,
                        sSectionList,
                        sScreenList,
                        cSummaryOnly,
                        cCalcPackageAlloc,
                        sCheckPriceTypes,
                        cReturnNonSeats}, this.GetSeatsOperationCompleted, userState);
        }
        
        private void OnGetSeatsOperationCompleted(object arg) {
            if ((this.GetSeatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsCompleted(this, new GetSeatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemovePackageItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePackageItem(string SessionKey, int PackageNumber, int PackageLineItemID) {
            this.Invoke("RemovePackageItem", new object[] {
                        SessionKey,
                        PackageNumber,
                        PackageLineItemID});
        }
        
        /// <remarks/>
        public void RemovePackageItemAsync(string SessionKey, int PackageNumber, int PackageLineItemID) {
            this.RemovePackageItemAsync(SessionKey, PackageNumber, PackageLineItemID, null);
        }
        
        /// <remarks/>
        public void RemovePackageItemAsync(string SessionKey, int PackageNumber, int PackageLineItemID, object userState) {
            if ((this.RemovePackageItemOperationCompleted == null)) {
                this.RemovePackageItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePackageItemOperationCompleted);
            }
            this.InvokeAsync("RemovePackageItem", new object[] {
                        SessionKey,
                        PackageNumber,
                        PackageLineItemID}, this.RemovePackageItemOperationCompleted, userState);
        }
        
        private void OnRemovePackageItemOperationCompleted(object arg) {
            if ((this.RemovePackageItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackageItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageItem(string SessionKey, int PackageLineItemID) {
            object[] results = this.Invoke("GetPackageItem", new object[] {
                        SessionKey,
                        PackageLineItemID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageItemAsync(string SessionKey, int PackageLineItemID) {
            this.GetPackageItemAsync(SessionKey, PackageLineItemID, null);
        }
        
        /// <remarks/>
        public void GetPackageItemAsync(string SessionKey, int PackageLineItemID, object userState) {
            if ((this.GetPackageItemOperationCompleted == null)) {
                this.GetPackageItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageItemOperationCompleted);
            }
            this.InvokeAsync("GetPackageItem", new object[] {
                        SessionKey,
                        PackageLineItemID}, this.GetPackageItemOperationCompleted, userState);
        }
        
        private void OnGetPackageItemOperationCompleted(object arg) {
            if ((this.GetPackageItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageItemCompleted(this, new GetPackageItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddOrderComments", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderComments(string SessionKey, string Comment, int LineItemID) {
            this.Invoke("AddOrderComments", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID});
        }
        
        /// <remarks/>
        public void AddOrderCommentsAsync(string SessionKey, string Comment, int LineItemID) {
            this.AddOrderCommentsAsync(SessionKey, Comment, LineItemID, null);
        }
        
        /// <remarks/>
        public void AddOrderCommentsAsync(string SessionKey, string Comment, int LineItemID, object userState) {
            if ((this.AddOrderCommentsOperationCompleted == null)) {
                this.AddOrderCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsOperationCompleted);
            }
            this.InvokeAsync("AddOrderComments", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID}, this.AddOrderCommentsOperationCompleted, userState);
        }
        
        private void OnAddOrderCommentsOperationCompleted(object arg) {
            if ((this.AddOrderCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveOrderComments", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveOrderComments(string SessionKey, int LineItemID) {
            this.Invoke("RemoveOrderComments", new object[] {
                        SessionKey,
                        LineItemID});
        }
        
        /// <remarks/>
        public void RemoveOrderCommentsAsync(string SessionKey, int LineItemID) {
            this.RemoveOrderCommentsAsync(SessionKey, LineItemID, null);
        }
        
        /// <remarks/>
        public void RemoveOrderCommentsAsync(string SessionKey, int LineItemID, object userState) {
            if ((this.RemoveOrderCommentsOperationCompleted == null)) {
                this.RemoveOrderCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOrderCommentsOperationCompleted);
            }
            this.InvokeAsync("RemoveOrderComments", new object[] {
                        SessionKey,
                        LineItemID}, this.RemoveOrderCommentsOperationCompleted, userState);
        }
        
        private void OnRemoveOrderCommentsOperationCompleted(object arg) {
            if ((this.RemoveOrderCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOrderCommentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CheckoutStatusHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/CheckoutEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckoutEx(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear) {
            this.Invoke("CheckoutEx", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear});
        }
        
        /// <remarks/>
        public void CheckoutExAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear) {
            this.CheckoutExAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, dAmount, bAllowUnderPayment, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, null);
        }
        
        /// <remarks/>
        public void CheckoutExAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, decimal dAmount, bool bAllowUnderPayment, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, object userState) {
            if ((this.CheckoutExOperationCompleted == null)) {
                this.CheckoutExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckoutExOperationCompleted);
            }
            this.InvokeAsync("CheckoutEx", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        dAmount,
                        bAllowUnderPayment,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear}, this.CheckoutExOperationCompleted, userState);
        }
        
        private void OnCheckoutExOperationCompleted(object arg) {
            if ((this.CheckoutExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckoutExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetModeOfSaleRules", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModeOfSaleRules(string SessionKey) {
            object[] results = this.Invoke("GetModeOfSaleRules", new object[] {
                        SessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetModeOfSaleRulesAsync(string SessionKey) {
            this.GetModeOfSaleRulesAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void GetModeOfSaleRulesAsync(string SessionKey, object userState) {
            if ((this.GetModeOfSaleRulesOperationCompleted == null)) {
                this.GetModeOfSaleRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModeOfSaleRulesOperationCompleted);
            }
            this.InvokeAsync("GetModeOfSaleRules", new object[] {
                        SessionKey}, this.GetModeOfSaleRulesOperationCompleted, userState);
        }
        
        private void OnGetModeOfSaleRulesOperationCompleted(object arg) {
            if ((this.GetModeOfSaleRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModeOfSaleRulesCompleted(this, new GetModeOfSaleRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/PurchaseGiftCertificate", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PurchaseGiftCertificate(string SessionKey, decimal Amount, int PaymentMethod) {
            object[] results = this.Invoke("PurchaseGiftCertificate", new object[] {
                        SessionKey,
                        Amount,
                        PaymentMethod});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseGiftCertificateAsync(string SessionKey, decimal Amount, int PaymentMethod) {
            this.PurchaseGiftCertificateAsync(SessionKey, Amount, PaymentMethod, null);
        }
        
        /// <remarks/>
        public void PurchaseGiftCertificateAsync(string SessionKey, decimal Amount, int PaymentMethod, object userState) {
            if ((this.PurchaseGiftCertificateOperationCompleted == null)) {
                this.PurchaseGiftCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseGiftCertificateOperationCompleted);
            }
            this.InvokeAsync("PurchaseGiftCertificate", new object[] {
                        SessionKey,
                        Amount,
                        PaymentMethod}, this.PurchaseGiftCertificateOperationCompleted, userState);
        }
        
        private void OnPurchaseGiftCertificateOperationCompleted(object arg) {
            if ((this.PurchaseGiftCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseGiftCertificateCompleted(this, new PurchaseGiftCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ApplyGiftCertificate", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplyGiftCertificate(string SessionKey, string RedemptionCode, decimal Amount) {
            this.Invoke("ApplyGiftCertificate", new object[] {
                        SessionKey,
                        RedemptionCode,
                        Amount});
        }
        
        /// <remarks/>
        public void ApplyGiftCertificateAsync(string SessionKey, string RedemptionCode, decimal Amount) {
            this.ApplyGiftCertificateAsync(SessionKey, RedemptionCode, Amount, null);
        }
        
        /// <remarks/>
        public void ApplyGiftCertificateAsync(string SessionKey, string RedemptionCode, decimal Amount, object userState) {
            if ((this.ApplyGiftCertificateOperationCompleted == null)) {
                this.ApplyGiftCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyGiftCertificateOperationCompleted);
            }
            this.InvokeAsync("ApplyGiftCertificate", new object[] {
                        SessionKey,
                        RedemptionCode,
                        Amount}, this.ApplyGiftCertificateOperationCompleted, userState);
        }
        
        private void OnApplyGiftCertificateOperationCompleted(object arg) {
            if ((this.ApplyGiftCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyGiftCertificateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveGiftCertificate", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveGiftCertificate(string sWebSessionId, string sGiftCertificatId) {
            this.Invoke("RemoveGiftCertificate", new object[] {
                        sWebSessionId,
                        sGiftCertificatId});
        }
        
        /// <remarks/>
        public void RemoveGiftCertificateAsync(string sWebSessionId, string sGiftCertificatId) {
            this.RemoveGiftCertificateAsync(sWebSessionId, sGiftCertificatId, null);
        }
        
        /// <remarks/>
        public void RemoveGiftCertificateAsync(string sWebSessionId, string sGiftCertificatId, object userState) {
            if ((this.RemoveGiftCertificateOperationCompleted == null)) {
                this.RemoveGiftCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGiftCertificateOperationCompleted);
            }
            this.InvokeAsync("RemoveGiftCertificate", new object[] {
                        sWebSessionId,
                        sGiftCertificatId}, this.RemoveGiftCertificateOperationCompleted, userState);
        }
        
        private void OnRemoveGiftCertificateOperationCompleted(object arg) {
            if ((this.RemoveGiftCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGiftCertificateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddPaymentPlanInstallment", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AddPaymentPlanInstallment(string SessionKey, decimal Amount, System.DateTime DueDate) {
            object[] results = this.Invoke("AddPaymentPlanInstallment", new object[] {
                        SessionKey,
                        Amount,
                        DueDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentPlanInstallmentAsync(string SessionKey, decimal Amount, System.DateTime DueDate) {
            this.AddPaymentPlanInstallmentAsync(SessionKey, Amount, DueDate, null);
        }
        
        /// <remarks/>
        public void AddPaymentPlanInstallmentAsync(string SessionKey, decimal Amount, System.DateTime DueDate, object userState) {
            if ((this.AddPaymentPlanInstallmentOperationCompleted == null)) {
                this.AddPaymentPlanInstallmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentPlanInstallmentOperationCompleted);
            }
            this.InvokeAsync("AddPaymentPlanInstallment", new object[] {
                        SessionKey,
                        Amount,
                        DueDate}, this.AddPaymentPlanInstallmentOperationCompleted, userState);
        }
        
        private void OnAddPaymentPlanInstallmentOperationCompleted(object arg) {
            if ((this.AddPaymentPlanInstallmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentPlanInstallmentCompleted(this, new AddPaymentPlanInstallmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemovePaymentPlan", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePaymentPlan(string SessionKey) {
            this.Invoke("RemovePaymentPlan", new object[] {
                        SessionKey});
        }
        
        /// <remarks/>
        public void RemovePaymentPlanAsync(string SessionKey) {
            this.RemovePaymentPlanAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void RemovePaymentPlanAsync(string SessionKey, object userState) {
            if ((this.RemovePaymentPlanOperationCompleted == null)) {
                this.RemovePaymentPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePaymentPlanOperationCompleted);
            }
            this.InvokeAsync("RemovePaymentPlan", new object[] {
                        SessionKey}, this.RemovePaymentPlanOperationCompleted, userState);
        }
        
        private void OnRemovePaymentPlanOperationCompleted(object arg) {
            if ((this.RemovePaymentPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePaymentPlanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/FinalizePaymentPlan", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FinalizePaymentPlan(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType) {
            object[] results = this.Invoke("FinalizePaymentPlan", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        iBillingType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FinalizePaymentPlanAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType) {
            this.FinalizePaymentPlanAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, sCardAuthenticationCode, iCCIssueNumber, iCCStartMonth, iCCStartYear, iBillingType, null);
        }
        
        /// <remarks/>
        public void FinalizePaymentPlanAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, string sCardAuthenticationCode, int iCCIssueNumber, int iCCStartMonth, int iCCStartYear, int iBillingType, object userState) {
            if ((this.FinalizePaymentPlanOperationCompleted == null)) {
                this.FinalizePaymentPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizePaymentPlanOperationCompleted);
            }
            this.InvokeAsync("FinalizePaymentPlan", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear,
                        sCardAuthenticationCode,
                        iCCIssueNumber,
                        iCCStartMonth,
                        iCCStartYear,
                        iBillingType}, this.FinalizePaymentPlanOperationCompleted, userState);
        }
        
        private void OnFinalizePaymentPlanOperationCompleted(object arg) {
            if ((this.FinalizePaymentPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizePaymentPlanCompleted(this, new FinalizePaymentPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidatePaymentPlan", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidatePaymentPlan(string SessionKey) {
            object[] results = this.Invoke("ValidatePaymentPlan", new object[] {
                        SessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePaymentPlanAsync(string SessionKey) {
            this.ValidatePaymentPlanAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void ValidatePaymentPlanAsync(string SessionKey, object userState) {
            if ((this.ValidatePaymentPlanOperationCompleted == null)) {
                this.ValidatePaymentPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePaymentPlanOperationCompleted);
            }
            this.InvokeAsync("ValidatePaymentPlan", new object[] {
                        SessionKey}, this.ValidatePaymentPlanOperationCompleted, userState);
        }
        
        private void OnValidatePaymentPlanOperationCompleted(object arg) {
            if ((this.ValidatePaymentPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePaymentPlanCompleted(this, new ValidatePaymentPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetConstituentInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConstituentInfo(string SessionKey) {
            object[] results = this.Invoke("GetConstituentInfo", new object[] {
                        SessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstituentInfoAsync(string SessionKey) {
            this.GetConstituentInfoAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void GetConstituentInfoAsync(string SessionKey, object userState) {
            if ((this.GetConstituentInfoOperationCompleted == null)) {
                this.GetConstituentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstituentInfoOperationCompleted);
            }
            this.InvokeAsync("GetConstituentInfo", new object[] {
                        SessionKey}, this.GetConstituentInfoOperationCompleted, userState);
        }
        
        private void OnGetConstituentInfoOperationCompleted(object arg) {
            if ((this.GetConstituentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstituentInfoCompleted(this, new GetConstituentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailWithDiscounting", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetailWithDiscounting(string SessionKey, int iPerf_no, short iModeOfSale) {
            object[] results = this.Invoke("GetPerformanceDetailWithDiscounting", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailWithDiscountingAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailWithDiscountingAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.GetPerformanceDetailWithDiscountingOperationCompleted == null)) {
                this.GetPerformanceDetailWithDiscountingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailWithDiscountingOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailWithDiscounting", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.GetPerformanceDetailWithDiscountingOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailWithDiscountingOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailWithDiscountingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailWithDiscountingCompleted(this, new GetPerformanceDetailWithDiscountingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackageDetailWithDiscounting", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageDetailWithDiscounting(string SessionKey, int PackageID, int ModeOfSale) {
            object[] results = this.Invoke("GetPackageDetailWithDiscounting", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageDetailWithDiscountingAsync(string SessionKey, int PackageID, int ModeOfSale) {
            this.GetPackageDetailWithDiscountingAsync(SessionKey, PackageID, ModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPackageDetailWithDiscountingAsync(string SessionKey, int PackageID, int ModeOfSale, object userState) {
            if ((this.GetPackageDetailWithDiscountingOperationCompleted == null)) {
                this.GetPackageDetailWithDiscountingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailWithDiscountingOperationCompleted);
            }
            this.InvokeAsync("GetPackageDetailWithDiscounting", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale}, this.GetPackageDetailWithDiscountingOperationCompleted, userState);
        }
        
        private void OnGetPackageDetailWithDiscountingOperationCompleted(object arg) {
            if ((this.GetPackageDetailWithDiscountingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageDetailWithDiscountingCompleted(this, new GetPackageDetailWithDiscountingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAccountInfoEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccountInfoEx(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator) {
            this.Invoke("UpdateAccountInfoEx", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator});
        }
        
        /// <remarks/>
        public void UpdateAccountInfoExAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator) {
            this.UpdateAccountInfoExAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, null);
        }
        
        /// <remarks/>
        public void UpdateAccountInfoExAsync(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    object userState) {
            if ((this.UpdateAccountInfoExOperationCompleted == null)) {
                this.UpdateAccountInfoExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoExOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountInfoEx", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator}, this.UpdateAccountInfoExOperationCompleted, userState);
        }
        
        private void OnUpdateAccountInfoExOperationCompleted(object arg) {
            if ((this.UpdateAccountInfoExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountInfoExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/WebSeatServerListening", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WebSeatServerListening() {
            object[] results = this.Invoke("WebSeatServerListening", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WebSeatServerListeningAsync() {
            this.WebSeatServerListeningAsync(null);
        }
        
        /// <remarks/>
        public void WebSeatServerListeningAsync(object userState) {
            if ((this.WebSeatServerListeningOperationCompleted == null)) {
                this.WebSeatServerListeningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebSeatServerListeningOperationCompleted);
            }
            this.InvokeAsync("WebSeatServerListening", new object[0], this.WebSeatServerListeningOperationCompleted, userState);
        }
        
        private void OnWebSeatServerListeningOperationCompleted(object arg) {
            if ((this.WebSeatServerListeningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebSeatServerListeningCompleted(this, new WebSeatServerListeningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddPackageItemSeated", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPackageItemSeated(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            object[] results = this.Invoke("AddPackageItemSeated", new object[] {
                        SessionKey,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddPackageItemSeatedAsync(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.AddPackageItemSeatedAsync(SessionKey, PriceType, PackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, null);
        }
        
        /// <remarks/>
        public void AddPackageItemSeatedAsync(string SessionKey, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, object userState) {
            if ((this.AddPackageItemSeatedOperationCompleted == null)) {
                this.AddPackageItemSeatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPackageItemSeatedOperationCompleted);
            }
            this.InvokeAsync("AddPackageItemSeated", new object[] {
                        SessionKey,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats}, this.AddPackageItemSeatedOperationCompleted, userState);
        }
        
        private void OnAddPackageItemSeatedOperationCompleted(object arg) {
            if ((this.AddPackageItemSeatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPackageItemSeatedCompleted(this, new AddPackageItemSeatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReserveTicketsSpecifiedSeats", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveTicketsSpecifiedSeats(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats) {
            object[] results = this.Invoke("ReserveTicketsSpecifiedSeats", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests,
                        RequestedSeats});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveTicketsSpecifiedSeatsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats) {
            this.ReserveTicketsSpecifiedSeatsAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, RequestedSeats, null);
        }
        
        /// <remarks/>
        public void ReserveTicketsSpecifiedSeatsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, string RequestedSeats, object userState) {
            if ((this.ReserveTicketsSpecifiedSeatsOperationCompleted == null)) {
                this.ReserveTicketsSpecifiedSeatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveTicketsSpecifiedSeatsOperationCompleted);
            }
            this.InvokeAsync("ReserveTicketsSpecifiedSeats", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests,
                        RequestedSeats}, this.ReserveTicketsSpecifiedSeatsOperationCompleted, userState);
        }
        
        private void OnReserveTicketsSpecifiedSeatsOperationCompleted(object arg) {
            if ((this.ReserveTicketsSpecifiedSeatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveTicketsSpecifiedSeatsCompleted(this, new ReserveTicketsSpecifiedSeatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ForgotLogin", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ForgotLogin(string sSessionKey, string sEmail, int iLoginType) {
            this.Invoke("ForgotLogin", new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType});
        }
        
        /// <remarks/>
        public void ForgotLoginAsync(string sSessionKey, string sEmail, int iLoginType) {
            this.ForgotLoginAsync(sSessionKey, sEmail, iLoginType, null);
        }
        
        /// <remarks/>
        public void ForgotLoginAsync(string sSessionKey, string sEmail, int iLoginType, object userState) {
            if ((this.ForgotLoginOperationCompleted == null)) {
                this.ForgotLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotLoginOperationCompleted);
            }
            this.InvokeAsync("ForgotLogin", new object[] {
                        sSessionKey,
                        sEmail,
                        iLoginType}, this.ForgotLoginOperationCompleted, userState);
        }
        
        private void OnForgotLoginOperationCompleted(object arg) {
            if ((this.ForgotLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdatePriceType", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePriceType(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber) {
            this.Invoke("UpdatePriceType", new object[] {
                        sWebSessionId,
                        iOldPrice,
                        iNewPrice,
                        iLineItemNumber,
                        iSubLineItemNumber});
        }
        
        /// <remarks/>
        public void UpdatePriceTypeAsync(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber) {
            this.UpdatePriceTypeAsync(sWebSessionId, iOldPrice, iNewPrice, iLineItemNumber, iSubLineItemNumber, null);
        }
        
        /// <remarks/>
        public void UpdatePriceTypeAsync(string sWebSessionId, int iOldPrice, int iNewPrice, int iLineItemNumber, int iSubLineItemNumber, object userState) {
            if ((this.UpdatePriceTypeOperationCompleted == null)) {
                this.UpdatePriceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePriceTypeOperationCompleted);
            }
            this.InvokeAsync("UpdatePriceType", new object[] {
                        sWebSessionId,
                        iOldPrice,
                        iNewPrice,
                        iLineItemNumber,
                        iSubLineItemNumber}, this.UpdatePriceTypeOperationCompleted, userState);
        }
        
        private void OnUpdatePriceTypeOperationCompleted(object arg) {
            if ((this.UpdatePriceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePriceTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateCustomOffer", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateCustomOffer(string sWebSessionId, int iPoint) {
            object[] results = this.Invoke("ValidateCustomOffer", new object[] {
                        sWebSessionId,
                        iPoint});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCustomOfferAsync(string sWebSessionId, int iPoint) {
            this.ValidateCustomOfferAsync(sWebSessionId, iPoint, null);
        }
        
        /// <remarks/>
        public void ValidateCustomOfferAsync(string sWebSessionId, int iPoint, object userState) {
            if ((this.ValidateCustomOfferOperationCompleted == null)) {
                this.ValidateCustomOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCustomOfferOperationCompleted);
            }
            this.InvokeAsync("ValidateCustomOffer", new object[] {
                        sWebSessionId,
                        iPoint}, this.ValidateCustomOfferOperationCompleted, userState);
        }
        
        private void OnValidateCustomOfferOperationCompleted(object arg) {
            if ((this.ValidateCustomOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCustomOfferCompleted(this, new ValidateCustomOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetKeywordsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetKeywordsEx(string sWebSessionId, int iKeywordCategory, string sUsedIn) {
            object[] results = this.Invoke("GetKeywordsEx", new object[] {
                        sWebSessionId,
                        iKeywordCategory,
                        sUsedIn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeywordsExAsync(string sWebSessionId, int iKeywordCategory, string sUsedIn) {
            this.GetKeywordsExAsync(sWebSessionId, iKeywordCategory, sUsedIn, null);
        }
        
        /// <remarks/>
        public void GetKeywordsExAsync(string sWebSessionId, int iKeywordCategory, string sUsedIn, object userState) {
            if ((this.GetKeywordsExOperationCompleted == null)) {
                this.GetKeywordsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordsExOperationCompleted);
            }
            this.InvokeAsync("GetKeywordsEx", new object[] {
                        sWebSessionId,
                        iKeywordCategory,
                        sUsedIn}, this.GetKeywordsExOperationCompleted, userState);
        }
        
        private void OnGetKeywordsExOperationCompleted(object arg) {
            if ((this.GetKeywordsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordsExCompleted(this, new GetKeywordsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByScreen", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByScreen(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            object[] results = this.Invoke("GetSeatsByScreen", new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByScreenAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            this.GetSeatsByScreenAsync(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, null);
        }
        
        /// <remarks/>
        public void GetSeatsByScreenAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, object userState) {
            if ((this.GetSeatsByScreenOperationCompleted == null)) {
                this.GetSeatsByScreenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByScreenOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByScreen", new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos}, this.GetSeatsByScreenOperationCompleted, userState);
        }
        
        private void OnGetSeatsByScreenOperationCompleted(object arg) {
            if ((this.GetSeatsByScreenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByScreenCompleted(this, new GetSeatsByScreenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByScreenBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByScreenBrief(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            object[] results = this.Invoke("GetSeatsByScreenBrief", new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByScreenBriefAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos) {
            this.GetSeatsByScreenBriefAsync(sWebSessionId, iScreenNumber, iPerformanceNumber, iPackageNumber, iMos, null);
        }
        
        /// <remarks/>
        public void GetSeatsByScreenBriefAsync(string sWebSessionId, short iScreenNumber, int iPerformanceNumber, int iPackageNumber, short iMos, object userState) {
            if ((this.GetSeatsByScreenBriefOperationCompleted == null)) {
                this.GetSeatsByScreenBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByScreenBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByScreenBrief", new object[] {
                        sWebSessionId,
                        iScreenNumber,
                        iPerformanceNumber,
                        iPackageNumber,
                        iMos}, this.GetSeatsByScreenBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsByScreenBriefOperationCompleted(object arg) {
            if ((this.GetSeatsByScreenBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByScreenBriefCompleted(this, new GetSeatsByScreenBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatStatus", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatStatus() {
            object[] results = this.Invoke("GetSeatStatus", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatStatusAsync() {
            this.GetSeatStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetSeatStatusAsync(object userState) {
            if ((this.GetSeatStatusOperationCompleted == null)) {
                this.GetSeatStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatStatusOperationCompleted);
            }
            this.InvokeAsync("GetSeatStatus", new object[0], this.GetSeatStatusOperationCompleted, userState);
        }
        
        private void OnGetSeatStatusOperationCompleted(object arg) {
            if ((this.GetSeatStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatStatusCompleted(this, new GetSeatStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformancesEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformancesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName) {
            object[] results = this.Invoke("GetPerformancesEx", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName) {
            this.GetPerformancesExAsync(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, null);
        }
        
        /// <remarks/>
        public void GetPerformancesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, object userState) {
            if ((this.GetPerformancesExOperationCompleted == null)) {
                this.GetPerformancesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesExOperationCompleted);
            }
            this.InvokeAsync("GetPerformancesEx", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName}, this.GetPerformancesExOperationCompleted, userState);
        }
        
        private void OnGetPerformancesExOperationCompleted(object arg) {
            if ((this.GetPerformancesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesExCompleted(this, new GetPerformancesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackagesEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackagesEx(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances) {
            object[] results = this.Invoke("GetPackagesEx", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackagesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances) {
            this.GetPackagesExAsync(sWebSessionId, sStartDate, sEndDate, iVenueID, iModeOfSale, iBusinessUnit, sSortString, sKeywords, cKeywordAndOrStatement, sArtistLastName, iSeason, iPackageType, bMatchAllPerformances, null);
        }
        
        /// <remarks/>
        public void GetPackagesExAsync(string sWebSessionId, string sStartDate, string sEndDate, short iVenueID, short iModeOfSale, int iBusinessUnit, string sSortString, string sKeywords, string cKeywordAndOrStatement, string sArtistLastName, int iSeason, int iPackageType, bool bMatchAllPerformances, object userState) {
            if ((this.GetPackagesExOperationCompleted == null)) {
                this.GetPackagesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackagesExOperationCompleted);
            }
            this.InvokeAsync("GetPackagesEx", new object[] {
                        sWebSessionId,
                        sStartDate,
                        sEndDate,
                        iVenueID,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString,
                        sKeywords,
                        cKeywordAndOrStatement,
                        sArtistLastName,
                        iSeason,
                        iPackageType,
                        bMatchAllPerformances}, this.GetPackagesExOperationCompleted, userState);
        }
        
        private void OnGetPackagesExOperationCompleted(object arg) {
            if ((this.GetPackagesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackagesExCompleted(this, new GetPackagesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetConstituents", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConstituents(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress) {
            object[] results = this.Invoke("GetConstituents", new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConstituentsAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress) {
            this.GetConstituentsAsync(sWebSessionId, sCCNumber, sPhoneNumber, iCustomerServiceNumber, iOrderNumber, sEmailAddress, null);
        }
        
        /// <remarks/>
        public void GetConstituentsAsync(string sWebSessionId, string sCCNumber, string sPhoneNumber, int iCustomerServiceNumber, int iOrderNumber, string sEmailAddress, object userState) {
            if ((this.GetConstituentsOperationCompleted == null)) {
                this.GetConstituentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConstituentsOperationCompleted);
            }
            this.InvokeAsync("GetConstituents", new object[] {
                        sWebSessionId,
                        sCCNumber,
                        sPhoneNumber,
                        iCustomerServiceNumber,
                        iOrderNumber,
                        sEmailAddress}, this.GetConstituentsOperationCompleted, userState);
        }
        
        private void OnGetConstituentsOperationCompleted(object arg) {
            if ((this.GetConstituentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConstituentsCompleted(this, new GetConstituentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOrdersEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersEx(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod) {
            object[] results = this.Invoke("GetOrdersEx", new object[] {
                        sWebSessionId,
                        iOrderNumber,
                        sPhoneNumber,
                        cPrint,
                        dtStartDate,
                        dtEndDate,
                        iSeason,
                        iCustomerNumber,
                        iMos,
                        cRenewals,
                        iDeliveryMethod});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersExAsync(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod) {
            this.GetOrdersExAsync(sWebSessionId, iOrderNumber, sPhoneNumber, cPrint, dtStartDate, dtEndDate, iSeason, iCustomerNumber, iMos, cRenewals, iDeliveryMethod, null);
        }
        
        /// <remarks/>
        public void GetOrdersExAsync(string sWebSessionId, int iOrderNumber, string sPhoneNumber, char cPrint, string dtStartDate, string dtEndDate, int iSeason, int iCustomerNumber, int iMos, char cRenewals, int iDeliveryMethod, object userState) {
            if ((this.GetOrdersExOperationCompleted == null)) {
                this.GetOrdersExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersExOperationCompleted);
            }
            this.InvokeAsync("GetOrdersEx", new object[] {
                        sWebSessionId,
                        iOrderNumber,
                        sPhoneNumber,
                        cPrint,
                        dtStartDate,
                        dtEndDate,
                        iSeason,
                        iCustomerNumber,
                        iMos,
                        cRenewals,
                        iDeliveryMethod}, this.GetOrdersExOperationCompleted, userState);
        }
        
        private void OnGetOrdersExOperationCompleted(object arg) {
            if ((this.GetOrdersExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersExCompleted(this, new GetOrdersExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetTicketPrintInformation", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTicketPrintInformation(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint) {
            object[] results = this.Invoke("GetTicketPrintInformation", new object[] {
                        sWebSessionId,
                        iOrderId,
                        sHeaderDesign,
                        sTicketDesign,
                        cReceipt,
                        cReprint});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketPrintInformationAsync(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint) {
            this.GetTicketPrintInformationAsync(sWebSessionId, iOrderId, sHeaderDesign, sTicketDesign, cReceipt, cReprint, null);
        }
        
        /// <remarks/>
        public void GetTicketPrintInformationAsync(string sWebSessionId, int iOrderId, string sHeaderDesign, string sTicketDesign, string cReceipt, string cReprint, object userState) {
            if ((this.GetTicketPrintInformationOperationCompleted == null)) {
                this.GetTicketPrintInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketPrintInformationOperationCompleted);
            }
            this.InvokeAsync("GetTicketPrintInformation", new object[] {
                        sWebSessionId,
                        iOrderId,
                        sHeaderDesign,
                        sTicketDesign,
                        cReceipt,
                        cReprint}, this.GetTicketPrintInformationOperationCompleted, userState);
        }
        
        private void OnGetTicketPrintInformationOperationCompleted(object arg) {
            if ((this.GetTicketPrintInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketPrintInformationCompleted(this, new GetTicketPrintInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateConstituentAttributes", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateConstituentAttributes(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName) {
            object[] results = this.Invoke("UpdateConstituentAttributes", new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        sOldKeyValue,
                        sNewKeyValue,
                        cAccountName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConstituentAttributesAsync(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName) {
            this.UpdateConstituentAttributesAsync(sWebSessionId, cAction, iKeywordNumber, sOldKeyValue, sNewKeyValue, cAccountName, null);
        }
        
        /// <remarks/>
        public void UpdateConstituentAttributesAsync(string sWebSessionId, char cAction, int iKeywordNumber, string sOldKeyValue, string sNewKeyValue, char cAccountName, object userState) {
            if ((this.UpdateConstituentAttributesOperationCompleted == null)) {
                this.UpdateConstituentAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentAttributesOperationCompleted);
            }
            this.InvokeAsync("UpdateConstituentAttributes", new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        sOldKeyValue,
                        sNewKeyValue,
                        cAccountName}, this.UpdateConstituentAttributesOperationCompleted, userState);
        }
        
        private void OnUpdateConstituentAttributesOperationCompleted(object arg) {
            if ((this.UpdateConstituentAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConstituentAttributesCompleted(this, new UpdateConstituentAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateConstituentInterests", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateConstituentInterests(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight) {
            object[] results = this.Invoke("UpdateConstituentInterests", new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        cSelected,
                        iWeight});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConstituentInterestsAsync(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight) {
            this.UpdateConstituentInterestsAsync(sWebSessionId, cAction, iKeywordNumber, cSelected, iWeight, null);
        }
        
        /// <remarks/>
        public void UpdateConstituentInterestsAsync(string sWebSessionId, char cAction, int iKeywordNumber, char cSelected, int iWeight, object userState) {
            if ((this.UpdateConstituentInterestsOperationCompleted == null)) {
                this.UpdateConstituentInterestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConstituentInterestsOperationCompleted);
            }
            this.InvokeAsync("UpdateConstituentInterests", new object[] {
                        sWebSessionId,
                        cAction,
                        iKeywordNumber,
                        cSelected,
                        iWeight}, this.UpdateConstituentInterestsOperationCompleted, userState);
        }
        
        private void OnUpdateConstituentInterestsOperationCompleted(object arg) {
            if ((this.UpdateConstituentInterestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConstituentInterestsCompleted(this, new UpdateConstituentInterestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOrdersForDelivery", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrdersForDelivery(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail) {
            object[] results = this.Invoke("GetOrdersForDelivery", new object[] {
                        sMos,
                        dPerformanceStartDate,
                        dPerformanceEndDate,
                        dOrderStartDate,
                        dOrderEndDate,
                        iOrderDaysPast,
                        sDeliveryMethod,
                        iMaxOrdersReturned,
                        cPrimaryEmail});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersForDeliveryAsync(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail) {
            this.GetOrdersForDeliveryAsync(sMos, dPerformanceStartDate, dPerformanceEndDate, dOrderStartDate, dOrderEndDate, iOrderDaysPast, sDeliveryMethod, iMaxOrdersReturned, cPrimaryEmail, null);
        }
        
        /// <remarks/>
        public void GetOrdersForDeliveryAsync(string sMos, string dPerformanceStartDate, string dPerformanceEndDate, string dOrderStartDate, string dOrderEndDate, int iOrderDaysPast, string sDeliveryMethod, int iMaxOrdersReturned, string cPrimaryEmail, object userState) {
            if ((this.GetOrdersForDeliveryOperationCompleted == null)) {
                this.GetOrdersForDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersForDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetOrdersForDelivery", new object[] {
                        sMos,
                        dPerformanceStartDate,
                        dPerformanceEndDate,
                        dOrderStartDate,
                        dOrderEndDate,
                        iOrderDaysPast,
                        sDeliveryMethod,
                        iMaxOrdersReturned,
                        cPrimaryEmail}, this.GetOrdersForDeliveryOperationCompleted, userState);
        }
        
        private void OnGetOrdersForDeliveryOperationCompleted(object arg) {
            if ((this.GetOrdersForDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersForDeliveryCompleted(this, new GetOrdersForDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateEmailStatus", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmailStatus(int iOrderNumber, int iEmailId, string dDateTime) {
            object[] results = this.Invoke("UpdateEmailStatus", new object[] {
                        iOrderNumber,
                        iEmailId,
                        dDateTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmailStatusAsync(int iOrderNumber, int iEmailId, string dDateTime) {
            this.UpdateEmailStatusAsync(iOrderNumber, iEmailId, dDateTime, null);
        }
        
        /// <remarks/>
        public void UpdateEmailStatusAsync(int iOrderNumber, int iEmailId, string dDateTime, object userState) {
            if ((this.UpdateEmailStatusOperationCompleted == null)) {
                this.UpdateEmailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmailStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEmailStatus", new object[] {
                        iOrderNumber,
                        iEmailId,
                        dDateTime}, this.UpdateEmailStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEmailStatusOperationCompleted(object arg) {
            if ((this.UpdateEmailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmailStatusCompleted(this, new UpdateEmailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetNewSessionKeyEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewSessionKeyEx(string sIP, int iBusinessUnit) {
            object[] results = this.Invoke("GetNewSessionKeyEx", new object[] {
                        sIP,
                        iBusinessUnit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewSessionKeyExAsync(string sIP, int iBusinessUnit) {
            this.GetNewSessionKeyExAsync(sIP, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetNewSessionKeyExAsync(string sIP, int iBusinessUnit, object userState) {
            if ((this.GetNewSessionKeyExOperationCompleted == null)) {
                this.GetNewSessionKeyExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewSessionKeyExOperationCompleted);
            }
            this.InvokeAsync("GetNewSessionKeyEx", new object[] {
                        sIP,
                        iBusinessUnit}, this.GetNewSessionKeyExOperationCompleted, userState);
        }
        
        private void OnGetNewSessionKeyExOperationCompleted(object arg) {
            if ((this.GetNewSessionKeyExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewSessionKeyExCompleted(this, new GetNewSessionKeyExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetCartBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCartBrief(string sWebSessionID) {
            object[] results = this.Invoke("GetCartBrief", new object[] {
                        sWebSessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartBriefAsync(string sWebSessionID) {
            this.GetCartBriefAsync(sWebSessionID, null);
        }
        
        /// <remarks/>
        public void GetCartBriefAsync(string sWebSessionID, object userState) {
            if ((this.GetCartBriefOperationCompleted == null)) {
                this.GetCartBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartBriefOperationCompleted);
            }
            this.InvokeAsync("GetCartBrief", new object[] {
                        sWebSessionID}, this.GetCartBriefOperationCompleted, userState);
        }
        
        private void OnGetCartBriefOperationCompleted(object arg) {
            if ((this.GetCartBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartBriefCompleted(this, new GetCartBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateGiftAidInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGiftAidInfo(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo) {
            this.Invoke("UpdateGiftAidInfo", new object[] {
                        SessionKey,
                        ContributionDate,
                        DeclarationType,
                        OptIn,
                        RefNo});
        }
        
        /// <remarks/>
        public void UpdateGiftAidInfoAsync(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo) {
            this.UpdateGiftAidInfoAsync(SessionKey, ContributionDate, DeclarationType, OptIn, RefNo, null);
        }
        
        /// <remarks/>
        public void UpdateGiftAidInfoAsync(string SessionKey, string ContributionDate, string DeclarationType, bool OptIn, int RefNo, object userState) {
            if ((this.UpdateGiftAidInfoOperationCompleted == null)) {
                this.UpdateGiftAidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGiftAidInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateGiftAidInfo", new object[] {
                        SessionKey,
                        ContributionDate,
                        DeclarationType,
                        OptIn,
                        RefNo}, this.UpdateGiftAidInfoOperationCompleted, userState);
        }
        
        private void OnUpdateGiftAidInfoOperationCompleted(object arg) {
            if ((this.UpdateGiftAidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGiftAidInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/TransferCart", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferCart(string SessionKey) {
            this.Invoke("TransferCart", new object[] {
                        SessionKey});
        }
        
        /// <remarks/>
        public void TransferCartAsync(string SessionKey) {
            this.TransferCartAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void TransferCartAsync(string SessionKey, object userState) {
            if ((this.TransferCartOperationCompleted == null)) {
                this.TransferCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferCartOperationCompleted);
            }
            this.InvokeAsync("TransferCart", new object[] {
                        SessionKey}, this.TransferCartOperationCompleted, userState);
        }
        
        private void OnTransferCartOperationCompleted(object arg) {
            if ((this.TransferCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferCartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SubPackageLineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddSubPackageItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSubPackageItem(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone) {
            this.Invoke("AddSubPackageItem", new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        ParentSuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone});
        }
        
        /// <remarks/>
        public void AddSubPackageItemAsync(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone) {
            this.AddSubPackageItemAsync(SessionKey, SuperPackageLineItemId, ParentSuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, null);
        }
        
        /// <remarks/>
        public void AddSubPackageItemAsync(string SessionKey, int SuperPackageLineItemId, int ParentSuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, object userState) {
            if ((this.AddSubPackageItemOperationCompleted == null)) {
                this.AddSubPackageItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSubPackageItemOperationCompleted);
            }
            this.InvokeAsync("AddSubPackageItem", new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        ParentSuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone}, this.AddSubPackageItemOperationCompleted, userState);
        }
        
        private void OnAddSubPackageItemOperationCompleted(object arg) {
            if ((this.AddSubPackageItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSubPackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SubPackageLineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddSubPackageItemSeated", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSubPackageItemSeated(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            object[] results = this.Invoke("AddSubPackageItemSeated", new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddSubPackageItemSeatedAsync(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats) {
            this.AddSubPackageItemSeatedAsync(SessionKey, SuperPackageLineItemId, PriceType, SubPackageNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, null);
        }
        
        /// <remarks/>
        public void AddSubPackageItemSeatedAsync(string SessionKey, int SuperPackageLineItemId, string PriceType, int SubPackageNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, object userState) {
            if ((this.AddSubPackageItemSeatedOperationCompleted == null)) {
                this.AddSubPackageItemSeatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSubPackageItemSeatedOperationCompleted);
            }
            this.InvokeAsync("AddSubPackageItemSeated", new object[] {
                        SessionKey,
                        SuperPackageLineItemId,
                        PriceType,
                        SubPackageNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats}, this.AddSubPackageItemSeatedOperationCompleted, userState);
        }
        
        private void OnAddSubPackageItemSeatedOperationCompleted(object arg) {
            if ((this.AddSubPackageItemSeatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSubPackageItemSeatedCompleted(this, new AddSubPackageItemSeatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateCustomOrderData", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCustomOrderData(string SessionKey, int RefNo, int FieldIndex, string FieldValue) {
            this.Invoke("UpdateCustomOrderData", new object[] {
                        SessionKey,
                        RefNo,
                        FieldIndex,
                        FieldValue});
        }
        
        /// <remarks/>
        public void UpdateCustomOrderDataAsync(string SessionKey, int RefNo, int FieldIndex, string FieldValue) {
            this.UpdateCustomOrderDataAsync(SessionKey, RefNo, FieldIndex, FieldValue, null);
        }
        
        /// <remarks/>
        public void UpdateCustomOrderDataAsync(string SessionKey, int RefNo, int FieldIndex, string FieldValue, object userState) {
            if ((this.UpdateCustomOrderDataOperationCompleted == null)) {
                this.UpdateCustomOrderDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomOrderDataOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomOrderData", new object[] {
                        SessionKey,
                        RefNo,
                        FieldIndex,
                        FieldValue}, this.UpdateCustomOrderDataOperationCompleted, userState);
        }
        
        private void OnUpdateCustomOrderDataOperationCompleted(object arg) {
            if ((this.UpdateCustomOrderDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomOrderDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddOrderCommentsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderCommentsEx(string SessionKey, string Comment, int LineItemID, char LineItemType) {
            this.Invoke("AddOrderCommentsEx", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType});
        }
        
        /// <remarks/>
        public void AddOrderCommentsExAsync(string SessionKey, string Comment, int LineItemID, char LineItemType) {
            this.AddOrderCommentsExAsync(SessionKey, Comment, LineItemID, LineItemType, null);
        }
        
        /// <remarks/>
        public void AddOrderCommentsExAsync(string SessionKey, string Comment, int LineItemID, char LineItemType, object userState) {
            if ((this.AddOrderCommentsExOperationCompleted == null)) {
                this.AddOrderCommentsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderCommentsExOperationCompleted);
            }
            this.InvokeAsync("AddOrderCommentsEx", new object[] {
                        SessionKey,
                        Comment,
                        LineItemID,
                        LineItemType}, this.AddOrderCommentsExOperationCompleted, userState);
        }
        
        private void OnAddOrderCommentsExOperationCompleted(object arg) {
            if ((this.AddOrderCommentsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderCommentsExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveOrderCommentsEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveOrderCommentsEx(string SessionKey, int LineItemID, char LineItemType) {
            this.Invoke("RemoveOrderCommentsEx", new object[] {
                        SessionKey,
                        LineItemID,
                        LineItemType});
        }
        
        /// <remarks/>
        public void RemoveOrderCommentsExAsync(string SessionKey, int LineItemID, char LineItemType) {
            this.RemoveOrderCommentsExAsync(SessionKey, LineItemID, LineItemType, null);
        }
        
        /// <remarks/>
        public void RemoveOrderCommentsExAsync(string SessionKey, int LineItemID, char LineItemType, object userState) {
            if ((this.RemoveOrderCommentsExOperationCompleted == null)) {
                this.RemoveOrderCommentsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOrderCommentsExOperationCompleted);
            }
            this.InvokeAsync("RemoveOrderCommentsEx", new object[] {
                        SessionKey,
                        LineItemID,
                        LineItemType}, this.RemoveOrderCommentsExOperationCompleted, userState);
        }
        
        private void OnRemoveOrderCommentsExOperationCompleted(object arg) {
            if ((this.RemoveOrderCommentsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOrderCommentsExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionDetailEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionDetailEx(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit) {
            object[] results = this.Invoke("GetProductionDetailEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionDetailExAsync(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionDetailExAsync(SessionKey, iPerf_no, iProd_Season_no, iModeOfSale, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetProductionDetailExAsync(string SessionKey, int iPerf_no, int iProd_Season_no, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.GetProductionDetailExOperationCompleted == null)) {
                this.GetProductionDetailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailExOperationCompleted);
            }
            this.InvokeAsync("GetProductionDetailEx", new object[] {
                        SessionKey,
                        iPerf_no,
                        iProd_Season_no,
                        iModeOfSale,
                        iBusinessUnit}, this.GetProductionDetailExOperationCompleted, userState);
        }
        
        private void OnGetProductionDetailExOperationCompleted(object arg) {
            if ((this.GetProductionDetailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionDetailExCompleted(this, new GetProductionDetailExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetLocalData", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocalData(string SessionKey, int LocalDataTableIndex, int RetrievalKey) {
            object[] results = this.Invoke("GetLocalData", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalDataAsync(string SessionKey, int LocalDataTableIndex, int RetrievalKey) {
            this.GetLocalDataAsync(SessionKey, LocalDataTableIndex, RetrievalKey, null);
        }
        
        /// <remarks/>
        public void GetLocalDataAsync(string SessionKey, int LocalDataTableIndex, int RetrievalKey, object userState) {
            if ((this.GetLocalDataOperationCompleted == null)) {
                this.GetLocalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalDataOperationCompleted);
            }
            this.InvokeAsync("GetLocalData", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        RetrievalKey}, this.GetLocalDataOperationCompleted, userState);
        }
        
        private void OnGetLocalDataOperationCompleted(object arg) {
            if ((this.GetLocalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalDataCompleted(this, new GetLocalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateLocalData", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLocalData(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues) {
            this.Invoke("UpdateLocalData", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        LocalDataTableKey,
                        Action,
                        RetrievalKey,
                        LocalDataValues});
        }
        
        /// <remarks/>
        public void UpdateLocalDataAsync(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues) {
            this.UpdateLocalDataAsync(SessionKey, LocalDataTableIndex, LocalDataTableKey, Action, RetrievalKey, LocalDataValues, null);
        }
        
        /// <remarks/>
        public void UpdateLocalDataAsync(string SessionKey, int LocalDataTableIndex, int LocalDataTableKey, char Action, int RetrievalKey, string LocalDataValues, object userState) {
            if ((this.UpdateLocalDataOperationCompleted == null)) {
                this.UpdateLocalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLocalDataOperationCompleted);
            }
            this.InvokeAsync("UpdateLocalData", new object[] {
                        SessionKey,
                        LocalDataTableIndex,
                        LocalDataTableKey,
                        Action,
                        RetrievalKey,
                        LocalDataValues}, this.UpdateLocalDataOperationCompleted, userState);
        }
        
        private void OnUpdateLocalDataOperationCompleted(object arg) {
            if ((this.UpdateLocalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLocalDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPromoCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPromoCode(string SessionKey, string PromotionCodeString) {
            object[] results = this.Invoke("GetPromoCode", new object[] {
                        SessionKey,
                        PromotionCodeString});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromoCodeAsync(string SessionKey, string PromotionCodeString) {
            this.GetPromoCodeAsync(SessionKey, PromotionCodeString, null);
        }
        
        /// <remarks/>
        public void GetPromoCodeAsync(string SessionKey, string PromotionCodeString, object userState) {
            if ((this.GetPromoCodeOperationCompleted == null)) {
                this.GetPromoCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromoCodeOperationCompleted);
            }
            this.InvokeAsync("GetPromoCode", new object[] {
                        SessionKey,
                        PromotionCodeString}, this.GetPromoCodeOperationCompleted, userState);
        }
        
        private void OnGetPromoCodeOperationCompleted(object arg) {
            if ((this.GetPromoCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromoCodeCompleted(this, new GetPromoCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetStateProvinceEx", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStateProvinceEx(string CountryIds) {
            object[] results = this.Invoke("GetStateProvinceEx", new object[] {
                        CountryIds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateProvinceExAsync(string CountryIds) {
            this.GetStateProvinceExAsync(CountryIds, null);
        }
        
        /// <remarks/>
        public void GetStateProvinceExAsync(string CountryIds, object userState) {
            if ((this.GetStateProvinceExOperationCompleted == null)) {
                this.GetStateProvinceExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateProvinceExOperationCompleted);
            }
            this.InvokeAsync("GetStateProvinceEx", new object[] {
                        CountryIds}, this.GetStateProvinceExOperationCompleted, userState);
        }
        
        private void OnGetStateProvinceExOperationCompleted(object arg) {
            if ((this.GetStateProvinceExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateProvinceExCompleted(this, new GetStateProvinceExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateSuperPackages", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateSuperPackages(string SessionKey) {
            object[] results = this.Invoke("ValidateSuperPackages", new object[] {
                        SessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSuperPackagesAsync(string SessionKey) {
            this.ValidateSuperPackagesAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void ValidateSuperPackagesAsync(string SessionKey, object userState) {
            if ((this.ValidateSuperPackagesOperationCompleted == null)) {
                this.ValidateSuperPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSuperPackagesOperationCompleted);
            }
            this.InvokeAsync("ValidateSuperPackages", new object[] {
                        SessionKey}, this.ValidateSuperPackagesOperationCompleted, userState);
        }
        
        private void OnValidateSuperPackagesOperationCompleted(object arg) {
            if ((this.ValidateSuperPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSuperPackagesCompleted(this, new ValidateSuperPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/TessituraSeatServerListeningViaWebSeatServer", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TessituraSeatServerListeningViaWebSeatServer() {
            object[] results = this.Invoke("TessituraSeatServerListeningViaWebSeatServer", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TessituraSeatServerListeningViaWebSeatServerAsync() {
            this.TessituraSeatServerListeningViaWebSeatServerAsync(null);
        }
        
        /// <remarks/>
        public void TessituraSeatServerListeningViaWebSeatServerAsync(object userState) {
            if ((this.TessituraSeatServerListeningViaWebSeatServerOperationCompleted == null)) {
                this.TessituraSeatServerListeningViaWebSeatServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTessituraSeatServerListeningViaWebSeatServerOperationCompleted);
            }
            this.InvokeAsync("TessituraSeatServerListeningViaWebSeatServer", new object[0], this.TessituraSeatServerListeningViaWebSeatServerOperationCompleted, userState);
        }
        
        private void OnTessituraSeatServerListeningViaWebSeatServerOperationCompleted(object arg) {
            if ((this.TessituraSeatServerListeningViaWebSeatServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TessituraSeatServerListeningViaWebSeatServerCompleted(this, new TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/TessituraCreditCardServerListening", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TessituraCreditCardServerListening() {
            object[] results = this.Invoke("TessituraCreditCardServerListening", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TessituraCreditCardServerListeningAsync() {
            this.TessituraCreditCardServerListeningAsync(null);
        }
        
        /// <remarks/>
        public void TessituraCreditCardServerListeningAsync(object userState) {
            if ((this.TessituraCreditCardServerListeningOperationCompleted == null)) {
                this.TessituraCreditCardServerListeningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTessituraCreditCardServerListeningOperationCompleted);
            }
            this.InvokeAsync("TessituraCreditCardServerListening", new object[0], this.TessituraCreditCardServerListeningOperationCompleted, userState);
        }
        
        private void OnTessituraCreditCardServerListeningOperationCompleted(object arg) {
            if ((this.TessituraCreditCardServerListeningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TessituraCreditCardServerListeningCompleted(this, new TessituraCreditCardServerListeningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOrderDetails", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderDetails(string SessionKey, int OrderNumber) {
            object[] results = this.Invoke("GetOrderDetails", new object[] {
                        SessionKey,
                        OrderNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailsAsync(string SessionKey, int OrderNumber) {
            this.GetOrderDetailsAsync(SessionKey, OrderNumber, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailsAsync(string SessionKey, int OrderNumber, object userState) {
            if ((this.GetOrderDetailsOperationCompleted == null)) {
                this.GetOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetails", new object[] {
                        SessionKey,
                        OrderNumber}, this.GetOrderDetailsOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailsOperationCompleted(object arg) {
            if ((this.GetOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailsCompleted(this, new GetOrderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LoginAttemptHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoginConstituent", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoginConstituent(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers) {
            object[] results = this.Invoke("LoginConstituent", new object[] {
                        SessionKey,
                        CCNumber,
                        PhoneNumber,
                        LoginType,
                        PromotionCode,
                        GenericCustomerNumbers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginConstituentAsync(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers) {
            this.LoginConstituentAsync(SessionKey, CCNumber, PhoneNumber, LoginType, PromotionCode, GenericCustomerNumbers, null);
        }
        
        /// <remarks/>
        public void LoginConstituentAsync(string SessionKey, string CCNumber, string PhoneNumber, int LoginType, int PromotionCode, string GenericCustomerNumbers, object userState) {
            if ((this.LoginConstituentOperationCompleted == null)) {
                this.LoginConstituentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginConstituentOperationCompleted);
            }
            this.InvokeAsync("LoginConstituent", new object[] {
                        SessionKey,
                        CCNumber,
                        PhoneNumber,
                        LoginType,
                        PromotionCode,
                        GenericCustomerNumbers}, this.LoginConstituentOperationCompleted, userState);
        }
        
        private void OnLoginConstituentOperationCompleted(object arg) {
            if ((this.LoginConstituentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginConstituentCompleted(this, new LoginConstituentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveSuperPackageItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveSuperPackageItem(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID) {
            this.Invoke("RemoveSuperPackageItem", new object[] {
                        SessionKey,
                        SuperPackageNumber,
                        SuperPackageLineItemID});
        }
        
        /// <remarks/>
        public void RemoveSuperPackageItemAsync(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID) {
            this.RemoveSuperPackageItemAsync(SessionKey, SuperPackageNumber, SuperPackageLineItemID, null);
        }
        
        /// <remarks/>
        public void RemoveSuperPackageItemAsync(string SessionKey, int SuperPackageNumber, int SuperPackageLineItemID, object userState) {
            if ((this.RemoveSuperPackageItemOperationCompleted == null)) {
                this.RemoveSuperPackageItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveSuperPackageItemOperationCompleted);
            }
            this.InvokeAsync("RemoveSuperPackageItem", new object[] {
                        SessionKey,
                        SuperPackageNumber,
                        SuperPackageLineItemID}, this.RemoveSuperPackageItemOperationCompleted, userState);
        }
        
        private void OnRemoveSuperPackageItemOperationCompleted(object arg) {
            if ((this.RemoveSuperPackageItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveSuperPackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByZone", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByZone(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            object[] results = this.Invoke("GetSeatsByZone", new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByZoneAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            this.GetSeatsByZoneAsync(SessionKey, Zone, PerformanceNumber, PackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsByZoneAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, object userState) {
            if ((this.GetSeatsByZoneOperationCompleted == null)) {
                this.GetSeatsByZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZoneOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByZone", new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber}, this.GetSeatsByZoneOperationCompleted, userState);
        }
        
        private void OnGetSeatsByZoneOperationCompleted(object arg) {
            if ((this.GetSeatsByZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByZoneCompleted(this, new GetSeatsByZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsByZoneBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsByZoneBrief(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            object[] results = this.Invoke("GetSeatsByZoneBrief", new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsByZoneBriefAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber) {
            this.GetSeatsByZoneBriefAsync(SessionKey, Zone, PerformanceNumber, PackageNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsByZoneBriefAsync(string SessionKey, int Zone, int PerformanceNumber, int PackageNumber, object userState) {
            if ((this.GetSeatsByZoneBriefOperationCompleted == null)) {
                this.GetSeatsByZoneBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsByZoneBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsByZoneBrief", new object[] {
                        SessionKey,
                        Zone,
                        PerformanceNumber,
                        PackageNumber}, this.GetSeatsByZoneBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsByZoneBriefOperationCompleted(object arg) {
            if ((this.GetSeatsByZoneBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsByZoneBriefCompleted(this, new GetSeatsByZoneBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetailSYOS", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Performance GetPerformanceDetailSYOS(string SessionKey, int iPerf_no, short iModeOfSale) {
            object[] results = this.Invoke("GetPerformanceDetailSYOS", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale});
            return ((Performance)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailSYOSAsync(SessionKey, iPerf_no, iModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailSYOSAsync(string SessionKey, int iPerf_no, short iModeOfSale, object userState) {
            if ((this.GetPerformanceDetailSYOSOperationCompleted == null)) {
                this.GetPerformanceDetailSYOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailSYOSOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetailSYOS", new object[] {
                        SessionKey,
                        iPerf_no,
                        iModeOfSale}, this.GetPerformanceDetailSYOSOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailSYOSOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailSYOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailSYOSCompleted(this, new GetPerformanceDetailSYOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NFSPackageLineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddNFSPackagePerformanceItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNFSPackagePerformanceItem(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated) {
            object[] results = this.Invoke("AddNFSPackagePerformanceItem", new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        PerformanceGroupNumber,
                        PerformanceNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats,
                        SpecialRequests,
                        UnSeated});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNFSPackagePerformanceItemAsync(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated) {
            this.AddNFSPackagePerformanceItemAsync(SessionKey, NFSPackageLineItemId, PriceType, PackageNumber, PerformanceGroupNumber, PerformanceNumber, NumberOfSeats, Zone, RequestedSeats, LeaveSingleSeats, SpecialRequests, UnSeated, null);
        }
        
        /// <remarks/>
        public void AddNFSPackagePerformanceItemAsync(string SessionKey, int NFSPackageLineItemId, string PriceType, int PackageNumber, int PerformanceGroupNumber, int PerformanceNumber, int NumberOfSeats, int Zone, string RequestedSeats, bool LeaveSingleSeats, string SpecialRequests, bool UnSeated, object userState) {
            if ((this.AddNFSPackagePerformanceItemOperationCompleted == null)) {
                this.AddNFSPackagePerformanceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNFSPackagePerformanceItemOperationCompleted);
            }
            this.InvokeAsync("AddNFSPackagePerformanceItem", new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        PerformanceGroupNumber,
                        PerformanceNumber,
                        NumberOfSeats,
                        Zone,
                        RequestedSeats,
                        LeaveSingleSeats,
                        SpecialRequests,
                        UnSeated}, this.AddNFSPackagePerformanceItemOperationCompleted, userState);
        }
        
        private void OnAddNFSPackagePerformanceItemOperationCompleted(object arg) {
            if ((this.AddNFSPackagePerformanceItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNFSPackagePerformanceItemCompleted(this, new AddNFSPackagePerformanceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetNFSPackageDetail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNFSPackageDetail(string SessionKey, int PackageID, int ModeOfSale) {
            object[] results = this.Invoke("GetNFSPackageDetail", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNFSPackageDetailAsync(string SessionKey, int PackageID, int ModeOfSale) {
            this.GetNFSPackageDetailAsync(SessionKey, PackageID, ModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetNFSPackageDetailAsync(string SessionKey, int PackageID, int ModeOfSale, object userState) {
            if ((this.GetNFSPackageDetailOperationCompleted == null)) {
                this.GetNFSPackageDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNFSPackageDetailOperationCompleted);
            }
            this.InvokeAsync("GetNFSPackageDetail", new object[] {
                        SessionKey,
                        PackageID,
                        ModeOfSale}, this.GetNFSPackageDetailOperationCompleted, userState);
        }
        
        private void OnGetNFSPackageDetailOperationCompleted(object arg) {
            if ((this.GetNFSPackageDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNFSPackageDetailCompleted(this, new GetNFSPackageDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ValidateNFSPackages", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateNFSPackages(string SessionKey) {
            object[] results = this.Invoke("ValidateNFSPackages", new object[] {
                        SessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateNFSPackagesAsync(string SessionKey) {
            this.ValidateNFSPackagesAsync(SessionKey, null);
        }
        
        /// <remarks/>
        public void ValidateNFSPackagesAsync(string SessionKey, object userState) {
            if ((this.ValidateNFSPackagesOperationCompleted == null)) {
                this.ValidateNFSPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateNFSPackagesOperationCompleted);
            }
            this.InvokeAsync("ValidateNFSPackages", new object[] {
                        SessionKey}, this.ValidateNFSPackagesOperationCompleted, userState);
        }
        
        private void OnValidateNFSPackagesOperationCompleted(object arg) {
            if ((this.ValidateNFSPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateNFSPackagesCompleted(this, new ValidateNFSPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveNFSPackage", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveNFSPackage(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber) {
            this.Invoke("RemoveNFSPackage", new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PerformanceLineItemId,
                        PerformanceNumber});
        }
        
        /// <remarks/>
        public void RemoveNFSPackageAsync(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber) {
            this.RemoveNFSPackageAsync(SessionKey, NFSPackageLineItemId, PerformanceLineItemId, PerformanceNumber, null);
        }
        
        /// <remarks/>
        public void RemoveNFSPackageAsync(string SessionKey, int NFSPackageLineItemId, int PerformanceLineItemId, int PerformanceNumber, object userState) {
            if ((this.RemoveNFSPackageOperationCompleted == null)) {
                this.RemoveNFSPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNFSPackageOperationCompleted);
            }
            this.InvokeAsync("RemoveNFSPackage", new object[] {
                        SessionKey,
                        NFSPackageLineItemId,
                        PerformanceLineItemId,
                        PerformanceNumber}, this.RemoveNFSPackageOperationCompleted, userState);
        }
        
        private void OnRemoveNFSPackageOperationCompleted(object arg) {
            if ((this.RemoveNFSPackageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNFSPackageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsBySection", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsBySection(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            object[] results = this.Invoke("GetSeatsBySection", new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsBySectionAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            this.GetSeatsBySectionAsync(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsBySectionAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, object userState) {
            if ((this.GetSeatsBySectionOperationCompleted == null)) {
                this.GetSeatsBySectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionOperationCompleted);
            }
            this.InvokeAsync("GetSeatsBySection", new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber}, this.GetSeatsBySectionOperationCompleted, userState);
        }
        
        private void OnGetSeatsBySectionOperationCompleted(object arg) {
            if ((this.GetSeatsBySectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsBySectionCompleted(this, new GetSeatsBySectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetSeatsBySectionBrief", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeatsBySectionBrief(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            object[] results = this.Invoke("GetSeatsBySectionBrief", new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeatsBySectionBriefAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber) {
            this.GetSeatsBySectionBriefAsync(SessionKey, PerformanceNumber, PackageNumber, SectionNumber, null);
        }
        
        /// <remarks/>
        public void GetSeatsBySectionBriefAsync(string SessionKey, int PerformanceNumber, int PackageNumber, int SectionNumber, object userState) {
            if ((this.GetSeatsBySectionBriefOperationCompleted == null)) {
                this.GetSeatsBySectionBriefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeatsBySectionBriefOperationCompleted);
            }
            this.InvokeAsync("GetSeatsBySectionBrief", new object[] {
                        SessionKey,
                        PerformanceNumber,
                        PackageNumber,
                        SectionNumber}, this.GetSeatsBySectionBriefOperationCompleted, userState);
        }
        
        private void OnGetSeatsBySectionBriefOperationCompleted(object arg) {
            if ((this.GetSeatsBySectionBriefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeatsBySectionBriefCompleted(this, new GetSeatsBySectionBriefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetGiftCertificateInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGiftCertificateInfo(string SessionKey, string RedemptionCode) {
            object[] results = this.Invoke("GetGiftCertificateInfo", new object[] {
                        SessionKey,
                        RedemptionCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiftCertificateInfoAsync(string SessionKey, string RedemptionCode) {
            this.GetGiftCertificateInfoAsync(SessionKey, RedemptionCode, null);
        }
        
        /// <remarks/>
        public void GetGiftCertificateInfoAsync(string SessionKey, string RedemptionCode, object userState) {
            if ((this.GetGiftCertificateInfoOperationCompleted == null)) {
                this.GetGiftCertificateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiftCertificateInfoOperationCompleted);
            }
            this.InvokeAsync("GetGiftCertificateInfo", new object[] {
                        SessionKey,
                        RedemptionCode}, this.GetGiftCertificateInfoOperationCompleted, userState);
        }
        
        private void OnGetGiftCertificateInfoOperationCompleted(object arg) {
            if ((this.GetGiftCertificateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiftCertificateInfoCompleted(this, new GetGiftCertificateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetCityStateProvinceByPostalCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCityStateProvinceByPostalCode(string sSessionKey, string sPostalCode, int iCountry) {
            object[] results = this.Invoke("GetCityStateProvinceByPostalCode", new object[] {
                        sSessionKey,
                        sPostalCode,
                        iCountry});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityStateProvinceByPostalCodeAsync(string sSessionKey, string sPostalCode, int iCountry) {
            this.GetCityStateProvinceByPostalCodeAsync(sSessionKey, sPostalCode, iCountry, null);
        }
        
        /// <remarks/>
        public void GetCityStateProvinceByPostalCodeAsync(string sSessionKey, string sPostalCode, int iCountry, object userState) {
            if ((this.GetCityStateProvinceByPostalCodeOperationCompleted == null)) {
                this.GetCityStateProvinceByPostalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityStateProvinceByPostalCodeOperationCompleted);
            }
            this.InvokeAsync("GetCityStateProvinceByPostalCode", new object[] {
                        sSessionKey,
                        sPostalCode,
                        iCountry}, this.GetCityStateProvinceByPostalCodeOperationCompleted, userState);
        }
        
        private void OnGetCityStateProvinceByPostalCodeOperationCompleted(object arg) {
            if ((this.GetCityStateProvinceByPostalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityStateProvinceByPostalCodeCompleted(this, new GetCityStateProvinceByPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAddress", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateAddress(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange) {
            object[] results = this.Invoke("UpdateAddress", new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAddressAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange) {
            this.UpdateAddressAsync(sSessionKey, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, sFax, iAddressNumber, iAddressType, bPrimary, sStartDate, sEndDate, sMonths, sInActive, bSaveCopyOnChange, null);
        }
        
        /// <remarks/>
        public void UpdateAddressAsync(
                    string sSessionKey, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    string sFax, 
                    int iAddressNumber, 
                    int iAddressType, 
                    bool bPrimary, 
                    string sStartDate, 
                    string sEndDate, 
                    string sMonths, 
                    string sInActive, 
                    bool bSaveCopyOnChange, 
                    object userState) {
            if ((this.UpdateAddressOperationCompleted == null)) {
                this.UpdateAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAddressOperationCompleted);
            }
            this.InvokeAsync("UpdateAddress", new object[] {
                        sSessionKey,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        sFax,
                        iAddressNumber,
                        iAddressType,
                        bPrimary,
                        sStartDate,
                        sEndDate,
                        sMonths,
                        sInActive,
                        bSaveCopyOnChange}, this.UpdateAddressOperationCompleted, userState);
        }
        
        private void OnUpdateAddressOperationCompleted(object arg) {
            if ((this.UpdateAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAddressCompleted(this, new UpdateAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAccountInfoEx2", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccountInfoEx2(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            this.Invoke("UpdateAccountInfoEx2", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sMiddleName2,
                        sLastName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status});
        }
        
        /// <remarks/>
        public void UpdateAccountInfoEx2Async(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status) {
            this.UpdateAccountInfoEx2Async(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, sPhone2, iPhone2Type, sFax, sFirstName, sLastName, sMiddleName, sPrefix, sSuffix, sBusinessTitle, iEmailIndicator, iMailIndicator, iPhoneIndicator, sHtmlIndicator, sGender, sGender2, sFirstName2, sMiddleName2, sLastName2, sPrefix2, sSuffix2, iOriginalSourceNumber, bUpdateSalutation, iAddressTypeOverwrite, iEaddressTypeOverwrite, sEsal1DescriptionOverwrite, sEsal2DescriptionOverwrite, sLsalDescriptionOverwrite, iConstituentTypeOverwrite, iNameStatus, iName2Status, null);
        }
        
        /// <remarks/>
        public void UpdateAccountInfoEx2Async(
                    string sSessionKey, 
                    string sEmail, 
                    string sPhone, 
                    string sStreet1, 
                    string sStreet2, 
                    string sCity, 
                    string sStateProv, 
                    string sPostalCode, 
                    int iCountry, 
                    string sPhone2, 
                    int iPhone2Type, 
                    string sFax, 
                    string sFirstName, 
                    string sLastName, 
                    string sMiddleName, 
                    string sPrefix, 
                    string sSuffix, 
                    string sBusinessTitle, 
                    int iEmailIndicator, 
                    int iMailIndicator, 
                    int iPhoneIndicator, 
                    string sHtmlIndicator, 
                    string sGender, 
                    string sGender2, 
                    string sFirstName2, 
                    string sMiddleName2, 
                    string sLastName2, 
                    string sPrefix2, 
                    string sSuffix2, 
                    int iOriginalSourceNumber, 
                    bool bUpdateSalutation, 
                    int iAddressTypeOverwrite, 
                    int iEaddressTypeOverwrite, 
                    string sEsal1DescriptionOverwrite, 
                    string sEsal2DescriptionOverwrite, 
                    string sLsalDescriptionOverwrite, 
                    int iConstituentTypeOverwrite, 
                    int iNameStatus, 
                    int iName2Status, 
                    object userState) {
            if ((this.UpdateAccountInfoEx2OperationCompleted == null)) {
                this.UpdateAccountInfoEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoEx2OperationCompleted);
            }
            this.InvokeAsync("UpdateAccountInfoEx2", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        sPhone2,
                        iPhone2Type,
                        sFax,
                        sFirstName,
                        sLastName,
                        sMiddleName,
                        sPrefix,
                        sSuffix,
                        sBusinessTitle,
                        iEmailIndicator,
                        iMailIndicator,
                        iPhoneIndicator,
                        sHtmlIndicator,
                        sGender,
                        sGender2,
                        sFirstName2,
                        sMiddleName2,
                        sLastName2,
                        sPrefix2,
                        sSuffix2,
                        iOriginalSourceNumber,
                        bUpdateSalutation,
                        iAddressTypeOverwrite,
                        iEaddressTypeOverwrite,
                        sEsal1DescriptionOverwrite,
                        sEsal2DescriptionOverwrite,
                        sLsalDescriptionOverwrite,
                        iConstituentTypeOverwrite,
                        iNameStatus,
                        iName2Status}, this.UpdateAccountInfoEx2OperationCompleted, userState);
        }
        
        private void OnUpdateAccountInfoEx2OperationCompleted(object arg) {
            if ((this.UpdateAccountInfoEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountInfoEx2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateOrderDetails", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrderDetails(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime) {
            this.Invoke("UpdateOrderDetails", new object[] {
                        sSessionKey,
                        sSolicitor,
                        iCategory,
                        iChannel,
                        sHoldUntilDateTime});
        }
        
        /// <remarks/>
        public void UpdateOrderDetailsAsync(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime) {
            this.UpdateOrderDetailsAsync(sSessionKey, sSolicitor, iCategory, iChannel, sHoldUntilDateTime, null);
        }
        
        /// <remarks/>
        public void UpdateOrderDetailsAsync(string sSessionKey, string sSolicitor, int iCategory, int iChannel, string sHoldUntilDateTime, object userState) {
            if ((this.UpdateOrderDetailsOperationCompleted == null)) {
                this.UpdateOrderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderDetails", new object[] {
                        sSessionKey,
                        sSolicitor,
                        iCategory,
                        iChannel,
                        sHoldUntilDateTime}, this.UpdateOrderDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateOrderDetailsOperationCompleted(object arg) {
            if ((this.UpdateOrderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetWebContent", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWebContent(string sSessionKey, int iInventoryNumber, int iPackageNumber) {
            object[] results = this.Invoke("GetWebContent", new object[] {
                        sSessionKey,
                        iInventoryNumber,
                        iPackageNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebContentAsync(string sSessionKey, int iInventoryNumber, int iPackageNumber) {
            this.GetWebContentAsync(sSessionKey, iInventoryNumber, iPackageNumber, null);
        }
        
        /// <remarks/>
        public void GetWebContentAsync(string sSessionKey, int iInventoryNumber, int iPackageNumber, object userState) {
            if ((this.GetWebContentOperationCompleted == null)) {
                this.GetWebContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebContentOperationCompleted);
            }
            this.InvokeAsync("GetWebContent", new object[] {
                        sSessionKey,
                        iInventoryNumber,
                        iPackageNumber}, this.GetWebContentOperationCompleted, userState);
        }
        
        private void OnGetWebContentOperationCompleted(object arg) {
            if ((this.GetWebContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebContentCompleted(this, new GetWebContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetFees", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFees(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear) {
            object[] results = this.Invoke("GetFees", new object[] {
                        sSessionKey,
                        sCategoryList,
                        sUserDefined,
                        iSeasonID,
                        iFiscalYear});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeesAsync(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear) {
            this.GetFeesAsync(sSessionKey, sCategoryList, sUserDefined, iSeasonID, iFiscalYear, null);
        }
        
        /// <remarks/>
        public void GetFeesAsync(string sSessionKey, string sCategoryList, string sUserDefined, int iSeasonID, int iFiscalYear, object userState) {
            if ((this.GetFeesOperationCompleted == null)) {
                this.GetFeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeesOperationCompleted);
            }
            this.InvokeAsync("GetFees", new object[] {
                        sSessionKey,
                        sCategoryList,
                        sUserDefined,
                        iSeasonID,
                        iFiscalYear}, this.GetFeesOperationCompleted, userState);
        }
        
        private void OnGetFeesOperationCompleted(object arg) {
            if ((this.GetFeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeesCompleted(this, new GetFeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateFee", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFee(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount) {
            this.Invoke("UpdateFee", new object[] {
                        sSessionKey,
                        cAction,
                        iFeeNo,
                        iFeeID,
                        dAmount});
        }
        
        /// <remarks/>
        public void UpdateFeeAsync(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount) {
            this.UpdateFeeAsync(sSessionKey, cAction, iFeeNo, iFeeID, dAmount, null);
        }
        
        /// <remarks/>
        public void UpdateFeeAsync(string sSessionKey, char cAction, int iFeeNo, int iFeeID, decimal dAmount, object userState) {
            if ((this.UpdateFeeOperationCompleted == null)) {
                this.UpdateFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFeeOperationCompleted);
            }
            this.InvokeAsync("UpdateFee", new object[] {
                        sSessionKey,
                        cAction,
                        iFeeNo,
                        iFeeID,
                        dAmount}, this.UpdateFeeOperationCompleted, userState);
        }
        
        private void OnUpdateFeeOperationCompleted(object arg) {
            if ((this.UpdateFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveFee", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFee(string sSessionKey, int iFeeID) {
            this.Invoke("RemoveFee", new object[] {
                        sSessionKey,
                        iFeeID});
        }
        
        /// <remarks/>
        public void RemoveFeeAsync(string sSessionKey, int iFeeID) {
            this.RemoveFeeAsync(sSessionKey, iFeeID, null);
        }
        
        /// <remarks/>
        public void RemoveFeeAsync(string sSessionKey, int iFeeID, object userState) {
            if ((this.RemoveFeeOperationCompleted == null)) {
                this.RemoveFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFeeOperationCompleted);
            }
            this.InvokeAsync("RemoveFee", new object[] {
                        sSessionKey,
                        iFeeID}, this.RemoveFeeOperationCompleted, userState);
        }
        
        private void OnRemoveFeeOperationCompleted(object arg) {
            if ((this.RemoveFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetReturnTickets", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReturnTickets(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate) {
            object[] results = this.Invoke("GetReturnTickets", new object[] {
                        sSessionKey,
                        dtStartDate,
                        dtEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReturnTicketsAsync(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate) {
            this.GetReturnTicketsAsync(sSessionKey, dtStartDate, dtEndDate, null);
        }
        
        /// <remarks/>
        public void GetReturnTicketsAsync(string sSessionKey, System.DateTime dtStartDate, System.DateTime dtEndDate, object userState) {
            if ((this.GetReturnTicketsOperationCompleted == null)) {
                this.GetReturnTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReturnTicketsOperationCompleted);
            }
            this.InvokeAsync("GetReturnTickets", new object[] {
                        sSessionKey,
                        dtStartDate,
                        dtEndDate}, this.GetReturnTicketsOperationCompleted, userState);
        }
        
        private void OnGetReturnTicketsOperationCompleted(object arg) {
            if ((this.GetReturnTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReturnTicketsCompleted(this, new GetReturnTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReturnTicket", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReturnTicket(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate) {
            this.Invoke("ReturnTicket", new object[] {
                        sSessionKey,
                        iPerfNo,
                        iSeatNo,
                        iTicketNo,
                        sCheckSum,
                        cReturnOrDonate});
        }
        
        /// <remarks/>
        public void ReturnTicketAsync(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate) {
            this.ReturnTicketAsync(sSessionKey, iPerfNo, iSeatNo, iTicketNo, sCheckSum, cReturnOrDonate, null);
        }
        
        /// <remarks/>
        public void ReturnTicketAsync(string sSessionKey, int iPerfNo, int iSeatNo, int iTicketNo, string sCheckSum, char cReturnOrDonate, object userState) {
            if ((this.ReturnTicketOperationCompleted == null)) {
                this.ReturnTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTicketOperationCompleted);
            }
            this.InvokeAsync("ReturnTicket", new object[] {
                        sSessionKey,
                        iPerfNo,
                        iSeatNo,
                        iTicketNo,
                        sCheckSum,
                        cReturnOrDonate}, this.ReturnTicketOperationCompleted, userState);
        }
        
        private void OnReturnTicketOperationCompleted(object arg) {
            if ((this.ReturnTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetAttributes", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAttributes(string sSessionKey, int iAttributeID) {
            object[] results = this.Invoke("GetAttributes", new object[] {
                        sSessionKey,
                        iAttributeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string sSessionKey, int iAttributeID) {
            this.GetAttributesAsync(sSessionKey, iAttributeID, null);
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string sSessionKey, int iAttributeID, object userState) {
            if ((this.GetAttributesOperationCompleted == null)) {
                this.GetAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesOperationCompleted);
            }
            this.InvokeAsync("GetAttributes", new object[] {
                        sSessionKey,
                        iAttributeID}, this.GetAttributesOperationCompleted, userState);
        }
        
        private void OnGetAttributesOperationCompleted(object arg) {
            if ((this.GetAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetProductionDetail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductionDetail(int iPerf_no, short iModeOfSale, int iBusinessUnit) {
            object[] results = this.Invoke("GetProductionDetail", new object[] {
                        iPerf_no,
                        iModeOfSale,
                        iBusinessUnit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductionDetailAsync(int iPerf_no, short iModeOfSale, int iBusinessUnit) {
            this.GetProductionDetailAsync(iPerf_no, iModeOfSale, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetProductionDetailAsync(int iPerf_no, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.GetProductionDetailOperationCompleted == null)) {
                this.GetProductionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductionDetailOperationCompleted);
            }
            this.InvokeAsync("GetProductionDetail", new object[] {
                        iPerf_no,
                        iModeOfSale,
                        iBusinessUnit}, this.GetProductionDetailOperationCompleted, userState);
        }
        
        private void OnGetProductionDetailOperationCompleted(object arg) {
            if ((this.GetProductionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductionDetailCompleted(this, new GetProductionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformances", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformances(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString) {
            object[] results = this.Invoke("GetPerformances", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformancesAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString) {
            this.GetPerformancesAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, sSortString, null);
        }
        
        /// <remarks/>
        public void GetPerformancesAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, string sSortString, object userState) {
            if ((this.GetPerformancesOperationCompleted == null)) {
                this.GetPerformancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformancesOperationCompleted);
            }
            this.InvokeAsync("GetPerformances", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit,
                        sSortString}, this.GetPerformancesOperationCompleted, userState);
        }
        
        private void OnGetPerformancesOperationCompleted(object arg) {
            if ((this.GetPerformancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformancesCompleted(this, new GetPerformancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceDetail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceDetail(int iPerf_no, short iModeOfSale) {
            object[] results = this.Invoke("GetPerformanceDetail", new object[] {
                        iPerf_no,
                        iModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceDetailAsync(int iPerf_no, short iModeOfSale) {
            this.GetPerformanceDetailAsync(iPerf_no, iModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPerformanceDetailAsync(int iPerf_no, short iModeOfSale, object userState) {
            if ((this.GetPerformanceDetailOperationCompleted == null)) {
                this.GetPerformanceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceDetailOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceDetail", new object[] {
                        iPerf_no,
                        iModeOfSale}, this.GetPerformanceDetailOperationCompleted, userState);
        }
        
        private void OnGetPerformanceDetailOperationCompleted(object arg) {
            if ((this.GetPerformanceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceDetailCompleted(this, new GetPerformanceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetKeywords", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetKeywords(string sKeywordCategory) {
            object[] results = this.Invoke("GetKeywords", new object[] {
                        sKeywordCategory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeywordsAsync(string sKeywordCategory) {
            this.GetKeywordsAsync(sKeywordCategory, null);
        }
        
        /// <remarks/>
        public void GetKeywordsAsync(string sKeywordCategory, object userState) {
            if ((this.GetKeywordsOperationCompleted == null)) {
                this.GetKeywordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordsOperationCompleted);
            }
            this.InvokeAsync("GetKeywords", new object[] {
                        sKeywordCategory}, this.GetKeywordsOperationCompleted, userState);
        }
        
        private void OnGetKeywordsOperationCompleted(object arg) {
            if ((this.GetKeywordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordsCompleted(this, new GetKeywordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetVenue", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVenue() {
            object[] results = this.Invoke("GetVenue", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVenueAsync() {
            this.GetVenueAsync(null);
        }
        
        /// <remarks/>
        public void GetVenueAsync(object userState) {
            if ((this.GetVenueOperationCompleted == null)) {
                this.GetVenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenueOperationCompleted);
            }
            this.InvokeAsync("GetVenue", new object[0], this.GetVenueOperationCompleted, userState);
        }
        
        private void OnGetVenueOperationCompleted(object arg) {
            if ((this.GetVenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenueCompleted(this, new GetVenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPerformanceAvailability", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPerformanceAvailability(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            object[] results = this.Invoke("GetPerformanceAvailability", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPerformanceAvailabilityAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit) {
            this.GetPerformanceAvailabilityAsync(sStartDate, sEndDate, sPerfType, sArtist, iVenueID, sKeywords, iModeOfSale, iBusinessUnit, null);
        }
        
        /// <remarks/>
        public void GetPerformanceAvailabilityAsync(string sStartDate, string sEndDate, string sPerfType, string sArtist, short iVenueID, string sKeywords, short iModeOfSale, int iBusinessUnit, object userState) {
            if ((this.GetPerformanceAvailabilityOperationCompleted == null)) {
                this.GetPerformanceAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPerformanceAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetPerformanceAvailability", new object[] {
                        sStartDate,
                        sEndDate,
                        sPerfType,
                        sArtist,
                        iVenueID,
                        sKeywords,
                        iModeOfSale,
                        iBusinessUnit}, this.GetPerformanceAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetPerformanceAvailabilityOperationCompleted(object arg) {
            if ((this.GetPerformanceAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPerformanceAvailabilityCompleted(this, new GetPerformanceAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReserveTickets", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveTickets(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone) {
            object[] results = this.Invoke("ReserveTickets", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveTicketsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone) {
            this.ReserveTicketsAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, null);
        }
        
        /// <remarks/>
        public void ReserveTicketsAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, object userState) {
            if ((this.ReserveTicketsOperationCompleted == null)) {
                this.ReserveTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveTicketsOperationCompleted);
            }
            this.InvokeAsync("ReserveTickets", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone}, this.ReserveTicketsOperationCompleted, userState);
        }
        
        private void OnReserveTicketsOperationCompleted(object arg) {
            if ((this.ReserveTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveTicketsCompleted(this, new ReserveTicketsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.WebMethodAttribute(MessageName="ReserveTickets1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReserveTicketsSpecialRequests", RequestElementName="ReserveTicketsSpecialRequests", RequestNamespace="http://tessiturasoftware.com/", ResponseElementName="ReserveTicketsSpecialRequestsResponse", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ReserveTicketsSpecialRequestsResult")]
        public int ReserveTickets(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            object[] results = this.Invoke("ReserveTickets1", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveTickets1Async(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTickets1Async(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        /// <remarks/>
        public void ReserveTickets1Async(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.ReserveTickets1OperationCompleted == null)) {
                this.ReserveTickets1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveTickets1OperationCompleted);
            }
            this.InvokeAsync("ReserveTickets1", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.ReserveTickets1OperationCompleted, userState);
        }
        
        private void OnReserveTickets1OperationCompleted(object arg) {
            if ((this.ReserveTickets1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveTickets1Completed(this, new ReserveTickets1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReserveTicketsUnseated", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ReserveTicketsUnseated(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            object[] results = this.Invoke("ReserveTicketsUnseated", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveTicketsUnseatedAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests) {
            this.ReserveTicketsUnseatedAsync(sWebSessionID, sPriceType, iPerformanceNumber, iNumberOfSeats, iZone, sSpecialRequests, null);
        }
        
        /// <remarks/>
        public void ReserveTicketsUnseatedAsync(string sWebSessionID, string sPriceType, int iPerformanceNumber, int iNumberOfSeats, int iZone, string sSpecialRequests, object userState) {
            if ((this.ReserveTicketsUnseatedOperationCompleted == null)) {
                this.ReserveTicketsUnseatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveTicketsUnseatedOperationCompleted);
            }
            this.InvokeAsync("ReserveTicketsUnseated", new object[] {
                        sWebSessionID,
                        sPriceType,
                        iPerformanceNumber,
                        iNumberOfSeats,
                        iZone,
                        sSpecialRequests}, this.ReserveTicketsUnseatedOperationCompleted, userState);
        }
        
        private void OnReserveTicketsUnseatedOperationCompleted(object arg) {
            if ((this.ReserveTicketsUnseatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveTicketsUnseatedCompleted(this, new ReserveTicketsUnseatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ReleaseTickets", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseTickets(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber) {
            this.Invoke("ReleaseTickets", new object[] {
                        sWebSessionID,
                        iPerformanceNumber,
                        iLineItemNumber});
        }
        
        /// <remarks/>
        public void ReleaseTicketsAsync(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber) {
            this.ReleaseTicketsAsync(sWebSessionID, iPerformanceNumber, iLineItemNumber, null);
        }
        
        /// <remarks/>
        public void ReleaseTicketsAsync(string sWebSessionID, int iPerformanceNumber, int iLineItemNumber, object userState) {
            if ((this.ReleaseTicketsOperationCompleted == null)) {
                this.ReleaseTicketsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseTicketsOperationCompleted);
            }
            this.InvokeAsync("ReleaseTickets", new object[] {
                        sWebSessionID,
                        iPerformanceNumber,
                        iLineItemNumber}, this.ReleaseTicketsOperationCompleted, userState);
        }
        
        private void OnReleaseTicketsOperationCompleted(object arg) {
            if ((this.ReleaseTicketsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseTicketsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddContribution", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddContribution(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew) {
            this.Invoke("AddContribution", new object[] {
                        sWebSessionID,
                        Amount,
                        Fund,
                        AccountMethod,
                        Upgrade,
                        Renew});
        }
        
        /// <remarks/>
        public void AddContributionAsync(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew) {
            this.AddContributionAsync(sWebSessionID, Amount, Fund, AccountMethod, Upgrade, Renew, null);
        }
        
        /// <remarks/>
        public void AddContributionAsync(string sWebSessionID, decimal Amount, int Fund, int AccountMethod, bool Upgrade, bool Renew, object userState) {
            if ((this.AddContributionOperationCompleted == null)) {
                this.AddContributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContributionOperationCompleted);
            }
            this.InvokeAsync("AddContribution", new object[] {
                        sWebSessionID,
                        Amount,
                        Fund,
                        AccountMethod,
                        Upgrade,
                        Renew}, this.AddContributionOperationCompleted, userState);
        }
        
        private void OnAddContributionOperationCompleted(object arg) {
            if ((this.AddContributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContributionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RemoveContribuion", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveContribuion(string sWebSessionID, int iLineItemNumber) {
            this.Invoke("RemoveContribuion", new object[] {
                        sWebSessionID,
                        iLineItemNumber});
        }
        
        /// <remarks/>
        public void RemoveContribuionAsync(string sWebSessionID, int iLineItemNumber) {
            this.RemoveContribuionAsync(sWebSessionID, iLineItemNumber, null);
        }
        
        /// <remarks/>
        public void RemoveContribuionAsync(string sWebSessionID, int iLineItemNumber, object userState) {
            if ((this.RemoveContribuionOperationCompleted == null)) {
                this.RemoveContribuionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveContribuionOperationCompleted);
            }
            this.InvokeAsync("RemoveContribuion", new object[] {
                        sWebSessionID,
                        iLineItemNumber}, this.RemoveContribuionOperationCompleted, userState);
        }
        
        private void OnRemoveContribuionOperationCompleted(object arg) {
            if ((this.RemoveContribuionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveContribuionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetCart", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCart(string sWebSessionID) {
            object[] results = this.Invoke("GetCart", new object[] {
                        sWebSessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartAsync(string sWebSessionID) {
            this.GetCartAsync(sWebSessionID, null);
        }
        
        /// <remarks/>
        public void GetCartAsync(string sWebSessionID, object userState) {
            if ((this.GetCartOperationCompleted == null)) {
                this.GetCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartOperationCompleted);
            }
            this.InvokeAsync("GetCart", new object[] {
                        sWebSessionID}, this.GetCartOperationCompleted, userState);
        }
        
        private void OnGetCartOperationCompleted(object arg) {
            if ((this.GetCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartCompleted(this, new GetCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetAddressAndShippingMethod", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAddressAndShippingMethod(string sSessionKey) {
            object[] results = this.Invoke("GetAddressAndShippingMethod", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressAndShippingMethodAsync(string sSessionKey) {
            this.GetAddressAndShippingMethodAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetAddressAndShippingMethodAsync(string sSessionKey, object userState) {
            if ((this.GetAddressAndShippingMethodOperationCompleted == null)) {
                this.GetAddressAndShippingMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressAndShippingMethodOperationCompleted);
            }
            this.InvokeAsync("GetAddressAndShippingMethod", new object[] {
                        sSessionKey}, this.GetAddressAndShippingMethodOperationCompleted, userState);
        }
        
        private void OnGetAddressAndShippingMethodOperationCompleted(object arg) {
            if ((this.GetAddressAndShippingMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressAndShippingMethodCompleted(this, new GetAddressAndShippingMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetShippingMethods", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShippingMethods(string sSessionKey) {
            object[] results = this.Invoke("GetShippingMethods", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShippingMethodsAsync(string sSessionKey) {
            this.GetShippingMethodsAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetShippingMethodsAsync(string sSessionKey, object userState) {
            if ((this.GetShippingMethodsOperationCompleted == null)) {
                this.GetShippingMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShippingMethodsOperationCompleted);
            }
            this.InvokeAsync("GetShippingMethods", new object[] {
                        sSessionKey}, this.GetShippingMethodsOperationCompleted, userState);
        }
        
        private void OnGetShippingMethodsOperationCompleted(object arg) {
            if ((this.GetShippingMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShippingMethodsCompleted(this, new GetShippingMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/SetShippingInformation", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetShippingInformation(string sSessionKey, int iAddress_no, int iShippingMethod) {
            this.Invoke("SetShippingInformation", new object[] {
                        sSessionKey,
                        iAddress_no,
                        iShippingMethod});
        }
        
        /// <remarks/>
        public void SetShippingInformationAsync(string sSessionKey, int iAddress_no, int iShippingMethod) {
            this.SetShippingInformationAsync(sSessionKey, iAddress_no, iShippingMethod, null);
        }
        
        /// <remarks/>
        public void SetShippingInformationAsync(string sSessionKey, int iAddress_no, int iShippingMethod, object userState) {
            if ((this.SetShippingInformationOperationCompleted == null)) {
                this.SetShippingInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetShippingInformationOperationCompleted);
            }
            this.InvokeAsync("SetShippingInformation", new object[] {
                        sSessionKey,
                        iAddress_no,
                        iShippingMethod}, this.SetShippingInformationOperationCompleted, userState);
        }
        
        private void OnSetShippingInformationOperationCompleted(object arg) {
            if ((this.SetShippingInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetShippingInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CheckoutStatusHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/Checkout", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Checkout(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear) {
            this.Invoke("Checkout", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear});
        }
        
        /// <remarks/>
        public void CheckoutAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear) {
            this.CheckoutAsync(sSessionKey, sCCOwner, sCCNumber, iCCType, iCCMonth, iCCYear, null);
        }
        
        /// <remarks/>
        public void CheckoutAsync(string sSessionKey, string sCCOwner, string sCCNumber, int iCCType, int iCCMonth, int iCCYear, object userState) {
            if ((this.CheckoutOperationCompleted == null)) {
                this.CheckoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckoutOperationCompleted);
            }
            this.InvokeAsync("Checkout", new object[] {
                        sSessionKey,
                        sCCOwner,
                        sCCNumber,
                        iCCType,
                        iCCMonth,
                        iCCYear}, this.CheckoutOperationCompleted, userState);
        }
        
        private void OnCheckoutOperationCompleted(object arg) {
            if ((this.CheckoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPaymentMethod", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPaymentMethod(string sSessionKey) {
            object[] results = this.Invoke("GetPaymentMethod", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string sSessionKey) {
            this.GetPaymentMethodAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetPaymentMethodAsync(string sSessionKey, object userState) {
            if ((this.GetPaymentMethodOperationCompleted == null)) {
                this.GetPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("GetPaymentMethod", new object[] {
                        sSessionKey}, this.GetPaymentMethodOperationCompleted, userState);
        }
        
        private void OnGetPaymentMethodOperationCompleted(object arg) {
            if ((this.GetPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentMethodCompleted(this, new GetPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetOrder", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrder(string sSessionKey, bool bCheckoutCompleted) {
            object[] results = this.Invoke("GetOrder", new object[] {
                        sSessionKey,
                        bCheckoutCompleted});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderAsync(string sSessionKey, bool bCheckoutCompleted) {
            this.GetOrderAsync(sSessionKey, bCheckoutCompleted, null);
        }
        
        /// <remarks/>
        public void GetOrderAsync(string sSessionKey, bool bCheckoutCompleted, object userState) {
            if ((this.GetOrderOperationCompleted == null)) {
                this.GetOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderOperationCompleted);
            }
            this.InvokeAsync("GetOrder", new object[] {
                        sSessionKey,
                        bCheckoutCompleted}, this.GetOrderOperationCompleted, userState);
        }
        
        private void OnGetOrderOperationCompleted(object arg) {
            if ((this.GetOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/OrderExists", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OrderExists(string sSessionKey) {
            object[] results = this.Invoke("OrderExists", new object[] {
                        sSessionKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrderExistsAsync(string sSessionKey) {
            this.OrderExistsAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void OrderExistsAsync(string sSessionKey, object userState) {
            if ((this.OrderExistsOperationCompleted == null)) {
                this.OrderExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderExistsOperationCompleted);
            }
            this.InvokeAsync("OrderExists", new object[] {
                        sSessionKey}, this.OrderExistsOperationCompleted, userState);
        }
        
        private void OnOrderExistsOperationCompleted(object arg) {
            if ((this.OrderExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderExistsCompleted(this, new OrderExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/Register", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Register(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName) {
            object[] results = this.Invoke("Register", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName) {
            this.RegisterAsync(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/RegisterWithPromoCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode) {
            object[] results = this.Invoke("RegisterWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName,
                        iPromoCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode) {
            this.RegisterWithPromoCodeAsync(sSessionKey, sUID, sPwd, iLoginType, sEmail, sFName, sLName, iPromoCode, null);
        }
        
        /// <remarks/>
        public void RegisterWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, string sEmail, string sFName, string sLName, int iPromoCode, object userState) {
            if ((this.RegisterWithPromoCodeOperationCompleted == null)) {
                this.RegisterWithPromoCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterWithPromoCodeOperationCompleted);
            }
            this.InvokeAsync("RegisterWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        sEmail,
                        sFName,
                        sLName,
                        iPromoCode}, this.RegisterWithPromoCodeOperationCompleted, userState);
        }
        
        private void OnRegisterWithPromoCodeOperationCompleted(object arg) {
            if ((this.RegisterWithPromoCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterWithPromoCodeCompleted(this, new RegisterWithPromoCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/Logout", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout(string sSessionKey) {
            this.Invoke("Logout", new object[] {
                        sSessionKey});
        }
        
        /// <remarks/>
        public void LogoutAsync(string sSessionKey) {
            this.LogoutAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string sSessionKey, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        sSessionKey}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LoginAttemptHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/Login", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string sSessionKey, string sUID, string sPwd, int iLoginType) {
            object[] results = this.Invoke("Login", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string sSessionKey, string sUID, string sPwd, int iLoginType) {
            this.LoginAsync(sSessionKey, sUID, sPwd, iLoginType, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LoginAttemptHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoginWithPromoCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoginWithPromoCode(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode) {
            object[] results = this.Invoke("LoginWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode) {
            this.LoginWithPromoCodeAsync(sSessionKey, sUID, sPwd, iLoginType, iPromotionCode, null);
        }
        
        /// <remarks/>
        public void LoginWithPromoCodeAsync(string sSessionKey, string sUID, string sPwd, int iLoginType, int iPromotionCode, object userState) {
            if ((this.LoginWithPromoCodeOperationCompleted == null)) {
                this.LoginWithPromoCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginWithPromoCodeOperationCompleted);
            }
            this.InvokeAsync("LoginWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sPwd,
                        iLoginType,
                        iPromotionCode}, this.LoginWithPromoCodeOperationCompleted, userState);
        }
        
        private void OnLoginWithPromoCodeOperationCompleted(object arg) {
            if ((this.LoginWithPromoCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginWithPromoCodeCompleted(this, new LoginWithPromoCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateLogin", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLogin(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType) {
            object[] results = this.Invoke("UpdateLogin", new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLoginAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType) {
            this.UpdateLoginAsync(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, null);
        }
        
        /// <remarks/>
        public void UpdateLoginAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, object userState) {
            if ((this.UpdateLoginOperationCompleted == null)) {
                this.UpdateLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoginOperationCompleted);
            }
            this.InvokeAsync("UpdateLogin", new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType}, this.UpdateLoginOperationCompleted, userState);
        }
        
        private void OnUpdateLoginOperationCompleted(object arg) {
            if ((this.UpdateLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoginCompleted(this, new UpdateLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateLoginWithPromoCode", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLoginWithPromoCode(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode) {
            object[] results = this.Invoke("UpdateLoginWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType,
                        iPromotionCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLoginWithPromoCodeAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode) {
            this.UpdateLoginWithPromoCodeAsync(sSessionKey, sUID, sNewUID, sPwd, sNewPwd, sEmail, sNewEmail, iLoginType, iPromotionCode, null);
        }
        
        /// <remarks/>
        public void UpdateLoginWithPromoCodeAsync(string sSessionKey, string sUID, string sNewUID, string sPwd, string sNewPwd, string sEmail, string sNewEmail, int iLoginType, int iPromotionCode, object userState) {
            if ((this.UpdateLoginWithPromoCodeOperationCompleted == null)) {
                this.UpdateLoginWithPromoCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLoginWithPromoCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateLoginWithPromoCode", new object[] {
                        sSessionKey,
                        sUID,
                        sNewUID,
                        sPwd,
                        sNewPwd,
                        sEmail,
                        sNewEmail,
                        iLoginType,
                        iPromotionCode}, this.UpdateLoginWithPromoCodeOperationCompleted, userState);
        }
        
        private void OnUpdateLoginWithPromoCodeOperationCompleted(object arg) {
            if ((this.UpdateLoginWithPromoCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLoginWithPromoCodeCompleted(this, new UpdateLoginWithPromoCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoginInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginInfo(string sSessionKey) {
            object[] results = this.Invoke("LoginInfo", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginInfoAsync(string sSessionKey) {
            this.LoginInfoAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void LoginInfoAsync(string sSessionKey, object userState) {
            if ((this.LoginInfoOperationCompleted == null)) {
                this.LoginInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginInfoOperationCompleted);
            }
            this.InvokeAsync("LoginInfo", new object[] {
                        sSessionKey}, this.LoginInfoOperationCompleted, userState);
        }
        
        private void OnLoginInfoOperationCompleted(object arg) {
            if ((this.LoginInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginInfoCompleted(this, new LoginInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetAccountInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountInfo(string sSessionKey) {
            object[] results = this.Invoke("GetAccountInfo", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string sSessionKey) {
            this.GetAccountInfoAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetAccountInfoAsync(string sSessionKey, object userState) {
            if ((this.GetAccountInfoOperationCompleted == null)) {
                this.GetAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoOperationCompleted);
            }
            this.InvokeAsync("GetAccountInfo", new object[] {
                        sSessionKey}, this.GetAccountInfoOperationCompleted, userState);
        }
        
        private void OnGetAccountInfoOperationCompleted(object arg) {
            if ((this.GetAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateAccountInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccountInfo(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry) {
            this.Invoke("UpdateAccountInfo", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry});
        }
        
        /// <remarks/>
        public void UpdateAccountInfoAsync(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry) {
            this.UpdateAccountInfoAsync(sSessionKey, sEmail, sPhone, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, null);
        }
        
        /// <remarks/>
        public void UpdateAccountInfoAsync(string sSessionKey, string sEmail, string sPhone, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, object userState) {
            if ((this.UpdateAccountInfoOperationCompleted == null)) {
                this.UpdateAccountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateAccountInfo", new object[] {
                        sSessionKey,
                        sEmail,
                        sPhone,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry}, this.UpdateAccountInfoOperationCompleted, userState);
        }
        
        private void OnUpdateAccountInfoOperationCompleted(object arg) {
            if ((this.UpdateAccountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/InsertNewShippingAddress", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertNewShippingAddress(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod) {
            this.Invoke("InsertNewShippingAddress", new object[] {
                        sSessionKey,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        iShippingMethod});
        }
        
        /// <remarks/>
        public void InsertNewShippingAddressAsync(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod) {
            this.InsertNewShippingAddressAsync(sSessionKey, sStreet1, sStreet2, sCity, sStateProv, sPostalCode, iCountry, iShippingMethod, null);
        }
        
        /// <remarks/>
        public void InsertNewShippingAddressAsync(string sSessionKey, string sStreet1, string sStreet2, string sCity, string sStateProv, string sPostalCode, int iCountry, int iShippingMethod, object userState) {
            if ((this.InsertNewShippingAddressOperationCompleted == null)) {
                this.InsertNewShippingAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewShippingAddressOperationCompleted);
            }
            this.InvokeAsync("InsertNewShippingAddress", new object[] {
                        sSessionKey,
                        sStreet1,
                        sStreet2,
                        sCity,
                        sStateProv,
                        sPostalCode,
                        iCountry,
                        iShippingMethod}, this.InsertNewShippingAddressOperationCompleted, userState);
        }
        
        private void OnInsertNewShippingAddressOperationCompleted(object arg) {
            if ((this.InsertNewShippingAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewShippingAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoggedIn", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoggedIn(string sSessionKey) {
            object[] results = this.Invoke("LoggedIn", new object[] {
                        sSessionKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoggedInAsync(string sSessionKey) {
            this.LoggedInAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void LoggedInAsync(string sSessionKey, object userState) {
            if ((this.LoggedInOperationCompleted == null)) {
                this.LoggedInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoggedInOperationCompleted);
            }
            this.InvokeAsync("LoggedIn", new object[] {
                        sSessionKey}, this.LoggedInOperationCompleted, userState);
        }
        
        private void OnLoggedInOperationCompleted(object arg) {
            if ((this.LoggedInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoggedInCompleted(this, new LoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetNewSessionKey", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewSessionKey(string sIP) {
            object[] results = this.Invoke("GetNewSessionKey", new object[] {
                        sIP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewSessionKeyAsync(string sIP) {
            this.GetNewSessionKeyAsync(sIP, null);
        }
        
        /// <remarks/>
        public void GetNewSessionKeyAsync(string sIP, object userState) {
            if ((this.GetNewSessionKeyOperationCompleted == null)) {
                this.GetNewSessionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewSessionKeyOperationCompleted);
            }
            this.InvokeAsync("GetNewSessionKey", new object[] {
                        sIP}, this.GetNewSessionKeyOperationCompleted, userState);
        }
        
        private void OnGetNewSessionKeyOperationCompleted(object arg) {
            if ((this.GetNewSessionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewSessionKeyCompleted(this, new GetNewSessionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/UpdateLastAccessTime", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLastAccessTime(string sSessionKey, string sNow) {
            this.Invoke("UpdateLastAccessTime", new object[] {
                        sSessionKey,
                        sNow});
        }
        
        /// <remarks/>
        public void UpdateLastAccessTimeAsync(string sSessionKey, string sNow) {
            this.UpdateLastAccessTimeAsync(sSessionKey, sNow, null);
        }
        
        /// <remarks/>
        public void UpdateLastAccessTimeAsync(string sSessionKey, string sNow, object userState) {
            if ((this.UpdateLastAccessTimeOperationCompleted == null)) {
                this.UpdateLastAccessTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLastAccessTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateLastAccessTime", new object[] {
                        sSessionKey,
                        sNow}, this.UpdateLastAccessTimeOperationCompleted, userState);
        }
        
        private void OnUpdateLastAccessTimeOperationCompleted(object arg) {
            if ((this.UpdateLastAccessTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLastAccessTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetVariables", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVariables(string sSessionKey) {
            object[] results = this.Invoke("GetVariables", new object[] {
                        sSessionKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVariablesAsync(string sSessionKey) {
            this.GetVariablesAsync(sSessionKey, null);
        }
        
        /// <remarks/>
        public void GetVariablesAsync(string sSessionKey, object userState) {
            if ((this.GetVariablesOperationCompleted == null)) {
                this.GetVariablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVariablesOperationCompleted);
            }
            this.InvokeAsync("GetVariables", new object[] {
                        sSessionKey}, this.GetVariablesOperationCompleted, userState);
        }
        
        private void OnGetVariablesOperationCompleted(object arg) {
            if ((this.GetVariablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVariablesCompleted(this, new GetVariablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/SetVariable", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetVariable(string sSessionKey, string sName, string sValue, string sMode) {
            this.Invoke("SetVariable", new object[] {
                        sSessionKey,
                        sName,
                        sValue,
                        sMode});
        }
        
        /// <remarks/>
        public void SetVariableAsync(string sSessionKey, string sName, string sValue, string sMode) {
            this.SetVariableAsync(sSessionKey, sName, sValue, sMode, null);
        }
        
        /// <remarks/>
        public void SetVariableAsync(string sSessionKey, string sName, string sValue, string sMode, object userState) {
            if ((this.SetVariableOperationCompleted == null)) {
                this.SetVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetVariableOperationCompleted);
            }
            this.InvokeAsync("SetVariable", new object[] {
                        sSessionKey,
                        sName,
                        sValue,
                        sMode}, this.SetVariableOperationCompleted, userState);
        }
        
        private void OnSetVariableOperationCompleted(object arg) {
            if ((this.SetVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/DeleteVariable", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVariable(string sSessionKey, string sName) {
            this.Invoke("DeleteVariable", new object[] {
                        sSessionKey,
                        sName});
        }
        
        /// <remarks/>
        public void DeleteVariableAsync(string sSessionKey, string sName) {
            this.DeleteVariableAsync(sSessionKey, sName, null);
        }
        
        /// <remarks/>
        public void DeleteVariableAsync(string sSessionKey, string sName, object userState) {
            if ((this.DeleteVariableOperationCompleted == null)) {
                this.DeleteVariableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVariableOperationCompleted);
            }
            this.InvokeAsync("DeleteVariable", new object[] {
                        sSessionKey,
                        sName}, this.DeleteVariableOperationCompleted, userState);
        }
        
        private void OnDeleteVariableOperationCompleted(object arg) {
            if ((this.DeleteVariableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVariableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/TransferSession", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferSession(string sSessionKey, string sNewKey) {
            this.Invoke("TransferSession", new object[] {
                        sSessionKey,
                        sNewKey});
        }
        
        /// <remarks/>
        public void TransferSessionAsync(string sSessionKey, string sNewKey) {
            this.TransferSessionAsync(sSessionKey, sNewKey, null);
        }
        
        /// <remarks/>
        public void TransferSessionAsync(string sSessionKey, string sNewKey, object userState) {
            if ((this.TransferSessionOperationCompleted == null)) {
                this.TransferSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferSessionOperationCompleted);
            }
            this.InvokeAsync("TransferSession", new object[] {
                        sSessionKey,
                        sNewKey}, this.TransferSessionOperationCompleted, userState);
        }
        
        private void OnTransferSessionOperationCompleted(object arg) {
            if ((this.TransferSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddCustomerServiceIssue", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCustomerServiceIssue(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent) {
            this.Invoke("AddCustomerServiceIssue", new object[] {
                        sSessionKey,
                        ContactMethod,
                        Category,
                        ActivityType,
                        Origin,
                        Notes,
                        PerformanceNumber,
                        PackageNumber,
                        Urgent});
        }
        
        /// <remarks/>
        public void AddCustomerServiceIssueAsync(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent) {
            this.AddCustomerServiceIssueAsync(sSessionKey, ContactMethod, Category, ActivityType, Origin, Notes, PerformanceNumber, PackageNumber, Urgent, null);
        }
        
        /// <remarks/>
        public void AddCustomerServiceIssueAsync(string sSessionKey, int ContactMethod, int Category, int ActivityType, int Origin, string Notes, int PerformanceNumber, int PackageNumber, bool Urgent, object userState) {
            if ((this.AddCustomerServiceIssueOperationCompleted == null)) {
                this.AddCustomerServiceIssueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerServiceIssueOperationCompleted);
            }
            this.InvokeAsync("AddCustomerServiceIssue", new object[] {
                        sSessionKey,
                        ContactMethod,
                        Category,
                        ActivityType,
                        Origin,
                        Notes,
                        PerformanceNumber,
                        PackageNumber,
                        Urgent}, this.AddCustomerServiceIssueOperationCompleted, userState);
        }
        
        private void OnAddCustomerServiceIssueOperationCompleted(object arg) {
            if ((this.AddCustomerServiceIssueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerServiceIssueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/HelloWorld", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetCountries", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountries() {
            object[] results = this.Invoke("GetCountries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync() {
            this.GetCountriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[0], this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetStateProvince", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStateProvince() {
            object[] results = this.Invoke("GetStateProvince", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateProvinceAsync() {
            this.GetStateProvinceAsync(null);
        }
        
        /// <remarks/>
        public void GetStateProvinceAsync(object userState) {
            if ((this.GetStateProvinceOperationCompleted == null)) {
                this.GetStateProvinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateProvinceOperationCompleted);
            }
            this.InvokeAsync("GetStateProvince", new object[0], this.GetStateProvinceOperationCompleted, userState);
        }
        
        private void OnGetStateProvinceOperationCompleted(object arg) {
            if ((this.GetStateProvinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateProvinceCompleted(this, new GetStateProvinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/ChangeModeOfSale", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeModeOfSale(string SessionKey, int NewModeOfSale) {
            object[] results = this.Invoke("ChangeModeOfSale", new object[] {
                        SessionKey,
                        NewModeOfSale});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeModeOfSaleAsync(string SessionKey, int NewModeOfSale) {
            this.ChangeModeOfSaleAsync(SessionKey, NewModeOfSale, null);
        }
        
        /// <remarks/>
        public void ChangeModeOfSaleAsync(string SessionKey, int NewModeOfSale, object userState) {
            if ((this.ChangeModeOfSaleOperationCompleted == null)) {
                this.ChangeModeOfSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeModeOfSaleOperationCompleted);
            }
            this.InvokeAsync("ChangeModeOfSale", new object[] {
                        SessionKey,
                        NewModeOfSale}, this.ChangeModeOfSaleOperationCompleted, userState);
        }
        
        private void OnChangeModeOfSaleOperationCompleted(object arg) {
            if ((this.ChangeModeOfSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeModeOfSaleCompleted(this, new ChangeModeOfSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackages", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackages(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances) {
            object[] results = this.Invoke("GetPackages", new object[] {
                        Season,
                        StartDate,
                        EndDate,
                        PackageType,
                        Artist,
                        VenueID,
                        Keywords,
                        ModeOfSale,
                        BusinessUnit,
                        SortString,
                        MatchAllPerformances});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackagesAsync(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances) {
            this.GetPackagesAsync(Season, StartDate, EndDate, PackageType, Artist, VenueID, Keywords, ModeOfSale, BusinessUnit, SortString, MatchAllPerformances, null);
        }
        
        /// <remarks/>
        public void GetPackagesAsync(int Season, string StartDate, string EndDate, int PackageType, string Artist, short VenueID, string Keywords, short ModeOfSale, int BusinessUnit, string SortString, bool MatchAllPerformances, object userState) {
            if ((this.GetPackagesOperationCompleted == null)) {
                this.GetPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackagesOperationCompleted);
            }
            this.InvokeAsync("GetPackages", new object[] {
                        Season,
                        StartDate,
                        EndDate,
                        PackageType,
                        Artist,
                        VenueID,
                        Keywords,
                        ModeOfSale,
                        BusinessUnit,
                        SortString,
                        MatchAllPerformances}, this.GetPackagesOperationCompleted, userState);
        }
        
        private void OnGetPackagesOperationCompleted(object arg) {
            if ((this.GetPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackagesCompleted(this, new GetPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetPackageDetail", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPackageDetail(int PackageID, int ModeOfSale) {
            object[] results = this.Invoke("GetPackageDetail", new object[] {
                        PackageID,
                        ModeOfSale});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageDetailAsync(int PackageID, int ModeOfSale) {
            this.GetPackageDetailAsync(PackageID, ModeOfSale, null);
        }
        
        /// <remarks/>
        public void GetPackageDetailAsync(int PackageID, int ModeOfSale, object userState) {
            if ((this.GetPackageDetailOperationCompleted == null)) {
                this.GetPackageDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageDetailOperationCompleted);
            }
            this.InvokeAsync("GetPackageDetail", new object[] {
                        PackageID,
                        ModeOfSale}, this.GetPackageDetailOperationCompleted, userState);
        }
        
        private void OnGetPackageDetailOperationCompleted(object arg) {
            if ((this.GetPackageDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageDetailCompleted(this, new GetPackageDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/GetExistingOrdersInfo", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExistingOrdersInfo(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly) {
            object[] results = this.Invoke("GetExistingOrdersInfo", new object[] {
                        SessionKey,
                        Season,
                        ModeOfSale,
                        RenewalsOnly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistingOrdersInfoAsync(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly) {
            this.GetExistingOrdersInfoAsync(SessionKey, Season, ModeOfSale, RenewalsOnly, null);
        }
        
        /// <remarks/>
        public void GetExistingOrdersInfoAsync(string SessionKey, int Season, int ModeOfSale, bool RenewalsOnly, object userState) {
            if ((this.GetExistingOrdersInfoOperationCompleted == null)) {
                this.GetExistingOrdersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistingOrdersInfoOperationCompleted);
            }
            this.InvokeAsync("GetExistingOrdersInfo", new object[] {
                        SessionKey,
                        Season,
                        ModeOfSale,
                        RenewalsOnly}, this.GetExistingOrdersInfoOperationCompleted, userState);
        }
        
        private void OnGetExistingOrdersInfoOperationCompleted(object arg) {
            if ((this.GetExistingOrdersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistingOrdersInfoCompleted(this, new GetExistingOrdersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/LoadExistingOrder", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoadExistingOrder(string SessionKey, int OrderID) {
            this.Invoke("LoadExistingOrder", new object[] {
                        SessionKey,
                        OrderID});
        }
        
        /// <remarks/>
        public void LoadExistingOrderAsync(string SessionKey, int OrderID) {
            this.LoadExistingOrderAsync(SessionKey, OrderID, null);
        }
        
        /// <remarks/>
        public void LoadExistingOrderAsync(string SessionKey, int OrderID, object userState) {
            if ((this.LoadExistingOrderOperationCompleted == null)) {
                this.LoadExistingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadExistingOrderOperationCompleted);
            }
            this.InvokeAsync("LoadExistingOrder", new object[] {
                        SessionKey,
                        OrderID}, this.LoadExistingOrderOperationCompleted, userState);
        }
        
        private void OnLoadExistingOrderOperationCompleted(object arg) {
            if ((this.LoadExistingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadExistingOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("LineItemHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tessiturasoftware.com/AddPackageItem", RequestNamespace="http://tessiturasoftware.com/", ResponseNamespace="http://tessiturasoftware.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddPackageItem(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone) {
            this.Invoke("AddPackageItem", new object[] {
                        SessionKey,
                        ParentPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone});
        }
        
        /// <remarks/>
        public void AddPackageItemAsync(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone) {
            this.AddPackageItemAsync(SessionKey, ParentPackageLineItemId, PriceType, PackageNumber, NumberOfSeats, Zone, null);
        }
        
        /// <remarks/>
        public void AddPackageItemAsync(string SessionKey, int ParentPackageLineItemId, string PriceType, int PackageNumber, int NumberOfSeats, int Zone, object userState) {
            if ((this.AddPackageItemOperationCompleted == null)) {
                this.AddPackageItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPackageItemOperationCompleted);
            }
            this.InvokeAsync("AddPackageItem", new object[] {
                        SessionKey,
                        ParentPackageLineItemId,
                        PriceType,
                        PackageNumber,
                        NumberOfSeats,
                        Zone}, this.AddPackageItemOperationCompleted, userState);
        }
        
        private void OnAddPackageItemOperationCompleted(object arg) {
            if ((this.AddPackageItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPackageItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tessiturasoftware.com/", IsNullable=false)]
    public partial class LineItemHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int idField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceType {
        
        private int idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Performance {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceType[] priceTypesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
            }
        }
        
        /// <remarks/>
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
            }
        }
        
        /// <remarks/>
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
            }
        }
        
        /// <remarks/>
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
        
        /// <remarks/>
        public PriceType[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Section {
        
        private SectionPriceType[] priceTypesField;
        
        private string descriptionField;
        
        private int zoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("PriceType")]
        public SectionPriceType[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class SectionPriceType {
        
        private int idField;
        
        private decimal priceField;
        
        private decimal basePriceField;
        
        private int availCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal BasePrice {
            get {
                return this.basePriceField;
            }
            set {
                this.basePriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int AvailCount {
            get {
                return this.availCountField;
            }
            set {
                this.availCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceTypeEx {
        
        private int idField;
        
        private string descriptionField;
        
        private string shortDescriptionField;
        
        private bool promotionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Promotion {
            get {
                return this.promotionField;
            }
            set {
                this.promotionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceEx {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceTypeEx[] priceTypesField;
        
        private bool promoIndField;
        
        private bool generalAvailabilityField;
        
        private string timeSlotDescriptionField;
        
        private PerformanceWebContent[] webContentCollectionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
            }
        }
        
        /// <remarks/>
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
            }
        }
        
        /// <remarks/>
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
            }
        }
        
        /// <remarks/>
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
        
        /// <remarks/>
        public PriceTypeEx[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
            }
        }
        
        /// <remarks/>
        public bool PromoInd {
            get {
                return this.promoIndField;
            }
            set {
                this.promoIndField = value;
            }
        }
        
        /// <remarks/>
        public bool GeneralAvailability {
            get {
                return this.generalAvailabilityField;
            }
            set {
                this.generalAvailabilityField = value;
            }
        }
        
        /// <remarks/>
        public string TimeSlotDescription {
            get {
                return this.timeSlotDescriptionField;
            }
            set {
                this.timeSlotDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("WebContent")]
        public PerformanceWebContent[] WebContentCollection {
            get {
                return this.webContentCollectionField;
            }
            set {
                this.webContentCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceWebContent {
        
        private int origInvNoField;
        
        private int invNoField;
        
        private string invTypeField;
        
        private int contentTypeField;
        
        private string contentTypeDescField;
        
        private string contentValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int OrigInvNo {
            get {
                return this.origInvNoField;
            }
            set {
                this.origInvNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int InvNo {
            get {
                return this.invNoField;
            }
            set {
                this.invNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string InvType {
            get {
                return this.invTypeField;
            }
            set {
                this.invTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentTypeDesc {
            get {
                return this.contentTypeDescField;
            }
            set {
                this.contentTypeDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ContentValue {
            get {
                return this.contentValueField;
            }
            set {
                this.contentValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class EmailBodyPart {
        
        private string encodingField;
        
        private string bodyField;
        
        private string contentTypeField;
        
        /// <remarks/>
        public string Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class Email {
        
        private string toAddressesField;
        
        private string fromAddressField;
        
        private string cCAddressesField;
        
        private string bccAddressesField;
        
        private string subjectField;
        
        private EmailBodyPart[] bodyPartsField;
        
        /// <remarks/>
        public string ToAddresses {
            get {
                return this.toAddressesField;
            }
            set {
                this.toAddressesField = value;
            }
        }
        
        /// <remarks/>
        public string FromAddress {
            get {
                return this.fromAddressField;
            }
            set {
                this.fromAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CCAddresses {
            get {
                return this.cCAddressesField;
            }
            set {
                this.cCAddressesField = value;
            }
        }
        
        /// <remarks/>
        public string BccAddresses {
            get {
                return this.bccAddressesField;
            }
            set {
                this.bccAddressesField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public EmailBodyPart[] BodyParts {
            get {
                return this.bodyPartsField;
            }
            set {
                this.bodyPartsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PriceTypeEx2 {
        
        private int idField;
        
        private string descriptionField;
        
        private string shortDescriptionField;
        
        private bool promotionField;
        
        private int promoMaxQuantityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Promotion {
            get {
                return this.promotionField;
            }
            set {
                this.promotionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PromoMaxQuantity {
            get {
                return this.promoMaxQuantityField;
            }
            set {
                this.promoMaxQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    public partial class PerformanceEx2 {
        
        private int idField;
        
        private string titleField;
        
        private System.DateTime performanceDateField;
        
        private string zoneMapField;
        
        private string venueField;
        
        private Section[] sectionsField;
        
        private PriceTypeEx2[] priceTypesField;
        
        private bool promoIndField;
        
        private bool generalAvailabilityField;
        
        private string timeSlotDescriptionField;
        
        private PerformanceWebContent[] webContentCollectionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PerformanceDate {
            get {
                return this.performanceDateField;
            }
            set {
                this.performanceDateField = value;
            }
        }
        
        /// <remarks/>
        public string ZoneMap {
            get {
                return this.zoneMapField;
            }
            set {
                this.zoneMapField = value;
            }
        }
        
        /// <remarks/>
        public string Venue {
            get {
                return this.venueField;
            }
            set {
                this.venueField = value;
            }
        }
        
        /// <remarks/>
        public Section[] Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
        
        /// <remarks/>
        public PriceTypeEx2[] PriceTypes {
            get {
                return this.priceTypesField;
            }
            set {
                this.priceTypesField = value;
            }
        }
        
        /// <remarks/>
        public bool PromoInd {
            get {
                return this.promoIndField;
            }
            set {
                this.promoIndField = value;
            }
        }
        
        /// <remarks/>
        public bool GeneralAvailability {
            get {
                return this.generalAvailabilityField;
            }
            set {
                this.generalAvailabilityField = value;
            }
        }
        
        /// <remarks/>
        public string TimeSlotDescription {
            get {
                return this.timeSlotDescriptionField;
            }
            set {
                this.timeSlotDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("WebContent")]
        public PerformanceWebContent[] WebContentCollection {
            get {
                return this.webContentCollectionField;
            }
            set {
                this.webContentCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tessiturasoftware.com/", IsNullable=false)]
    public partial class LoginAttemptHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int failedAttemptsField;
        
        private System.DateTime lockedDateField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int FailedAttempts {
            get {
                return this.failedAttemptsField;
            }
            set {
                this.failedAttemptsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LockedDate {
            get {
                return this.lockedDateField;
            }
            set {
                this.lockedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tessiturasoftware.com/", IsNullable=false)]
    public partial class SubPackageLineItemHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int idField;
        
        private int superPackageLineItemIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SuperPackageLineItemId {
            get {
                return this.superPackageLineItemIdField;
            }
            set {
                this.superPackageLineItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tessiturasoftware.com/", IsNullable=false)]
    public partial class CheckoutStatusHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string statusField;
        
        private string messageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tessiturasoftware.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tessiturasoftware.com/", IsNullable=false)]
    public partial class NFSPackageLineItemHeader : System.Web.Services.Protocols.SoapHeader {
        
        private int idField;
        
        private int nFSPackageLineItemIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int NFSPackageLineItemId {
            get {
                return this.nFSPackageLineItemIdField;
            }
            set {
                this.nFSPackageLineItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsBriefCompletedEventHandler(object sender, GetSeatsBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReserveTicketsExCompletedEventHandler(object sender, ReserveTicketsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveTicketsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveTicketsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SMTPListeningCompletedEventHandler(object sender, SMTPListeningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMTPListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SMTPListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalculateFeesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventHandler(object sender, GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailWithDiscountingSYOSDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiftAidInfoCompletedEventHandler(object sender, GetGiftAidInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiftAidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiftAidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateLimitsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailWithDiscountingSYOSExCompletedEventHandler(object sender, GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailWithDiscountingSYOSExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PerformanceEx2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PerformanceEx2)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformancesEx4CompletedEventHandler(object sender, GetPerformancesEx4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesEx4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesEx4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionDetailEx3CompletedEventHandler(object sender, GetProductionDetailEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionDetailEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionDetailEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConstituentsExCompletedEventHandler(object sender, GetConstituentsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstituentsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstituentsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PrintTicketsCompletedEventHandler(object sender, PrintTicketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DestroyCacheCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAssociationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveAssociationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddConstituentCompletedEventHandler(object sender, AddConstituentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConstituentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConstituentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateRankingCompletedEventHandler(object sender, UpdateRankingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateConstituentInterestsExCompletedEventHandler(object sender, UpdateConstituentInterestsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConstituentInterestsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConstituentInterestsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEAddressCompletedEventHandler(object sender, UpdateEAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByZonesCompletedEventHandler(object sender, GetSeatsByZonesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByZonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByZonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByZonesBriefCompletedEventHandler(object sender, GetSeatsByZonesBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByZonesBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByZonesBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsBySectionsCompletedEventHandler(object sender, GetSeatsBySectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsBySectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsBySectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsBySectionsBriefCompletedEventHandler(object sender, GetSeatsBySectionsBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsBySectionsBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsBySectionsBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetZonesPerSectionCompletedEventHandler(object sender, GetZonesPerSectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZonesPerSectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZonesPerSectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScreensCompletedEventHandler(object sender, GetScreensCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScreensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScreensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisconnectSessionSeatServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WebSeatServerConnectionCountCompletedEventHandler(object sender, WebSeatServerConnectionCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebSeatServerConnectionCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebSeatServerConnectionCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionsCompletedEventHandler(object sender, GetProductionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionCreditsCompletedEventHandler(object sender, GetProductionCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginExCompletedEventHandler(object sender, LoginExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTicketHistoryCompletedEventHandler(object sender, GetTicketHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubscriptionHistoryCompletedEventHandler(object sender, GetSubscriptionHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubscriptionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubscriptionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOrderCommentsEx2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPromoCodeExCompletedEventHandler(object sender, GetPromoCodeExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromoCodeExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromoCodeExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionsExCompletedEventHandler(object sender, GetProductionsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAPIDiagnosticsCompletedEventHandler(object sender, GetAPIDiagnosticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAPIDiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAPIDiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateTessituraUserCompletedEventHandler(object sender, ValidateTessituraUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateTessituraUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateTessituraUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckoutEx2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailSYOSDataSetCompletedEventHandler(object sender, GetPerformanceDetailSYOSDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailSYOSDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailSYOSDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdatePhoneCompletedEventHandler(object sender, UpdatePhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemovePhoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSpecialActivityCompletedEventHandler(object sender, UpdateSpecialActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSpecialActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSpecialActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpecialActivitiesCompletedEventHandler(object sender, GetSpecialActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecialActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateConstituencyCompletedEventHandler(object sender, UpdateConstituencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConstituencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConstituencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveConstituencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetHoldCodesCompletedEventHandler(object sender, GetHoldCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHoldCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHoldCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateHoldCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveHoldCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrderConfirmationEmailCompletedEventHandler(object sender, GetOrderConfirmationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Email Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Email)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendOrderConfirmationEmailCompletedEventHandler(object sender, SendOrderConfirmationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestOrderConfirmationEmailCompletedEventHandler(object sender, TestOrderConfirmationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AlterTicketExpirationCompletedEventHandler(object sender, AlterTicketExpirationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlterTicketExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AlterTicketExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTicketExpirationCompletedEventHandler(object sender, GetTicketExpirationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMaxTicketAmountCompletedEventHandler(object sender, GetMaxTicketAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxTicketAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxTicketAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLocalDataExCompletedEventHandler(object sender, GetLocalDataExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalDataExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalDataExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformancesEx2CompletedEventHandler(object sender, GetPerformancesEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionsEx2CompletedEventHandler(object sender, GetProductionsEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionsEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionsEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackagesEx2CompletedEventHandler(object sender, GetPackagesEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackagesEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackagesEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExecuteLocalProcedureCompletedEventHandler(object sender, ExecuteLocalProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteLocalProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteLocalProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendCredentialsCompletedEventHandler(object sender, SendCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginEx2CompletedEventHandler(object sender, LoginEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeModeOfSaleExCompletedEventHandler(object sender, ChangeModeOfSaleExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeModeOfSaleExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeModeOfSaleExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSourceCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreatePaymentPlanCompletedEventHandler(object sender, CreatePaymentPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateTessituraUserExCompletedEventHandler(object sender, ValidateTessituraUserExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateTessituraUserExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateTessituraUserExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPermissionsCompletedEventHandler(object sender, GetPermissionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatSummaryCompletedEventHandler(object sender, GetSeatSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckoutEx3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPrintAtHomeSettingsCompletedEventHandler(object sender, GetPrintAtHomeSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintAtHomeSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintAtHomeSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConstituentInfoExCompletedEventHandler(object sender, GetConstituentInfoExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstituentInfoExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstituentInfoExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformancesEx3CompletedEventHandler(object sender, GetPerformancesEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionsEx3CompletedEventHandler(object sender, GetProductionsEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionsEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionsEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackagesEx3CompletedEventHandler(object sender, GetPackagesEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackagesEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackagesEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailExCompletedEventHandler(object sender, GetPerformanceDetailExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailWithDiscountingExCompletedEventHandler(object sender, GetPerformanceDetailWithDiscountingExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailWithDiscountingExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailWithDiscountingExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetContactOptionsCompletedEventHandler(object sender, GetContactOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMailPurposesCompletedEventHandler(object sender, GetMailPurposesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailPurposesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailPurposesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateGiftAidDeclarationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBillingSchedulesCompletedEventHandler(object sender, GetBillingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageDetailExCompletedEventHandler(object sender, GetPackageDetailExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageDetailWithDiscountingExCompletedEventHandler(object sender, GetPackageDetailWithDiscountingExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageDetailWithDiscountingExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageDetailWithDiscountingExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNFSPackageDetailExCompletedEventHandler(object sender, GetNFSPackageDetailExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNFSPackageDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNFSPackageDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClearCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubLineItemsCompletedEventHandler(object sender, GetSubLineItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubLineItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubLineItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyOnAccountCompletedEventHandler(object sender, ApplyOnAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyOnAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyOnAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOnAccountInfoCompletedEventHandler(object sender, GetOnAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyDiscountCompletedEventHandler(object sender, ApplyDiscountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateSubLineItemPriceCompletedEventHandler(object sender, UpdateSubLineItemPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSubLineItemPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSubLineItemPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAddressExCompletedEventHandler(object sender, UpdateAddressExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAddressExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAddressExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionDetailEx2CompletedEventHandler(object sender, GetProductionDetailEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionDetailEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionDetailEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDefaultsCompletedEventHandler(object sender, GetDefaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RequestReprintCompletedEventHandler(object sender, RequestReprintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailWithDiscountingSYOSCompletedEventHandler(object sender, GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailWithDiscountingSYOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PerformanceEx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PerformanceEx)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsCompletedEventHandler(object sender, GetSeatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemovePackageItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageItemCompletedEventHandler(object sender, GetPackageItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOrderCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveOrderCommentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckoutExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetModeOfSaleRulesCompletedEventHandler(object sender, GetModeOfSaleRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModeOfSaleRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModeOfSaleRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PurchaseGiftCertificateCompletedEventHandler(object sender, PurchaseGiftCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseGiftCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseGiftCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ApplyGiftCertificateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveGiftCertificateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddPaymentPlanInstallmentCompletedEventHandler(object sender, AddPaymentPlanInstallmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentPlanInstallmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentPlanInstallmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemovePaymentPlanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FinalizePaymentPlanCompletedEventHandler(object sender, FinalizePaymentPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinalizePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinalizePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidatePaymentPlanCompletedEventHandler(object sender, ValidatePaymentPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePaymentPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePaymentPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConstituentInfoCompletedEventHandler(object sender, GetConstituentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstituentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstituentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailWithDiscountingCompletedEventHandler(object sender, GetPerformanceDetailWithDiscountingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailWithDiscountingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailWithDiscountingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageDetailWithDiscountingCompletedEventHandler(object sender, GetPackageDetailWithDiscountingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageDetailWithDiscountingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageDetailWithDiscountingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountInfoExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WebSeatServerListeningCompletedEventHandler(object sender, WebSeatServerListeningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebSeatServerListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebSeatServerListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddPackageItemSeatedCompletedEventHandler(object sender, AddPackageItemSeatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPackageItemSeatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPackageItemSeatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReserveTicketsSpecifiedSeatsCompletedEventHandler(object sender, ReserveTicketsSpecifiedSeatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveTicketsSpecifiedSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveTicketsSpecifiedSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ForgotLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdatePriceTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateCustomOfferCompletedEventHandler(object sender, ValidateCustomOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCustomOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCustomOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetKeywordsExCompletedEventHandler(object sender, GetKeywordsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeywordsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeywordsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByScreenCompletedEventHandler(object sender, GetSeatsByScreenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByScreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByScreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByScreenBriefCompletedEventHandler(object sender, GetSeatsByScreenBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByScreenBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByScreenBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatStatusCompletedEventHandler(object sender, GetSeatStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformancesExCompletedEventHandler(object sender, GetPerformancesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackagesExCompletedEventHandler(object sender, GetPackagesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackagesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackagesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConstituentsCompletedEventHandler(object sender, GetConstituentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConstituentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConstituentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrdersExCompletedEventHandler(object sender, GetOrdersExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTicketPrintInformationCompletedEventHandler(object sender, GetTicketPrintInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketPrintInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketPrintInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateConstituentAttributesCompletedEventHandler(object sender, UpdateConstituentAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConstituentAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConstituentAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateConstituentInterestsCompletedEventHandler(object sender, UpdateConstituentInterestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConstituentInterestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConstituentInterestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrdersForDeliveryCompletedEventHandler(object sender, GetOrdersForDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersForDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersForDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateEmailStatusCompletedEventHandler(object sender, UpdateEmailStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmailStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmailStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNewSessionKeyExCompletedEventHandler(object sender, GetNewSessionKeyExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewSessionKeyExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewSessionKeyExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCartBriefCompletedEventHandler(object sender, GetCartBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateGiftAidInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TransferCartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddSubPackageItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddSubPackageItemSeatedCompletedEventHandler(object sender, AddSubPackageItemSeatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSubPackageItemSeatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSubPackageItemSeatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCustomOrderDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOrderCommentsExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveOrderCommentsExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionDetailExCompletedEventHandler(object sender, GetProductionDetailExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLocalDataCompletedEventHandler(object sender, GetLocalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateLocalDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPromoCodeCompletedEventHandler(object sender, GetPromoCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStateProvinceExCompletedEventHandler(object sender, GetStateProvinceExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateProvinceExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateProvinceExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateSuperPackagesCompletedEventHandler(object sender, ValidateSuperPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSuperPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSuperPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TessituraSeatServerListeningViaWebSeatServerCompletedEventHandler(object sender, TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TessituraSeatServerListeningViaWebSeatServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TessituraCreditCardServerListeningCompletedEventHandler(object sender, TessituraCreditCardServerListeningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TessituraCreditCardServerListeningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TessituraCreditCardServerListeningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrderDetailsCompletedEventHandler(object sender, GetOrderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginConstituentCompletedEventHandler(object sender, LoginConstituentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginConstituentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginConstituentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveSuperPackageItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByZoneCompletedEventHandler(object sender, GetSeatsByZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsByZoneBriefCompletedEventHandler(object sender, GetSeatsByZoneBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsByZoneBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsByZoneBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailSYOSCompletedEventHandler(object sender, GetPerformanceDetailSYOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailSYOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailSYOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Performance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Performance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddNFSPackagePerformanceItemCompletedEventHandler(object sender, AddNFSPackagePerformanceItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNFSPackagePerformanceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNFSPackagePerformanceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNFSPackageDetailCompletedEventHandler(object sender, GetNFSPackageDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNFSPackageDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNFSPackageDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateNFSPackagesCompletedEventHandler(object sender, ValidateNFSPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateNFSPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateNFSPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveNFSPackageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsBySectionCompletedEventHandler(object sender, GetSeatsBySectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsBySectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsBySectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeatsBySectionBriefCompletedEventHandler(object sender, GetSeatsBySectionBriefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeatsBySectionBriefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeatsBySectionBriefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGiftCertificateInfoCompletedEventHandler(object sender, GetGiftCertificateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiftCertificateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiftCertificateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCityStateProvinceByPostalCodeCompletedEventHandler(object sender, GetCityStateProvinceByPostalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityStateProvinceByPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityStateProvinceByPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAddressCompletedEventHandler(object sender, UpdateAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountInfoEx2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateOrderDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWebContentCompletedEventHandler(object sender, GetWebContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFeesCompletedEventHandler(object sender, GetFeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveFeeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReturnTicketsCompletedEventHandler(object sender, GetReturnTicketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReturnTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReturnTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReturnTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAttributesCompletedEventHandler(object sender, GetAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductionDetailCompletedEventHandler(object sender, GetProductionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformancesCompletedEventHandler(object sender, GetPerformancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceDetailCompletedEventHandler(object sender, GetPerformanceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetKeywordsCompletedEventHandler(object sender, GetKeywordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVenueCompletedEventHandler(object sender, GetVenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPerformanceAvailabilityCompletedEventHandler(object sender, GetPerformanceAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPerformanceAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPerformanceAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReserveTicketsCompletedEventHandler(object sender, ReserveTicketsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveTicketsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveTicketsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReserveTickets1CompletedEventHandler(object sender, ReserveTickets1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveTickets1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveTickets1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReserveTicketsUnseatedCompletedEventHandler(object sender, ReserveTicketsUnseatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveTicketsUnseatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveTicketsUnseatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReleaseTicketsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddContributionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RemoveContribuionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCartCompletedEventHandler(object sender, GetCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAddressAndShippingMethodCompletedEventHandler(object sender, GetAddressAndShippingMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressAndShippingMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressAndShippingMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetShippingMethodsCompletedEventHandler(object sender, GetShippingMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShippingMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShippingMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetShippingInformationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPaymentMethodCompletedEventHandler(object sender, GetPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetOrderCompletedEventHandler(object sender, GetOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OrderExistsCompletedEventHandler(object sender, OrderExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterWithPromoCodeCompletedEventHandler(object sender, RegisterWithPromoCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginWithPromoCodeCompletedEventHandler(object sender, LoginWithPromoCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateLoginCompletedEventHandler(object sender, UpdateLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateLoginWithPromoCodeCompletedEventHandler(object sender, UpdateLoginWithPromoCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLoginWithPromoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLoginWithPromoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginInfoCompletedEventHandler(object sender, LoginInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAccountInfoCompletedEventHandler(object sender, GetAccountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateAccountInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertNewShippingAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoggedInCompletedEventHandler(object sender, LoggedInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNewSessionKeyCompletedEventHandler(object sender, GetNewSessionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateLastAccessTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVariablesCompletedEventHandler(object sender, GetVariablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVariablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVariablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetVariableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteVariableCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TransferSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCustomerServiceIssueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStateProvinceCompletedEventHandler(object sender, GetStateProvinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateProvinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateProvinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeModeOfSaleCompletedEventHandler(object sender, ChangeModeOfSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeModeOfSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeModeOfSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackagesCompletedEventHandler(object sender, GetPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPackageDetailCompletedEventHandler(object sender, GetPackageDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExistingOrdersInfoCompletedEventHandler(object sender, GetExistingOrdersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistingOrdersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistingOrdersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoadExistingOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddPackageItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591