<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CaptchaMvc</name>
    </assembly>
    <members>
        <member name="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute">
            <summary>
            Attribute to validate the captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Called by the ASP.NET MVC framework before the action method executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.GetErrorMessage">
            <summary>
            Returns an error message.
            </summary>
            <returns>The error message.</returns>
        </member>
        <member name="P:CaptchaMvc.Attributes.CaptchaVerifyAttribute.TextError">
            <summary>
            Gets or sets an error message to associate with a validation control if validation fails.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Attributes.CaptchaVerifyAttribute.ResourceAccessor">
            <summary>
            Gets or sets a <see cref="T:System.Reflection.MethodInfo"/> for access to the resource message.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Controllers.DefaultCaptchaController">
            <summary>
            The controller is responsible for creating and updating captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Controllers.DefaultCaptchaController.Generate">
            <summary>
            Generate a new captcha image.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Controllers.DefaultCaptchaController.Refresh">
            <summary>
            Refresh a captcha.
            </summary>
            <returns>The specified <see cref="T:System.Web.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="T:CaptchaMvc.HtmlHelpers.CaptchaHelper">
            <summary>
            Provides extension methods to work with the captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32)">
            <summary>
            Create a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="length">The specified length of characters.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32)">
            <summary>
            Create a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="textRefreshButton">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="length">The specified length of characters.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.String)">
            <summary>
            Create a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="textRefreshButton">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="length">The specified length of characters.</param>
            <param name="requiredMessageText">The specified required message text.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32,System.String)">
            <summary>
            Create a new captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="length">The specified length of characters.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Create a new captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="length">The specified length of characters.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper)">
            <summary>
            Create a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <returns>The html string with a math captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Create a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="textRefreshButton">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <returns>The html string with a math captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            Create a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="textRefreshButton">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="requiredMessageText">The specified required message text.</param>
            <returns>The html string with a math captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Create a new math captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <returns>The html string with a math captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Create a new math captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <returns>The html string with a math captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.IsCaptchaVerify(System.Web.Mvc.ControllerBase,System.String)">
            <summary>
            Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controllerBase">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <param name="textError">The specified error message.</param>
            <returns><c>True</c> if the captcha is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.CaptchaUtils">
            <summary>
            Provides methods to work with the captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.GenerateCaptcha(System.Web.Mvc.HtmlHelper,CaptchaMvc.Models.ParameterModel[])">
            <summary>
            Create a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="parameters">The specified attributes.</param>
            <returns>The html string with a captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.ValidateCaptcha(System.Web.Mvc.ControllerBase,CaptchaMvc.Models.ParameterModel[])">
            <summary>
            Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <param name="attributes">The specified attributes.</param>
            <returns><c>True</c> if the captcha is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.TryFindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="name"></param>
            <param name="result"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.TryFindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String,``0@)">
            <summary>
            Gets the value associated with the specified name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="name"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.FindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String)">
            <summary>
            Gets the value associated with the specified name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.IsContain(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String)">
            <summary>
            Determines whether the collection of parameters contains a specific value.
            </summary>
            <param name="parameters">The specified collection of parameters.</param>
            <param name="name">The parameter name for search.</param>
            <returns><c>True</c> if the parameter is found in the collection; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.BuilderProvider">
            <summary>
            Gets or sets the current <see cref="T:CaptchaMvc.Interface.ICaptchaBuilderProvider"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.CaptchaManager">
            <summary>
            Gets or sets the current <see cref="T:CaptchaMvc.Interface.ICaptchaManager"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.ImageGenerator">
            <summary>
            Gets or sets the current <see cref="T:CaptchaMvc.Interface.IGenerateImage"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.CookieStorageProvider">
            <summary>
            Represents the storage to save a captcha tokens in cookie.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IStorageProvider">
            <summary>
            Represents the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
            Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/></param>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.GetDrawingValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.GetValidationValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="cookieName">The specified cookie name.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
            <param name="cookieName">The specified cookie name.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
            <param name="cookieName">The specified cookie name.</param>
            <param name="password">The specified password to encrypt cookie</param>
            <param name="salt">The specified salt to encrypt cookie</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
            Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/></param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.GetDrawingValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.GetValidationValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Serialize(CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
            Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <param name="captchaValue">The specified <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Deserialize(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="value">The specified serialize state.</param>
            <returns>The result <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.CookieName">
            <summary>
            Gets or sets the cookie name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.ExpiresMinutes">
            <summary>
            Expires of the cookie in minutes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.Password">
            <summary>
            Gets or sets the password to encrypt cookie.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.Salt">
            <summary>
            Gets or sets the salt to encrypt cookie.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder">
            <summary>
            Default implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaBulder">
            <summary>
            Represents the base model to create a new captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBulder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateCaptchaImage(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a html string to represent the image.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the image.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateTokenElement(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a html string to represent the token element.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the token element.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateInputElement(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a html string to represent the input element.
            </summary>
            <param name="buildInfo">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the input element.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateRefreshButton(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a html string to represent the refresh button element.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the refresh button element.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider">
            <summary>
            A base class for work with captcha.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaBuilderProvider">
            <summary>
            Provides basic methods for creating captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.GenerateCaptcha(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.WriteCaptchaImage(System.Web.HttpResponseBase,CaptchaMvc.Interface.IDrawingModel)">
            <summary>
            Create a captcha image for specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> and write it in response.
            </summary>
            <param name="response">The specified <see cref="T:System.Web.HttpResponseBase"/>.</param>
            <param name="drawingModel">The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.</param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.WriteErrorImage(System.Web.HttpResponseBase)">
            <summary>
            Create a captcha error image and write it in response.
            </summary>
            <param name="response">The specified <see cref="T:System.Web.HttpResponse"/>.</param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.RefreshCaptcha(CaptchaMvc.Interface.IUpdateInfoModel)">
            <summary>
            Generate a java-script to update the captcha.
            </summary>
            <param name="updateInfo">The specified <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.</param>
            <returns>The specified <see cref="T:System.Web.Mvc.ActionResult"/> to update the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.GenerateCaptcha(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.WriteCaptchaImage(System.Web.HttpResponseBase,CaptchaMvc.Interface.IDrawingModel)">
            <summary>
            Create a captcha image for specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> and write it in response.
            </summary>
            <param name="response">The specified <see cref="T:System.Web.HttpResponseBase"/>.</param>
            <param name="drawingModel">The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.WriteErrorImage(System.Web.HttpResponseBase)">
            <summary>
            Create a captcha error image and write it in response.
            </summary>
            <param name="response">The specified <see cref="T:System.Web.HttpResponse"/>.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.RefreshCaptcha(CaptchaMvc.Interface.IUpdateInfoModel)">
            <summary>
            Generate a java-script to update the captcha.
            </summary>
            <param name="updateInfo">The specified <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.</param>
            <returns>The specified <see cref="T:System.Web.Mvc.ActionResult"/> to update the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.GetCaptchaBuilder(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Get the <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build captcha with specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/>.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager">
            <summary>
            Provides basic methods for work with captcha.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaManager">
            <summary>
            Provides basic methods for work with captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.GenerateNew(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
            Create a <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create a new captcha.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.GetDrawingModel(System.Web.HttpRequestBase)">
            <summary>
            Create a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="request">The specified <see cref="T:System.Web.HttpRequestBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.Update(System.Web.HttpRequestBase)">
            <summary>
            Create a new <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for update a captcha.
            </summary>
            <param name="request">The specified <see cref="T:System.Web.HttpRequestBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.ValidateCaptcha(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
            Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <returns><c>True</c> if the captcha is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.StorageProvider">
            <summary>
            Gets or sets the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.IsRequiredAttribute">
            <summary>
            The required parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.RequiredMessageAttribute">
            <summary>
            The required message parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ErrorAttribute">
            <summary>
            The error message parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.LengthAttribute">
            <summary>
            The length of characters parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.RefreshTextAttribute">
            <summary>
            The refresh button text parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.InputTextAttribute">
            <summary>
            The input text parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.MathCaptchaAttribute">
            <summary>
            The math parameter key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.PartialViewNameAttribute">
            <summary>
            The partial view key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.PartialViewDataAttribute">
            <summary>
            The partial view data attribute.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.#ctor(CaptchaMvc.Interface.IStorageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.#ctor(CaptchaMvc.Interface.IStorageProvider,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateBuildInfo(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue},System.String,System.String)">
            <summary>
            Create an <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for the specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</param>
            <param name="imgUrl">The specified image url.</param>
            <param name="refreshUrl">The specified refresh url.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateCaptchaPair(CaptchaMvc.Interface.IParameterContainer,CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
            Generate a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a captcha.
            </summary>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <param name="oldValue">The old value if any.</param>
            <returns>An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateDrawingModel(CaptchaMvc.Interface.IParameterContainer,CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
            Create a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <param name="captchaValue">The specified <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateMathCaptcha">
            <summary>
            Generate a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a math captcha.
            </summary>
            <returns>An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateSimpleCaptcha(System.Int32)">
            <summary>
            Generate a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a text captcha.
            </summary>
            <param name="length">The specified length of characters.</param>
            <returns>An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.WriteError(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
            Write an error message.
            </summary>
            <param name="controllerBase">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateImageUrl(System.Web.Mvc.UrlHelper,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
            Generate a URL for a captcha image.
            </summary>
            <param name="urlHelper">The specified <see cref="T:System.Web.Mvc.UrlHelper"/>.</param>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</param>
            <returns>The url of captcha image.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateRefreshUrl(System.Web.Mvc.UrlHelper,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
            Generate a URL for a refresh captcha.
            </summary>
            <param name="urlHelper">The specified <see cref="T:System.Web.Mvc.UrlHelper"/>.</param>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</param>
            <returns>The url of refresh captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GetCharacters">
            <summary>
            Get the characters for creating captcha.
            </summary>
            <returns>The characters.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateNew(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
            Create a <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create a new captcha.
            </summary>
            <param name="htmlHelper">The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GetDrawingModel(System.Web.HttpRequestBase)">
            <summary>
            Create a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="request">The specified <see cref="T:System.Web.HttpRequestBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.Update(System.Web.HttpRequestBase)">
            <summary>
            Create a new <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for update a captcha.
            </summary>
            <param name="request">The specified <see cref="T:System.Web.HttpRequestBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ValidateCaptcha(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
            Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <param name="parameterContainer">The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.</param>
            <returns><c>True</c> if the captcha is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.TokenParameterName">
            <summary>
            The token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.InputElementName">
            <summary>
            The input element name in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ImageElementName">
            <summary>
            The image element name in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.TokenElementName">
            <summary>
            The token element name in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.StorageProvider">
            <summary>
            Gets or sets the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultGenerateImage">
            <summary>
            The base implementation of the generation of images.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IGenerateImage">
            <summary>
            Interface for implementing captcha image.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IGenerateImage.Generate(System.String)">
            <summary>
             Create a captcha image.
            </summary>
            <param name="captchaText">The specified text for image.</param>
            <returns>The captcha image.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultGenerateImage.Generate(System.String)">
            <summary>
            Creating an image for a Captcha.
            </summary>
            <param name="captchaText">Text Captcha.</param>
            <returns></returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultGenerateImage.DeformPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Deform the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="graphicsPath">The specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/></param>
            <returns>The deformed <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.MathCaptchaBuilder">
            <summary>
            Implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build math captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MathCaptchaBuilder.GenerateRefreshButton(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a html string to represent the refresh button element.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the refresh button element.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.ParameterModelContainer">
            <summary>
            Adapter for use with the collection of <see cref="T:CaptchaMvc.Models.ParameterModel"/> as a <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IParameterContainer">
            <summary>
            Represents a container with values​​.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.IsContain(System.String)">
            <summary>
            Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.TryGet``1(System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Interface.IParameterContainer.ParameterProvider">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.#ctor(System.Collections.Generic.IList{CaptchaMvc.Models.ParameterModel})">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.ParameterModelContainer"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.IsContain(System.String)">
            <summary>
            Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of <c>T</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.TryGet``1(System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.ParameterModelContainer.ParameterProvider">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.PartialCaptchaBuilder">
            <summary>
            Implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build partial captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.PartialCaptchaBuilder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
            Create a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.</param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RandomNumber">
            <summary>
            Generates the random numbers.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next">
            <summary>
            Generate a positive random number.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next(System.Int32)">
            <summary>
            Generate a positive random number.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next(System.Int32,System.Int32)">
            <summary>
            Generate a positive random number.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RandomText">
            <summary>
            Generates the random text.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomText.Generate(System.String,System.Int32)">
            <summary>
            Generates the random text.
            </summary>
            <param name="chars">The specified characters.</param>
            <param name="count">The number of characters.</param>
            <returns>The random text</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RequestParameterContainer">
            <summary>
            Adapter for use with the <see cref="T:System.Web.HttpRequestBase"/> as a <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.#ctor(System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.RequestParameterContainer"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.IsContain(System.String)">
            <summary>
            Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.TryGet``1(System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.RequestParameterContainer.ParameterProvider">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.SessionStorageProvider">
            <summary>
            Represents the storage to save a captcha tokens in session.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.SessionStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.SessionStorageProvider"/> class.
            </summary>
            <param name="maxCount">Gets or sets the maximum values.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
            Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/></param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.GetDrawingValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.GetValidationValue(System.String)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The token of the value to get.</param>
            <returns>When this method returns, contains the value associated with the specified token, if the token is found; otherwise, return <c>null</c> value.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.MaxCount">
            <summary>
            Gets or sets the maximum values.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.ValidateKeys">
            <summary>
            Contains tokens that have not yet been validated.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.DrawingKeys">
            <summary>
            Contains tokens that have not yet been displayed.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IBuildInfoModel">
            <summary>
            Represents the base model with information for create a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenParameterName">
            <summary>
            Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RequiredMessage">
            <summary>
            Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.IsRequired">
            <summary>
            Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RefreshButtonText">
            <summary>
            Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.InputText">
            <summary>
            Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper">
            <summary>
            Gets the specified <see cref="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.InputElementId">
            <summary>
            Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.ImageUrl">
            <summary>
            Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RefreshUrl">
            <summary>
            Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaValue">
            <summary>
            Represents the base model for storing ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.Serialize">
            <summary>
            Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <returns>The result string.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.Deserialize(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="serializeState">The specified serialize state.</param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.IsEqual(System.String)">
            <summary>
            Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText">The specified input text.</param>
            <returns><c>True</c> if the value is equals; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaValue.CaptchaText">
            <summary>
            Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaValue.Value">
            <summary>
            Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IDrawingModel">
            <summary>
            Represents the base model with information for drawing a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IDrawingModel.Attributes">
            <summary>
            Gets the specified attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IDrawingModel.Text">
            <summary>
            Gets the specified text for render.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IUpdateInfoModel">
            <summary>
            Represents the base model with information for update a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.ImageUrl">
            <summary>
            Gets the url with captcha image.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.BaseBuildInfoModel">
            <summary>
            Represents the base model with information for create a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.BaseBuildInfoModel.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.BaseBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenParameterName">
            <summary>
            Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RequiredMessage">
            <summary>
            Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.IsRequired">
            <summary>
            Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RefreshButtonText">
            <summary>
            Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.InputText">
            <summary>
            Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.HtmlHelper">
            <summary>
            Gets the specified <see cref="P:CaptchaMvc.Models.BaseBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.InputElementId">
            <summary>
            Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.ImageUrl">
            <summary>
            Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RefreshUrl">
            <summary>
            Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.CaptchaValueBase">
            <summary>
                Represents the base model for storing ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.Serialize">
            <summary>
                Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <returns> The result string. </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.Deserialize(System.String)">
            <summary>
                Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="serializeState"> The specified serialize state. </param>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns> <c>True</c> if the value is equals; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.GetSeparator">
            <summary>
            Gets the separator which will be used for serialize values.
            </summary>
            <returns>An instance of <see cref="T:System.String"/> .</returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.GetOptionalValue">
            <summary>
                Gets the optional values to serialize.
            </summary>
            <returns> An instance of <see cref="T:System.String"/> . </returns>
        </member>
        <member name="P:CaptchaMvc.Models.CaptchaValueBase.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.CaptchaValueBase.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultBuildInfoModel">
            <summary>
            Represents the default model with information for create a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultBuildInfoModel.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultDrawingModel">
            <summary>
            Represents the base model with information for drawing a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultDrawingModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultDrawingModel"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultDrawingModel.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultDrawingModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultDrawingModel.Attributes">
            <summary>
            Gets the specified attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultDrawingModel.Text">
            <summary>
            Gets the specified text for render.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultUpdateInfoModel">
            <summary>
            Represents the base model with information for update a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultUpdateInfoModel.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultUpdateInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.ImageUrl">
            <summary>
            Gets the url with captcha image.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.MathBuildInfoModel">
            <summary>
            Represents the model with information for create a math captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.MathBuildInfoModel.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.MathBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.MathBuildInfoModel.MathParamterName">
            <summary>
            Gets the math parameter name.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.NumberCaptchaValue">
            <summary>
                Represents the base model for storing number ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class. This constructor used only for deserialize.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns> <c>True</c> if the value is equals; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="P:CaptchaMvc.Models.NumberCaptchaValue.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.NumberCaptchaValue.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.ParameterModel">
            <summary>
            Represents the base model for captcha parameter.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.ParameterModel.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.ParameterModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.ParameterModel.Name">
            <summary>
            Gets the key in the <see cref="T:CaptchaMvc.Models.ParameterModel"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.ParameterModel.Value">
            <summary>
            Gets the value in the <see cref="T:CaptchaMvc.Models.ParameterModel"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.PartialBuildInfoModel">
            <summary>
            Represents the default model with information for create a partial captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.PartialBuildInfoModel.#ctor(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IBuildInfoModel,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.PartialBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.BuildInfoModel">
            <summary>
            Gets the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.PartialViewName">
            <summary>
            Gets the specified partial view name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ViewData">
            <summary>
            Gets the specified <see cref="T:System.Web.Mvc.ViewDataDictionary"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenParameterName">
            <summary>
            Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RequiredMessage">
            <summary>
            Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.IsRequired">
            <summary>
            Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RefreshButtonText">
            <summary>
            Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.InputText">
            <summary>
            Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.HtmlHelper">
            <summary>
            Gets the specified <see cref="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.InputElementId">
            <summary>
            Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ImageUrl">
            <summary>
            Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RefreshUrl">
            <summary>
            Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.StringCaptchaValue">
            <summary>
                Represents the base model for storing ​string ​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class. This constructor used only for deserialize.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.#ctor(System.String,System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.StringCaptchaValue"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns> <c>True</c> if the value is equals; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.GetOptionalValue">
            <summary>
                Gets the optional values to serialize.
            </summary>
            <returns> An instance of <see cref="T:System.String"/> . </returns>
        </member>
        <member name="P:CaptchaMvc.Models.StringCaptchaValue.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.StringCaptchaValue.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
    </members>
</doc>
